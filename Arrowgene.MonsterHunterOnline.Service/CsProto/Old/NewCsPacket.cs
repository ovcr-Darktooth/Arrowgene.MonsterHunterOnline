/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Structures;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto
{
    public static class NewCsPacket
    {
        /// <summary>
        /// 角色列表请求
        /// </summary>
        public static CsTPacket<CSListRoleReq> ListRoleReq(CSListRoleReq structure)
        {
            return new CsTPacket<CSListRoleReq>(CS_CMD_ID.CS_CMD_LIST_ROLE_REQ, structure);
        }

        /// <summary>
        /// 角色列表响应
        /// </summary>
        public static CsTPacket<CSListRoleRsp> ListRoleRsp(CSListRoleRsp structure)
        {
            return new CsTPacket<CSListRoleRsp>(CS_CMD_ID.CS_CMD_LIST_ROLE_RSP, structure);
        }

        /// <summary>
        /// 角色创建请求
        /// </summary>
        public static CsTPacket<CSRoleCreateInfo> CreateRoleReq(CSRoleCreateInfo structure)
        {
            return new CsTPacket<CSRoleCreateInfo>(CS_CMD_ID.CS_CMD_CREATE_ROLE_REQ, structure);
        }

        /// <summary>
        /// 角色创建响应
        /// </summary>
        public static CsTPacket<CSListRoleRsp> CreateRoleRsp(CSListRoleRsp structure)
        {
            return new CsTPacket<CSListRoleRsp>(CS_CMD_ID.CS_CMD_CREATE_ROLE_RSP, structure);
        }

        /// <summary>
        /// 角色删除请求
        /// </summary>
        public static CsTPacket<CSDeleteRoleReq> DeleteRoleReq(CSDeleteRoleReq structure)
        {
            return new CsTPacket<CSDeleteRoleReq>(CS_CMD_ID.CS_CMD_DELETE_ROLE_REQ, structure);
        }

        /// <summary>
        /// 角色删除响应
        /// </summary>
        public static CsTPacket<CSDeleteRoleRsp> DeleteRoleRsp(CSDeleteRoleRsp structure)
        {
            return new CsTPacket<CSDeleteRoleRsp>(CS_CMD_ID.CS_CMD_DELETE_ROLE_RSP, structure);
        }

        /// <summary>
        /// c-->s,关掉选线UI的时候,发这个包，设置Session状态
        /// </summary>
        public static CsTPacket<CSUnSelectLineReq> UnSelectLineReq(CSUnSelectLineReq structure)
        {
            return new CsTPacket<CSUnSelectLineReq>(CS_CMD_ID.CS_CMD_UNSELECT_LINE_REQ, structure);
        }

        /// <summary>
        /// 双线机房时对选择IP的判定数据信息进行收集上报
        /// </summary>
        public static CsTPacket<CSMultiNetIpinfo> MultiNetIpinfo(CSMultiNetIpinfo structure)
        {
            return new CsTPacket<CSMultiNetIpinfo>(CS_CMD_ID.CS_CMD_MULTI_NET_IPINFO, structure);
        }

        /// <summary>
        /// 进入副本服务器请求
        /// </summary>
        public static CsTPacket<CSEnterInstanceReq> EnterInstanceReq(CSEnterInstanceReq structure)
        {
            return new CsTPacket<CSEnterInstanceReq>(CS_CMD_ID.CS_CMD_ENTER_INSTANCE_REQ, structure);
        }

        /// <summary>
        /// 进入副本服务器响应
        /// </summary>
        public static CsTPacket<CSEnterInstanceRsp> EnterInstanceRsp(CSEnterInstanceRsp structure)
        {
            return new CsTPacket<CSEnterInstanceRsp>(CS_CMD_ID.CS_CMD_ENTER_INSTANCE_RSP, structure);
        }

        /// <summary>
        /// 验证进入副本服务器请求
        /// </summary>
        public static CsTPacket<CSInstanceVerifyReq> InstanceVerifyReq(CSInstanceVerifyReq structure)
        {
            return new CsTPacket<CSInstanceVerifyReq>(CS_CMD_ID.CS_CMD_INSTANCE_VERIFY_REQ, structure);
        }

        /// <summary>
        /// 验证进入副本服务器响应
        /// </summary>
        public static CsTPacket<CSInstanceVerifyRsp> InstanceVerifyRsp(CSInstanceVerifyRsp structure)
        {
            return new CsTPacket<CSInstanceVerifyRsp>(CS_CMD_ID.CS_CMD_INSTANCE_VERIFY_RSP, structure);
        }

        /// <summary>
        /// 离开副本服务器请求
        /// </summary>
        public static CsTPacket<CSLeaveInstanceReq> LeaveInstanceReq(CSLeaveInstanceReq structure)
        {
            return new CsTPacket<CSLeaveInstanceReq>(CS_CMD_ID.CS_CMD_LEAVE_INSTANCE_REQ, structure);
        }

        /// <summary>
        /// 离开副本服务器响应
        /// </summary>
        public static CsTPacket<CSLeaveInstanceRsp> LeaveInstanceRsp(CSLeaveInstanceRsp structure)
        {
            return new CsTPacket<CSLeaveInstanceRsp>(CS_CMD_ID.CS_CMD_LEAVE_INSTANCE_RSP, structure);
        }



        /// <summary>
        /// 双线机房运营商顺序通知
        /// </summary>
        public static CsTPacket<CSMultiIspSequenceNtf> MultiIspSequenceNtf(CSMultiIspSequenceNtf structure)
        {
            return new CsTPacket<CSMultiIspSequenceNtf>(CS_CMD_ID.CS_CMD_MULTI_ISP_SEQUENCE_NTF, structure);
        }

        /// <summary>
        /// 检查版本请求
        /// </summary>
        public static CsTPacket<CSCheckVersionReq> CheckVersionReq(CSCheckVersionReq structure)
        {
            return new CsTPacket<CSCheckVersionReq>(CS_CMD_ID.CS_CMD_CHECK_VERSION_REQ, structure);
        }

        /// <summary>
        /// 检查版本响应
        /// </summary>
        public static CsTPacket<CSCheckVersionRsp> CheckVersionRsp(CSCheckVersionRsp structure)
        {
            return new CsTPacket<CSCheckVersionRsp>(CS_CMD_ID.CS_CMD_CHECK_VERSION_RSP, structure);
        }

        /// <summary>
        /// 关闭逻辑连接请求
        /// </summary>
        public static CsTPacket<CSCloseConnectionReq> CloseConnectionReq(CSCloseConnectionReq structure)
        {
            return new CsTPacket<CSCloseConnectionReq>(CS_CMD_ID.CS_CMD_CLOSE_CONNECTION_REQ, structure);
        }

        /// <summary>
        /// 关闭逻辑连接响应
        /// </summary>
        public static CsTPacket<CSCloseConnectionRsp> CloseConnectionRsp(CSCloseConnectionRsp structure)
        {
            return new CsTPacket<CSCloseConnectionRsp>(CS_CMD_ID.CS_CMD_CLOSE_CONNECTION_RSP, structure);
        }

        /// <summary>
        /// GM进入副本服务器请求
        /// </summary>
        public static CsTPacket<CSGMEnterInstanceReq> GMEnterInstanceReq(CSGMEnterInstanceReq structure)
        {
            return new CsTPacket<CSGMEnterInstanceReq>(CS_CMD_ID.CS_CMD_GM_ENTER_INSTANCE_REQ, structure);
        }

        /// <summary>
        /// 副本剩余时间变化通知
        /// </summary>
        public static CsTPacket<CSInstanceRemainTimeNtf> InstanceRemainTimeNtf(CSInstanceRemainTimeNtf structure)
        {
            return new CsTPacket<CSInstanceRemainTimeNtf>(CS_CMD_ID.CS_CMD_INSTANCE_REMAIN_TIME_NTF, structure);
        }

        /// <summary>
        /// 副本猫车数量变更
        /// </summary>
        public static CsTPacket<CSMaxCatCarCountChangeNtf> MaxCatCarCountChangeNtf(CSMaxCatCarCountChangeNtf structure)
        {
            return new CsTPacket<CSMaxCatCarCountChangeNtf>(CS_CMD_ID.CS_CMD_MAX_CAT_CAR_COUNT_CHANGE_NTF, structure);
        }

        /// <summary>
        /// 进入副本失败返回城镇
        /// </summary>
        public static CsTPacket<CSBackToTown> BackToTown(CSBackToTown structure)
        {
            return new CsTPacket<CSBackToTown>(CS_CMD_ID.CS_CMD_PLAYER_BACK_TO_TOWN, structure);
        }

        /// <summary>
        /// 角色数据错误响应
        /// </summary>
        public static CsTPacket<CSRoleDataErrorRsp> RoleDataErrorRsp(CSRoleDataErrorRsp structure)
        {
            return new CsTPacket<CSRoleDataErrorRsp>(CS_CMD_ID.CS_CMD_ROLEDATA_ERR_RSP, structure);
        }

        
        /// <summary>
        /// 副本结束响应
        /// </summary>
        public static CsTPacket<CSInstanceFinishRsp> InstanceFinishRsp(CSInstanceFinishRsp structure)
        {
            return new CsTPacket<CSInstanceFinishRsp>(CS_CMD_ID.CS_CMD_INSTANCE_FINISH_RSP, structure);
        }

        /// <summary>
        /// 用户或者队长自己UI副本显示同步请求
        /// </summary>
        public static CsTPacket<CSMainInstanceUIReq> MainInstanceUIReq(CSMainInstanceUIReq structure)
        {
            return new CsTPacket<CSMainInstanceUIReq>(CS_CMD_ID.CS_CMD_MAIN_INSTANCE_UI_REQ, structure);
        }

        /// <summary>
        /// 用户或者队长自己UI副本显示同步响应
        /// </summary>
        public static CsTPacket<CSMainInstanceUIRsp> MainInstanceUIRsp(CSMainInstanceUIRsp structure)
        {
            return new CsTPacket<CSMainInstanceUIRsp>(CS_CMD_ID.CS_CMD_MAIN_INSTANCE_UI_RSP, structure);
        }

        /// <summary>
        /// 强制进入某个副本
        /// </summary>
        public static CsTPacket<CSForceEnterInstanceReq> ForceEnterInstanceReq(CSForceEnterInstanceReq structure)
        {
            return new CsTPacket<CSForceEnterInstanceReq>(CS_CMD_ID.CS_CMD_FORCE_ENTER_INSTANCE_REQ, structure);
        }

        /// <summary>
        /// 通用的系统GM命令协议
        /// </summary>
        public static CsTPacket<CSSysGMCmdReq> SysGMCmdReq(CSSysGMCmdReq structure)
        {
            return new CsTPacket<CSSysGMCmdReq>(CS_CMD_ID.CS_CMD_SYSGM_CMD_REQ, structure);
        }

        /// <summary>
        /// 获得所有委托关卡列表请求
        /// </summary>
        public static CsTPacket<CSAllEntrustLevelListReq> AllEntrustLevelListReq(CSAllEntrustLevelListReq structure)
        {
            return new CsTPacket<CSAllEntrustLevelListReq>(CS_CMD_ID.CS_CMD_ALL_ENTRUST_LEVEL_LIST_REQ, structure);
        }

        /// <summary>
        /// 获得所有委托关卡列表回复
        /// </summary>
        public static CsTPacket<CSAllEntrustLevelListRsp> AllEntrustLevelListRsp(CSAllEntrustLevelListRsp structure)
        {
            return new CsTPacket<CSAllEntrustLevelListRsp>(CS_CMD_ID.CS_CMD_ALL_ENTRUST_LEVEL_LIST_RSP, structure);
        }

        /// <summary>
        /// 每日经验上限经验UI提示
        /// </summary>
        public static CsTPacket<CSRemainExpLimitShowNtf> RemainExpLimitShowNtf(CSRemainExpLimitShowNtf structure)
        {
            return new CsTPacket<CSRemainExpLimitShowNtf>(CS_CMD_ID.CS_CMD_REMAIN_EXP_LIMIT_SHOW_NTF, structure);
        }

        /// <summary>
        /// 关闭房间
        /// </summary>
        public static CsTPacket<CSMainInstanceClose> MainInstanceClose(CSMainInstanceClose structure)
        {
            return new CsTPacket<CSMainInstanceClose>(CS_CMD_ID.CS_CMD_MAIN_INSTANCE_CLOSE, structure);
        }

        /// <summary>
        /// 普通限制事件通知
        /// </summary>
        public static CsTPacket<CSNormalLimitEventNtf> NormalLimitEventNtf(CSNormalLimitEventNtf structure)
        {
            return new CsTPacket<CSNormalLimitEventNtf>(CS_CMD_ID.CS_CMD_NORMAL_LIMIT_EVENT_NTF, structure);
        }
        

        /// <summary>
        /// 获得PVP副本的信息
        /// </summary>
        public static CsTPacket<CSPvpInsInfoNtf> PvpInsInfoNtf(CSPvpInsInfoNtf structure)
        {
            return new CsTPacket<CSPvpInsInfoNtf>(CS_CMD_ID.CS_CMD_PVP_INS_INFO_NTF, structure);
        }


        /// <summary>
        /// 通报服务器状态的协议
        /// </summary>
        public static CsTPacket<CSSvrStatusNtf> SvrStatusNtf(CSSvrStatusNtf structure)
        {
            return new CsTPacket<CSSvrStatusNtf>(CS_CMD_ID.CS_CMD_SVRSTATUS_NTF, structure);
        }

        /// <summary>
        /// 进入农场副本服务器请求
        /// </summary>
        public static CsTPacket<CSEnterFarmReq> EnterFarmReq(CSEnterFarmReq structure)
        {
            return new CsTPacket<CSEnterFarmReq>(CS_CMD_ID.CS_CMD_ENTER_FARM_REQ, structure);
        }

        /// <summary>
        /// 进入农场副本服务器回应
        /// </summary>
        public static CsTPacket<CSEnterFarmRsp> EnterFarmRsp(CSEnterFarmRsp structure)
        {
            return new CsTPacket<CSEnterFarmRsp>(CS_CMD_ID.CS_CMD_ENTER_FARM_RSP, structure);
        }

        /// <summary>
        /// 接取委托关卡请求
        /// </summary>
        public static CsTPacket<CSAccpetEntrustLevelReq> AccpetEntrustLevelReq(CSAccpetEntrustLevelReq structure)
        {
            return new CsTPacket<CSAccpetEntrustLevelReq>(CS_CMD_ID.CS_CMD_ACCPET_ENTRUST_LEVEL_REQ, structure);
        }

        /// <summary>
        /// 接取委托关卡回应
        /// </summary>
        public static CsTPacket<CSAccpetEntrustLevelRsp> AccpetEntrustLevelRsp(CSAccpetEntrustLevelRsp structure)
        {
            return new CsTPacket<CSAccpetEntrustLevelRsp>(CS_CMD_ID.CS_CMD_ACCPET_ENTRUST_LEVEL_RSP, structure);
        }

        /// <summary>
        /// 放弃委托关卡请求
        /// </summary>
        public static CsTPacket<CSDropEntrustLevelReq> DropEntrustLevelReq(CSDropEntrustLevelReq structure)
        {
            return new CsTPacket<CSDropEntrustLevelReq>(CS_CMD_ID.CS_CMD_DROP_ENTRUST_LEVEL_REQ, structure);
        }

        /// <summary>
        /// 放弃委托关卡回应
        /// </summary>
        public static CsTPacket<CSDropEntrustLevelRsp> DropEntrustLevelRsp(CSDropEntrustLevelRsp structure)
        {
            return new CsTPacket<CSDropEntrustLevelRsp>(CS_CMD_ID.CS_CMD_DROP_ENTRUST_LEVEL_RSP, structure);
        }

        /// <summary>
        /// 完成委托关卡
        /// </summary>
        public static CsTPacket<CSCompleteEntrustLevelNtf> CompleteEntrustLevelNtf(CSCompleteEntrustLevelNtf structure)
        {
            return new CsTPacket<CSCompleteEntrustLevelNtf>(CS_CMD_ID.CS_CMD_COMPLETE_ENTRUST_LEVEL_NTF, structure);
        }

        /// <summary>
        /// 覆盖委托关卡
        /// </summary>
        public static CsTPacket<CSRecoverEntrustLevelNtf> RecoverEntrustLevelNtf(CSRecoverEntrustLevelNtf structure)
        {
            return new CsTPacket<CSRecoverEntrustLevelNtf>(CS_CMD_ID.CS_CMD_RECOVER_ENTRUST_LEVEL_NTF, structure);
        }

        /// <summary>
        /// 进入委托关卡
        /// </summary>
        public static CsTPacket<CSEnterEntrustLevelReq> EnterEntrustLevelReq(CSEnterEntrustLevelReq structure)
        {
            return new CsTPacket<CSEnterEntrustLevelReq>(CS_CMD_ID.CS_CMD_ENTER_ENTRUST_LEVEL_REQ, structure);
        }

        /// <summary>
        /// 进入委托关卡
        /// </summary>
        public static CsTPacket<CSGMEnterEntrustLevelReq> GMEnterEntrustLevelReq(CSGMEnterEntrustLevelReq structure)
        {
            return new CsTPacket<CSGMEnterEntrustLevelReq>(CS_CMD_ID.CS_CMD_GM_ENTER_ENTRUST_LEVEL_REQ, structure);
        }

        /// <summary>
        /// 获得委托关卡列表请求
        /// </summary>
        public static CsTPacket<CSEntrustLevelListReq> EntrustLevelListReq(CSEntrustLevelListReq structure)
        {
            return new CsTPacket<CSEntrustLevelListReq>(CS_CMD_ID.CS_CMD_ENTRUST_LEVEL_LIST_REQ, structure);
        }

        /// <summary>
        /// 获得委托关卡列表回复
        /// </summary>
        public static CsTPacket<CSEntrustLevelListRsp> EntrustLevelListRsp(CSEntrustLevelListRsp structure)
        {
            return new CsTPacket<CSEntrustLevelListRsp>(CS_CMD_ID.CS_CMD_ENTRUST_LEVEL_LIST_RSP, structure);
        }

        /// <summary>
        /// 委托周期次数限制事件通知
        /// </summary>
        public static CsTPacket<CSPeriodLimitEventNtf> EntrustPeriodLimitEventNtf(CSPeriodLimitEventNtf structure)
        {
            return new CsTPacket<CSPeriodLimitEventNtf>(CS_CMD_ID.CS_CMD_PERIOD_LIMIT_EVENT_NTF, structure);
        }

        /// <summary>
        /// 副本动态数据通知
        /// </summary>
        public static CsTPacket<CSInstanceDynamicInfoNtf> InstanceDynamicInfoNtf(CSInstanceDynamicInfoNtf structure)
        {
            return new CsTPacket<CSInstanceDynamicInfoNtf>(CS_CMD_ID.CS_CMD_INSTANCE_DYNAMIC_INFO_NTF, structure);
        }

        /// <summary>
        /// 切换TOWN地图请求
        /// </summary>
        public static CsTPacket<CSChangeTownInstanceReq> ChangeTownInstanceReq(CSChangeTownInstanceReq structure)
        {
            return new CsTPacket<CSChangeTownInstanceReq>(CS_CMD_ID.CS_CMD_CHANGE_TOWN_INSTANCE_REQ, structure);
        }

        /// <summary>
        /// 切换TOWN地图回复
        /// </summary>
        public static CsTPacket<CSChangeTownInstanceRsp> ChangeTownInstanceRsp(CSChangeTownInstanceRsp structure)
        {
            return new CsTPacket<CSChangeTownInstanceRsp>(CS_CMD_ID.CS_CMD_CHANGE_TOWN_INSTANCE_RSP, structure);
        }

        /// <summary>
        /// 防沉迷信息通知
        /// </summary>
        public static CsTPacket<CSAasInfoNotify> AasInfoNotify(CSAasInfoNotify structure)
        {
            return new CsTPacket<CSAasInfoNotify>(CS_CMD_ID.CS_CMD_AAS_INFORMATION_NTF, structure);
        }

        /// <summary>
        /// TSSANTI接口花费时间通知
        /// </summary>
        public static CsTPacket<CSessionTSSTimeNotify> SessionTSSTimeNotify(CSessionTSSTimeNotify structure)
        {
            return new CsTPacket<CSessionTSSTimeNotify>(CS_CMD_ID.CS_CMD_SESSION_TSS_TIME_NTF, structure);
        }

        public static CsTPacket<CSBTDebugBSListReq> BTDebugBSListReq(CSBTDebugBSListReq structure)
        {
            return new CsTPacket<CSBTDebugBSListReq>(CS_CMD_ID.CS_CMD_DEBUGSERVICE_BS_LIST_REQ, structure);
        }

        public static CsTPacket<CSBTDebugBSListRsp> BTDebugBSListRsp(CSBTDebugBSListRsp structure)
        {
            return new CsTPacket<CSBTDebugBSListRsp>(CS_CMD_ID.CS_CMD_DEBUGSERVICE_BS_LIST_RSP, structure);
        }

        public static CsTPacket<CSBTDebugBGListReq> BTDebugBGListReq(CSBTDebugBGListReq structure)
        {
            return new CsTPacket<CSBTDebugBGListReq>(CS_CMD_ID.CS_CMD_DEBUGSERVICE_BG_LIST_REQ, structure);
        }

        public static CsTPacket<CSBTDebugBGListRsp> BTDebugBGListRsp(CSBTDebugBGListRsp structure)
        {
            return new CsTPacket<CSBTDebugBGListRsp>(CS_CMD_ID.CS_CMD_DEBUGSERVICE_BG_LIST_RSP, structure);
        }

        /// <summary>
        /// 副本周期信息
        /// </summary>
        public static CsTPacket<CSLevelPeriodLimitNotify> LevelPeriodLimitNotify(CSLevelPeriodLimitNotify structure)
        {
            return new CsTPacket<CSLevelPeriodLimitNotify>(CS_CMD_ID.CS_CMD_LEVEL_PERIOD_LIMIT_INFO_NTF, structure);
        }

        /// <summary>
        /// 赛制周期信息
        /// </summary>
        public static CsTPacket<CSLevelTournamentPeriodLimitNotify> LevelTournamentPeriodLimitNotify(
            CSLevelTournamentPeriodLimitNotify structure)
        {
            return new CsTPacket<CSLevelTournamentPeriodLimitNotify>(CS_CMD_ID.CS_CMD_LEVEL_TOURNAMENTS_LIMIT_INFO_NTF,
                structure);
        }

        /// <summary>
        /// 排队信息
        /// </summary>
        public static CsTPacket<CSWaitQueueInfo> WaitQueueInfo(CSWaitQueueInfo structure)
        {
            return new CsTPacket<CSWaitQueueInfo>(CS_CMD_ID.CS_CMD_WAITQUEUE_INFO, structure);
        }

        /// <summary>
        ///  c-->s,登陆角色时，选择某个线
        /// </summary>
        public static CsTPacket<CSSelectLineReq> SelectLineReq(CSSelectLineReq structure)
        {
            return new CsTPacket<CSSelectLineReq>(CS_CMD_ID.CS_CMD_SELECT_LINE_REQ, structure);
        }

        /// <summary>
        ///  c-->s,换线请求, 请求Line信息
        /// </summary>
        public static CsTPacket<CSLineInfoReq> LineInfoReq(CSLineInfoReq structure)
        {
            return new CsTPacket<CSLineInfoReq>(CS_CMD_ID.CS_CMD_LINEINFO_REQ, structure);
        }

        /// <summary>
        /// S--C, Line信息，包括可选列表，以及繁忙状态
        /// </summary>
        public static CsTPacket<CSLineInfoRsp> LineInfoRsp(CSLineInfoRsp structure)
        {
            return new CsTPacket<CSLineInfoRsp>(CS_CMD_ID.CS_CMD_LINEINFO_RSP, structure);
        }

        /// <summary>
        /// c-->s, 要求客户端换线
        /// </summary>
        public static CsTPacket<CSSwitchLineReq> SwitchLineReq(CSSwitchLineReq structure)
        {
            return new CsTPacket<CSSwitchLineReq>(CS_CMD_ID.CS_CMD_SWITCH_LINE_REQ, structure);
        }

        /// <summary>
        /// s-->c,失败时返回，不失败，直接回切线操作
        /// </summary>
        public static CsTPacket<CSStandardRsp> SwitchLineRsp(CSStandardRsp structure)
        {
            return new CsTPacket<CSStandardRsp>(CS_CMD_ID.CS_CMD_SWITCH_LINE_RSP, structure);
        }

        /// <summary>
        /// s-->c,要求客户端换线,客户端要清楚当前地图所有由服务器发消息创建的logicentity
        /// </summary>
        public static CsTPacket<CSNewLineInfo> NewLineInfo(CSNewLineInfo structure)
        {
            return new CsTPacket<CSNewLineInfo>(CS_CMD_ID.CS_CMD_SWITCH_LINE, structure);
        }

        /// <summary>
        /// 选择狩猎包请求
        /// </summary>
        public static CsTPacket<CSSelectHuntingBagReq> SelectHuntingBagReq(CSSelectHuntingBagReq structure)
        {
            return new CsTPacket<CSSelectHuntingBagReq>(CS_CMD_ID.CS_CMD_SELECT_HUNTING_BAG_REQ, structure);
        }

        /// <summary>
        /// 选择狩猎包响应
        /// </summary>
        public static CsTPacket<CSSelectHuntingBagRsp> SelectHuntingBagRsp(CSSelectHuntingBagRsp structure)
        {
            return new CsTPacket<CSSelectHuntingBagRsp>(CS_CMD_ID.CS_CMD_SELECT_HUNTING_BAG_RSP, structure);
        }

        /// <summary>
        /// 进入副本UI流程全部OK
        /// </summary>
        public static CsTPacket<CSSelectUIProcessOKNtf> SelectUIProcessOKNtf(CSSelectUIProcessOKNtf structure)
        {
            return new CsTPacket<CSSelectUIProcessOKNtf>(CS_CMD_ID.CS_CMD_SELECT_UI_PROCESS_OK_NTF, structure);
        }

        /// <summary>
        /// s-c 关卡目标信息变更
        /// </summary>
        public static CsTPacket<CSBattleTargetChangeNtf> BattleTargetChangeNtf(CSBattleTargetChangeNtf structure)
        {
            return new CsTPacket<CSBattleTargetChangeNtf>(CS_CMD_ID.CS_CMD_BATTLE_TARGET_CHANGE_NTF, structure);
        }

        /// <summary>
        /// s-c 关卡目标信息列表
        /// </summary>
        public static CsTPacket<CSBattleTargetList> BattleTargetList(CSBattleTargetList structure)
        {
            return new CsTPacket<CSBattleTargetList>(CS_CMD_ID.CS_CMD_BATTLE_TARGET_LIST_NTF, structure);
        }

        /// <summary>
        /// 打断CutScene
        /// </summary>
        public static CsTPacket<CSBreakCutSceneNtf> BreakCutSceneNtf(CSBreakCutSceneNtf structure)
        {
            return new CsTPacket<CSBreakCutSceneNtf>(CS_CMD_ID.CS_CMD_BREAK_CUT_SCENE_NTF, structure);
        }

        /// <summary>
        /// 赛制周期信息清理
        /// </summary>
        public static CsTPacket<CSLevelTournamentPeriodLimitClearNotify> LevelTournamentPeriodLimitClearNotify(
            CSLevelTournamentPeriodLimitClearNotify structure)
        {
            return new CsTPacket<CSLevelTournamentPeriodLimitClearNotify>(
                CS_CMD_ID.CS_CMD_LEVEL_TOURNAMENTS_LIMIT_CLEAR_NTF, structure);
        }

        /// <summary>
        /// 银币上限提示
        /// </summary>
        public static CsTPacket<CSSilverTipsReq> SilverTipsReq(CSSilverTipsReq structure)
        {
            return new CsTPacket<CSSilverTipsReq>(CS_CMD_ID.CS_CMD_SILVERTIPS_REQ, structure);
        }

        /// <summary>
        /// 滚动公告(gm指令)
        /// </summary>
        public static CsTPacket<CSNoticeNtf> NoticeNtf(CSNoticeNtf structure)
        {
            return new CsTPacket<CSNoticeNtf>(CS_CMD_ID.CS_CMD_NOTICE_NTF, structure);
        }

        /// <summary>
        /// 邀请玩家加入房间
        /// </summary>
        public static CsTPacket<CSBsmInviteJoinRoomNtf> BsmInviteJoinRoomNtf(CSBsmInviteJoinRoomNtf structure)
        {
            return new CsTPacket<CSBsmInviteJoinRoomNtf>(CS_CMD_ID.CS_CMD_BSM_INVITE_JOIN_ROOM_NTF, structure);
        }

        /// <summary>
        /// 玩家加入房间
        /// </summary>
        public static CsTPacket<CSBsmJoinRoomReq> BsmJoinRoomReq(CSBsmJoinRoomReq structure)
        {
            return new CsTPacket<CSBsmJoinRoomReq>(CS_CMD_ID.CS_CMD_BSM_JOIN_ROOM_REQ, structure);
        }

        /// <summary>
        /// 玩家加入房间
        /// </summary>
        public static CsTPacket<CSBsmJoinRoomRsp> BsmJoinRoomRsp(CSBsmJoinRoomRsp structure)
        {
            return new CsTPacket<CSBsmJoinRoomRsp>(CS_CMD_ID.CS_CMD_BSM_JOIN_ROOM_RSP, structure);
        }

        /// <summary>
        /// 副本房间操作返回
        /// </summary>
        public static CsTPacket<CSBSMRoomOperRsp> BSMRoomOpRsp(CSBSMRoomOperRsp structure)
        {
            return new CsTPacket<CSBSMRoomOperRsp>(CS_CMD_ID.CS_CMD_BSM_OP_RSP, structure);
        }

        /// <summary>
        /// 怪物的AI当前状态
        /// </summary>
        public static CsTPacket<CSMonsterAiStateInfo> MonsterAiStateInfo(CSMonsterAiStateInfo structure)
        {
            return new CsTPacket<CSMonsterAiStateInfo>(CS_CMD_ID.CS_CMD_MONSTERAI_INFO, structure);
        }

        /// <summary>
        /// 服务器异常通知
        /// </summary>
        public static CsTPacket<CSServerAbnormalNtf> ServerAbnormalNtf(CSServerAbnormalNtf structure)
        {
            return new CsTPacket<CSServerAbnormalNtf>(CS_CMD_ID.CS_CMD_SERVER_ABNORMAL_NTF, structure);
        }

        /// <summary>
        /// 怪物的GM处理返回
        /// </summary>
        public static CsTPacket<CSMonsterGmRespInfo> MonsterGmResp(CSMonsterGmRespInfo structure)
        {
            return new CsTPacket<CSMonsterGmRespInfo>(CS_CMD_ID.CS_CMD_MONSTER_GM_RESP, structure);
        }

        /// <summary>
        /// 进入工会副本服务器请求
        /// </summary>
        public static CsTPacket<CSEnterGuildLevelReq> EnterGuildLevelReq(CSEnterGuildLevelReq structure)
        {
            return new CsTPacket<CSEnterGuildLevelReq>(CS_CMD_ID.CS_CMD_ENTER_GUILDLEVEL_REQ, structure);
        }

        /// <summary>
        /// 进入工会副本服务器回应
        /// </summary>
        public static CsTPacket<CSEnterGuildLevelRsp> EnterGuildLevelRsp(CSEnterGuildLevelRsp structure)
        {
            return new CsTPacket<CSEnterGuildLevelRsp>(CS_CMD_ID.CS_CMD_ENTER_GUILDLEVEL_RSP, structure);
        }

        /// <summary>
        /// 离开工会副本服务器请求
        /// </summary>
        public static CsTPacket<CSLeaveGuildLevelReq> LeaveGuildLevelReq(CSLeaveGuildLevelReq structure)
        {
            return new CsTPacket<CSLeaveGuildLevelReq>(CS_CMD_ID.CS_CMD_LEAVE_GUILDLEVEL_REQ, structure);
        }

        /// <summary>
        /// 离开工会副本服务器回应
        /// </summary>
        public static CsTPacket<CSLeaveGuildLevelRsp> LeaveGuildLevelRsp(CSLeaveGuildLevelRsp structure)
        {
            return new CsTPacket<CSLeaveGuildLevelRsp>(CS_CMD_ID.CS_CMD_LEAVE_GUILDLEVEL_RSP, structure);
        }

        /// <summary>
        /// 恢复角色请求
        /// </summary>
        public static CsTPacket<CSRestoreRoleReq> RestoreRoleReq(CSRestoreRoleReq structure)
        {
            return new CsTPacket<CSRestoreRoleReq>(CS_CMD_ID.CS_CMD_RESTORE_ROLE_REQ, structure);
        }

        /// <summary>
        /// 恢复角色响应
        /// </summary>
        public static CsTPacket<CSRestoreRoleRsp> RestoreRoleRsp(CSRestoreRoleRsp structure)
        {
            return new CsTPacket<CSRestoreRoleRsp>(CS_CMD_ID.CS_CMD_RESTORE_ROLE_RSP, structure);
        }

        /// <summary>
        /// 高等级角色删除倒计时结束请求
        /// </summary>
        public static CsTPacket<CSCountdownEndReq> CountdownEndReq(CSCountdownEndReq structure)
        {
            return new CsTPacket<CSCountdownEndReq>(CS_CMD_ID.CS_CMD_COUNTDOWN_END_REQ, structure);
        }

        /// <summary>
        /// 高等级角色删除倒计时结束响应
        /// </summary>
        public static CsTPacket<CSCountdownEndRsp> CountdownEndRsp(CSCountdownEndRsp structure)
        {
            return new CsTPacket<CSCountdownEndRsp>(CS_CMD_ID.CS_CMD_COUNTDOWN_END_RSP, structure);
        }

        public static CsTPacket<CSSystemUnlockNtf> SystemUnlockNtf(CSSystemUnlockNtf structure)
        {
            return new CsTPacket<CSSystemUnlockNtf>(CS_CMD_ID.CS_CMD_SYSTEM_UNLOCK_NTF, structure);
        }

        public static CsTPacket<CSSystemLockNtf> SystemLockNtf(CSSystemLockNtf structure)
        {
            return new CsTPacket<CSSystemLockNtf>(CS_CMD_ID.CS_CMD_SYSTEM_LOCK_NTF, structure);
        }

        /// <summary>
        /// 玩家信息查询请求
        /// </summary>
        public static CsTPacket<CSPlayerQueryReq> PlayerQueryReq(CSPlayerQueryReq structure)
        {
            return new CsTPacket<CSPlayerQueryReq>(CS_CMD_ID.CS_CMD_PLAYER_QUERY_REQ, structure);
        }

        /// <summary>
        /// 玩家信息查询
        /// </summary>
        public static CsTPacket<CSPlayerQueryInfo> PlayerQueryInfo(CSPlayerQueryInfo structure)
        {
            return new CsTPacket<CSPlayerQueryInfo>(CS_CMD_ID.CS_CMD_PLAYER_QUERY_INFO, structure);
        }

        /// <summary>
        /// 玩家参加猎团预选赛
        /// </summary>
        public static CsTPacket<CSEnterGuildMatchQualifierReq> EnterGuildMatchQualifierReq(
            CSEnterGuildMatchQualifierReq structure)
        {
            return new CsTPacket<CSEnterGuildMatchQualifierReq>(CS_CMD_ID.CS_CMD_ENTER_GUILD_MATCH_QUALIFIER_REQ,
                structure);
        }

        /// <summary>
        /// 玩家参加猎团预选赛
        /// </summary>
        public static CsTPacket<CSEnterGuildMatchQualifierRsp> EnterGuildMatchQualifierRsp(
            CSEnterGuildMatchQualifierRsp structure)
        {
            return new CsTPacket<CSEnterGuildMatchQualifierRsp>(CS_CMD_ID.CS_CMD_ENTER_GUILD_MATCH_QUALIFIER_RSP,
                structure);
        }

        /// <summary>
        /// 请求物品列表
        /// </summary>
        public static CsTPacket<CSItemListReq> ItemListReq(CSItemListReq structure)
        {
            return new CsTPacket<CSItemListReq>(CS_CMD_ID.CS_CMD_ITEM_LIST_REQ, structure);
        }

        /// <summary>
        /// 响应物品列表
        /// </summary>
        public static CsTPacket<ItemListRsp> ItemListRsp(ItemListRsp structure)
        {
            return new CsTPacket<ItemListRsp>(CS_CMD_ID.CS_CMD_ITEM_LIST_RSP, structure);
        }

        /// <summary>
        /// 客户端文件数据校验请求
        /// </summary>
        public static CsTPacket<C2SFileCheckReq> C2SFileCheckReq(C2SFileCheckReq structure)
        {
            return new CsTPacket<C2SFileCheckReq>(CS_CMD_ID.CS_CMD_FILE_CHECK, structure);
        }

        /// <summary>
        /// 客户端文件数据校验结果
        /// </summary>
        public static CsTPacket<S2CFileCheckRsp> S2CFileCheckRsp(S2CFileCheckRsp structure)
        {
            return new CsTPacket<S2CFileCheckRsp>(CS_CMD_ID.SC_CMD_FILE_CHECK_RLT, structure);
        }

        /// <summary>
        /// 客户端本地副本请求
        /// </summary>
        public static CsTPacket<CSLocalBatOPReq> LocalBatOPReq(CSLocalBatOPReq structure)
        {
            return new CsTPacket<CSLocalBatOPReq>(CS_CMD_ID.C2S_CMD_LOCALBAT_OP_REQ, structure);
        }

        /// <summary>
        /// 客户端本地副本响应
        /// </summary>
        public static CsTPacket<CSLocalBatOPRsp> LocalBatOPRsp(CSLocalBatOPRsp structure)
        {
            return new CsTPacket<CSLocalBatOPRsp>(CS_CMD_ID.S2C_CMD_LOCALBAT_OP_RSP, structure);
        }

        /// <summary>
        /// 客户端举报请求
        /// </summary>
        public static CsTPacket<CSReportReq> ReportReq(CSReportReq structure)
        {
            return new CsTPacket<CSReportReq>(CS_CMD_ID.CS_CMD_REPORT_REQ, structure);
        }

        /// <summary>
        /// 客户端举报响应
        /// </summary>
        public static CsTPacket<CSReportRsp> ReportRsp(CSReportRsp structure)
        {
            return new CsTPacket<CSReportRsp>(CS_CMD_ID.CS_CMD_REPORT_RSP, structure);
        }

        /// <summary>
        /// 购买经验上限响应
        /// </summary>
        public static CsTPacket<CSBuyExpLimitRsp> BuyExpLimitRsp(CSBuyExpLimitRsp structure)
        {
            return new CsTPacket<CSBuyExpLimitRsp>(CS_CMD_ID.CS_CMD_BUY_EXP_LIMIT_RSP, structure);
        }

        /// <summary>
        /// 付费重新捏脸请求
        /// </summary>
        public static CsTPacket<CSModifyFaceReq> ModifyFaceReq(CSModifyFaceReq structure)
        {
            return new CsTPacket<CSModifyFaceReq>(CS_CMD_ID.CS_CMD_MODIFY_FACE_REQ, structure);
        }

        /// <summary>
        /// 付费重新捏脸响应
        /// </summary>
        public static CsTPacket<CSModifyFaceRsp> ModifyFaceRsp(CSModifyFaceRsp structure)
        {
            return new CsTPacket<CSModifyFaceRsp>(CS_CMD_ID.CS_CMD_MODIFY_FACE_RSP, structure);
        }

        /// <summary>
        /// 自动发起某些流程
        /// </summary>
        public static CsTPacket<CSAutoStartProcess> AutoStartProcess(CSAutoStartProcess structure)
        {
            return new CsTPacket<CSAutoStartProcess>(CS_CMD_ID.CS_CMD_AUTO_START_PROCESS, structure);
        }

        /// <summary>
        /// 每日刷新
        /// </summary>
        public static CsTPacket<CSPlayerDailyRefresh> PlayerDailyRefresh(CSPlayerDailyRefresh structure)
        {
            return new CsTPacket<CSPlayerDailyRefresh>(CS_CMD_ID.CS_CMD_PLAYER_DAILY_REFRESH, structure);
        }

        /// <summary>
        /// 设置个人武器显示
        /// </summary>
        public static CsTPacket<C2SWeaponTrialShow> WeaponTrialShow(C2SWeaponTrialShow structure)
        {
            return new CsTPacket<C2SWeaponTrialShow>(CS_CMD_ID.CS_CMD_WEAPONTRIAL_SHOW, structure);
        }

        /// <summary>
        /// 客户端打LOG
        /// </summary>
        public static CsTPacket<CSClientSendLog> ClientSendLogNewplayer(CSClientSendLog structure)
        {
            return new CsTPacket<CSClientSendLog>(CS_CMD_ID.CS_CMD_CLIENT_SEND_LOG_NEWPLAYER, structure);
        }

        /// <summary>
        /// 通知
        /// </summary>
        public static CsTPacket<Notify> S2CNotify(Notify structure)
        {
            return new CsTPacket<Notify>(CS_CMD_ID.S2C_CMD_NOTIFY, structure);
        }

        /// <summary>
        /// 错误
        /// </summary>
        public static CsTPacket<Err> S2CErr(Err structure)
        {
            return new CsTPacket<Err>(CS_CMD_ID.S2C_CMD_ERR, structure);
        }



        /// <summary>
        /// 发送给客户端的聊天请求错误返回
        /// </summary>
        public static CsTPacket<CSChatRsp> ChatRsp(CSChatRsp structure)
        {
            return new CsTPacket<CSChatRsp>(CS_CMD_ID.CS_CMD_CHAT_RSP, structure);
        }
        
        /// <summary>
        /// 系统提示
        /// </summary>
        public static CsTPacket<CSChatSystemMsgNtf> ChatSystemMsgNtf(CSChatSystemMsgNtf structure)
        {
            return new CsTPacket<CSChatSystemMsgNtf>(CS_CMD_ID.CS_CMD_CHAT_SYSTEM_MSG_NTF, structure);
        }

        /// <summary>
        /// 客户端发送的喇叭聊天请求
        /// </summary>
        public static CsTPacket<CSChatHornReq> ChatHornReq(CSChatHornReq structure)
        {
            return new CsTPacket<CSChatHornReq>(CS_CMD_ID.CS_CMD_CHAT_HORN_REQ, structure);
        }

        /// <summary>
        /// 系统滚动公告(idip)
        /// </summary>
        public static CsTPacket<CSSysNoticeNtf> SysNoticeNtf(CSSysNoticeNtf structure)
        {
            return new CsTPacket<CSSysNoticeNtf>(CS_CMD_ID.CS_CMD_SYS_NOTICE_NTF, structure);
        }

        /// <summary>
        /// 系统提示请求
        /// </summary>
        public static CsTPacket<CSChatSystemMsgReq> ChatSystemMsgReq(CSChatSystemMsgReq structure)
        {
            return new CsTPacket<CSChatSystemMsgReq>(CS_CMD_ID.CS_CMD_CHAT_SYSTEM_MSG_REQ, structure);
        }

        /// <summary>
        /// 滚动公告(idip)
        /// </summary>
        public static CsTPacket<CSIdipNoticeNtf> IdipNoticeNtf(CSIdipNoticeNtf structure)
        {
            return new CsTPacket<CSIdipNoticeNtf>(CS_CMD_ID.CS_CMD_IDIP_NOTICE_NTF, structure);
        }

        /// <summary>
        /// 表情升级通知
        /// </summary>
        public static CsTPacket<CSExpressionLevelupNtf> ExpressionLevelupNtf(CSExpressionLevelupNtf structure)
        {
            return new CsTPacket<CSExpressionLevelupNtf>(CS_CMD_ID.CS_CMD_EXPRESSION_LEVELUP_NTF, structure);
        }

        /// <summary>
        /// 客户端聊天查询对方玩家信息请求
        /// </summary>
        public static CsTPacket<CSChatTargetQueryReq> ChatTargetQueryReq(CSChatTargetQueryReq structure)
        {
            return new CsTPacket<CSChatTargetQueryReq>(CS_CMD_ID.CS_CMD_CHAT_TARGET_QUERY_REQ, structure);
        }

        /// <summary>
        /// 客户端聊天查询对方玩家信息响应
        /// </summary>
        public static CsTPacket<CSChatTargetQueryRsp> ChatTargetQueryRsp(CSChatTargetQueryRsp structure)
        {
            return new CsTPacket<CSChatTargetQueryRsp>(CS_CMD_ID.CS_CMD_CHAT_TARGET_QUERY_RSP, structure);
        }

        /// <summary>
        /// 表情设置默认使用请求
        /// </summary>
        public static CsTPacket<CSExpressionCollectReq> ExpressionCollectReq(CSExpressionCollectReq structure)
        {
            return new CsTPacket<CSExpressionCollectReq>(CS_CMD_ID.CS_CMD_EXPRESSION_COLLECT_REQ, structure);
        }

        /// <summary>
        /// 战斗使用招式消息
        /// </summary>
        public static CsTPacket<CSBattleUseAction> Action(CSBattleUseAction structure)
        {
            return new CsTPacket<CSBattleUseAction>(CS_CMD_ID.CS_CMD_BATTLE_ACTION, structure);
        }

        /// <summary>
        /// Spawn New Player Request When Spawn Entity
        /// </summary>
        public static CsTPacket<CSSpawnNewPlayer> NewPlayer(CSSpawnNewPlayer structure)
        {
            return new CsTPacket<CSSpawnNewPlayer>(CS_CMD_ID.CS_CMD_SPAWN_NEWPLAYER, structure);
        }

        /// <summary>
        /// Assign Player Identity to New Spawn Entity
        /// </summary>
        public static CsTPacket<CSAssignPlayerId> AssignId(CSAssignPlayerId structure)
        {
            return new CsTPacket<CSAssignPlayerId>(CS_CMD_ID.CS_CMD_ASSIGN_PLAYERID, structure);
        }

        /// <summary>
        /// Spawn player with given parameter
        /// </summary>
        public static CsTPacket<CSSpawnPlayer> SpawnPlayer(CSSpawnPlayer structure)
        {
            return new CsTPacket<CSSpawnPlayer>(CS_CMD_ID.CS_CMD_SPAWN_PLAYER, structure);
        }

        /// <summary>
        /// Set client game status
        /// </summary>
        public static CsTPacket<CSSetClientState> SetState(CSSetClientState structure)
        {
            return new CsTPacket<CSSetClientState>(CS_CMD_ID.CS_CMD_SETCLIENTSTATE, structure);
        }

        /// <summary>
        /// Load level notify
        /// </summary>
        public static CsTPacket<CSLoadLevelNtf> LoadLevelNtf(CSLoadLevelNtf structure)
        {
            return new CsTPacket<CSLoadLevelNtf>(CS_CMD_ID.CS_CMD_LOADLEVEL_NTF, structure);
        }

        /// <summary>
        /// Remove a player when disconnected
        /// </summary>
        public static CsTPacket<CSRemovePlayer> DelPlayer(CSRemovePlayer structure)
        {
            return new CsTPacket<CSRemovePlayer>(CS_CMD_ID.CS_CMD_REMOVE_PLAYER, structure);
        }

        /// <summary>
        /// Remove server entity
        /// </summary>
        public static CsTPacket<CSRemoveSrvEnt> RemoveSrvEnt(CSRemoveSrvEnt structure)
        {
            return new CsTPacket<CSRemoveSrvEnt>(CS_CMD_ID.CS_CMD_REMOVE_SRVENT, structure);
        }

        /// <summary>
        /// Remove server entities list
        /// </summary>
        public static CsTPacket<CSRemoveSrvEntList> RemoveSrvEntList(CSRemoveSrvEntList structure)
        {
            return new CsTPacket<CSRemoveSrvEntList>(CS_CMD_ID.CS_CMD_REMOVE_SRVENTLIST, structure);
        }

        /// <summary>
        /// Client state id
        /// </summary>
        public static CsTPacket<CSStateId> ClientStateId(CSStateId structure)
        {
            return new CsTPacket<CSStateId>(CS_CMD_ID.CS_CMD_CLIENT_STATEID, structure);
        }
        
        /// <summary>
        /// 新场景特效
        /// </summary>
        public static CsTPacket<CSSceneEffect> SceneEffectAppear(CSSceneEffect structure)
        {
            return new CsTPacket<CSSceneEffect>(CS_CMD_ID.CS_CMD_SCENE_EFFECT_APPEAR_NTF, structure);
        }

        /// <summary>
        /// 场景特效消失
        /// </summary>
        public static CsTPacket<CSSceneEffectDisappearNtf> SceneEffectDel(CSSceneEffectDisappearNtf structure)
        {
            return new CsTPacket<CSSceneEffectDisappearNtf>(CS_CMD_ID.CS_CMD_SCENE_EFFECT_DISAPPEAR_NTF, structure);
        }

        /// <summary>
        /// 场景礼花特效同步
        /// </summary>
        public static CsTPacket<CSSceneEffectNtfList> SceneEffectList(CSSceneEffectNtfList structure)
        {
            return new CsTPacket<CSSceneEffectNtfList>(CS_CMD_ID.CS_CMD_SCENE_EFFECT_APPEAR_LIST_NTF, structure);
        }
        
        /// <summary>
        /// PVP即时成就通知
        /// </summary>
        public static CsTPacket<CSPvpAchievementNtf> PvpAchievementNtf(CSPvpAchievementNtf structure)
        {
            return new CsTPacket<CSPvpAchievementNtf>(CS_CMD_ID.CS_CMD_PVP_ACHIEVEMENT_NTF, structure);
        }

        /// <summary>
        /// PVP GOD LUCK 通知
        /// </summary>
        public static CsTPacket<CSPvpGodLuckNtf> PvpGodLuckNtf(CSPvpGodLuckNtf structure)
        {
            return new CsTPacket<CSPvpGodLuckNtf>(CS_CMD_ID.CS_CMD_PVP_GOD_LUCK_NTF, structure);
        }

        /// <summary>
        /// PVP玩家杀死玩家信息通知
        /// </summary>
        public static CsTPacket<CSPvpPlayerKillNtf> PvpPlayerKillNtf(CSPvpPlayerKillNtf structure)
        {
            return new CsTPacket<CSPvpPlayerKillNtf>(CS_CMD_ID.CS_CMD_PVP_KILL_PLAYER_INFO_NTF, structure);
        }

        /// <summary>
        /// PVP玩家伤害玩家信息通知
        /// </summary>
        public static CsTPacket<CSPvpPlayerDamageNtf> PvpPlayerDamageNtf(CSPvpPlayerDamageNtf structure)
        {
            return new CsTPacket<CSPvpPlayerDamageNtf>(CS_CMD_ID.CS_CMD_PVP_DAMAGE_PLAYER_INFO_NTF, structure);
        }

        /// <summary>
        /// PVP场景爆炸信息通知
        /// </summary>
        public static CsTPacket<CSPvpExpldeInfoNtf> PvpExpldeInfoNtf(CSPvpExpldeInfoNtf structure)
        {
            return new CsTPacket<CSPvpExpldeInfoNtf>(CS_CMD_ID.CS_CMD_PVP_EXPLODE_INFO_NTF, structure);
        }

        /// <summary>
        /// 动画入队消息
        /// </summary>
        public static CsTPacket<CSBattleStartAnim> StartAnim(CSBattleStartAnim structure)
        {
            return new CsTPacket<CSBattleStartAnim>(CS_CMD_ID.CS_CMD_BATTLE_START_ANIM, structure);
        }

        /// <summary>
        /// 动画停止消息
        /// </summary>
        public static CsTPacket<CSBattleStopAnim> StopAnim(CSBattleStopAnim structure)
        {
            return new CsTPacket<CSBattleStopAnim>(CS_CMD_ID.CS_CMD_BATTLE_STOP_ANIM, structure);
        }

        /// <summary>
        /// 动画出队消息
        /// </summary>
        public static CsTPacket<CSBattleRemoveAnim> RemoveAnim(CSBattleRemoveAnim structure)
        {
            return new CsTPacket<CSBattleRemoveAnim>(CS_CMD_ID.CS_CMD_BATTLE_REMOVE_ANIM, structure);
        }

        /// <summary>
        /// 对固定速度、加速度的运动Entity位移做同步的消息
        /// </summary>
        public static CsTPacket<CSBattleEntitySpeed> EntitySpeed(CSBattleEntitySpeed structure)
        {
            return new CsTPacket<CSBattleEntitySpeed>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_SPEED, structure);
        }

        /// <summary>
        /// Actor位置同步消息
        /// </summary>
        public static CsTPacket<CSBattleLocation> Location(CSBattleLocation structure)
        {
            return new CsTPacket<CSBattleLocation>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_LOCATION, structure);
        }

        /// <summary>
        /// GameObjectEvent网络发送消息
        /// </summary>
        public static CsTPacket<CSBattleGameObjEevnt> GameObjEvent(CSBattleGameObjEevnt structure)
        {
            return new CsTPacket<CSBattleGameObjEevnt>(CS_CMD_ID.CS_CMD_BATTLE_GAME_OBJECT_EVENT, structure);
        }

        /// <summary>
        /// GameObjectEvent网络发送消息
        /// </summary>
        public static CsTPacket<CSBattleMcmChange> McmChange(CSBattleMcmChange structure)
        {
            return new CsTPacket<CSBattleMcmChange>(CS_CMD_ID.CS_CMD_BATTLE_MCM_CHANGE, structure);
        }

        /// <summary>
        /// 开始滑翔消息
        /// </summary>
        public static CsTPacket<CSActorFlyMove> ActorFlyMove(CSActorFlyMove structure)
        {
            return new CsTPacket<CSActorFlyMove>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_FLYMOVE, structure);
        }

        /// <summary>
        /// 开始滑翔消息
        /// </summary>
        public static CsTPacket<CSActorFlyMoveNtf> ActorFlyMoveNtf(CSActorFlyMoveNtf structure)
        {
            return new CsTPacket<CSActorFlyMoveNtf>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_FLYMOVE_NTF, structure);
        }

        /// <summary>
        /// 人物换子弹类型申请回包
        /// </summary>
        public static CsTPacket<CSPlayerAmmoChangeRsp> PlayerAmmoChangeRsp(CSPlayerAmmoChangeRsp structure)
        {
            return new CsTPacket<CSPlayerAmmoChangeRsp>(CS_CMD_ID.CS_CMD_PLAYER_AMMO_CHANGE_RSP, structure);
        }

        /// <summary>
        /// AG同步消息
        /// </summary>
        public static CsTPacket<CSAGSyncInfo> AGSyncMsg(CSAGSyncInfo structure)
        {
            return new CsTPacket<CSAGSyncInfo>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_AG_SYNC, structure);
        }


        /// <summary>
        /// 同步所有AGInput值
        /// </summary>
        public static CsTPacket<CSAGAllInput> AGAllInputMsg(CSAGAllInput structure)
        {
            return new CsTPacket<CSAGAllInput>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_AG_ALL_INPUT, structure);
        }

        /// <summary>
        /// AGMeleeEvent同步消息
        /// </summary>
        public static CsTPacket<CSAGMeleeEvent> AGMeleeEvent(CSAGMeleeEvent structure)
        {
            return new CsTPacket<CSAGMeleeEvent>(CS_CMD_ID.CS_CMD_BATTLE_AG_MELEE_EVENT, structure);
        }

        /// <summary>
        /// 人物换子弹类型申请
        /// </summary>
        public static CsTPacket<CSPlayerAmmoChangeReq> PlayerAmmoChangeReq(CSPlayerAmmoChangeReq structure)
        {
            return new CsTPacket<CSPlayerAmmoChangeReq>(CS_CMD_ID.CS_CMD_PLAYER_AMMO_CHANGE_REQ, structure);
        }

        /// <summary>
        /// FSM状态同步
        /// </summary>
        public static CsTPacket<CSFSMInfo> FSMMsg(CSFSMInfo structure)
        {
            return new CsTPacket<CSFSMInfo>(CS_CMD_ID.CS_CMD_BATTLE_SPE_FSM, structure);
        }

        /// <summary>
        /// 玩家复活申请
        /// </summary>
        public static CsTPacket<CSPlayerReviveReq> PlayerReviveReq(CSPlayerReviveReq structure)
        {
            return new CsTPacket<CSPlayerReviveReq>(CS_CMD_ID.CS_CMD_PLAYER_REVIVE_REQ, structure);
        }

        /// <summary>
        /// 玩家复活响应
        /// </summary>
        public static CsTPacket<CSPlayerReviveRsp> PlayerReviveRsp(CSPlayerReviveRsp structure)
        {
            return new CsTPacket<CSPlayerReviveRsp>(CS_CMD_ID.CS_CMD_PLAYER_REVIVE_RSP, structure);
        }

        /// <summary>
        /// 飞行道具出现列表
        /// </summary>
        public static CsTPacket<CSProjectileLaunchNtfList> ProjectileLaunchNtfList(CSProjectileLaunchNtfList structure)
        {
            return new CsTPacket<CSProjectileLaunchNtfList>(CS_CMD_ID.CS_CMD_PROJECTILE_LAUNCH_NTF_LIST, structure);
        }

        /// <summary>
        /// 飞行道具销毁通知
        /// </summary>
        public static CsTPacket<CSProjectileDestroyNtf> ProjectileDestroy(CSProjectileDestroyNtf structure)
        {
            return new CsTPacket<CSProjectileDestroyNtf>(CS_CMD_ID.CS_CMD_PROJECTILE_DESTROY_NTF, structure);
        }

        /// <summary>
        /// 人物位置传送通知
        /// </summary>
        public static CsTPacket<CSPlayerTeleport> PlayerTeleport(CSPlayerTeleport structure)
        {
            return new CsTPacket<CSPlayerTeleport>(CS_CMD_ID.CS_CMD_PLAYER_TELEPORT_NTF, structure);
        }

        /// <summary>
        /// 人物换区申请
        /// </summary>
        public static CsTPacket<CSPlayerRegionJumpReq> PlayerRegionJumpReq(CSPlayerRegionJumpReq structure)
        {
            return new CsTPacket<CSPlayerRegionJumpReq>(CS_CMD_ID.CS_CMD_PLAYER_REGION_JUMP_REQ, structure);
        }

        /// <summary>
        /// 人物换区状态反馈
        /// </summary>
        public static CsTPacket<CSPlayerRegionJumpRsp> PlayerRegionJumpRsp(CSPlayerRegionJumpRsp structure)
        {
            return new CsTPacket<CSPlayerRegionJumpRsp>(CS_CMD_ID.CS_CMD_PLAYER_REGION_JUMP_RSP, structure);
        }

        /// <summary>
        /// LL层特效同步
        /// </summary>
        public static CsTPacket<CSPlayFxNtf> PlayFxNtf(CSPlayFxNtf structure)
        {
            return new CsTPacket<CSPlayFxNtf>(CS_CMD_ID.CS_CMD_PLAY_FX, structure);
        }




        /// <summary>
        /// 场景物件同步信息
        /// </summary>
        public static CsTPacket<CSPlayerSceneObjSync> SceneObjSync(CSPlayerSceneObjSync structure)
        {
            return new CsTPacket<CSPlayerSceneObjSync>(CS_CMD_ID.CS_CMD_PLAYER_SCENEOBJ_INTE, structure);
        }


        /// <summary>
        /// 停止移动消息
        /// </summary>
        public static CsTPacket<CSActorStopmoveNtf> ActorStopmoveNtf(CSActorStopmoveNtf structure)
        {
            return new CsTPacket<CSActorStopmoveNtf>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_STOPMOVE_NTF, structure);
        }


        /// <summary>
        /// 服务器强制状态变化的确认
        /// </summary>
        public static CsTPacket<CSPlayerAbnormalNtf> PlayerAbnormalNtf(CSPlayerAbnormalNtf structure)
        {
            return new CsTPacket<CSPlayerAbnormalNtf>(CS_CMD_ID.CS_CMD_PLAYER_ABNORMAL_NTF, structure);
        }

        /// <summary>
        /// 旋转消息
        /// </summary>
        public static CsTPacket<CSActorRotationNtf> ActorRotationNtf(CSActorRotationNtf structure)
        {
            return new CsTPacket<CSActorRotationNtf>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_ROTATION_NTF, structure);
        }

        /// <summary>
        /// attach消息
        /// </summary>
        public static CsTPacket<CSActorAttachEntity> ActorAttachEntity(CSActorAttachEntity structure)
        {
            return new CsTPacket<CSActorAttachEntity>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_ATTACHENTITY, structure);
        }

        /// <summary>
        /// attach消息
        /// </summary>
        public static CsTPacket<CSActorAttachEntityNtf> ActorAttachEntityNtf(CSActorAttachEntityNtf structure)
        {
            return new CsTPacket<CSActorAttachEntityNtf>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_ATTACHENTITY_NTF, structure);
        }

        /// <summary>
        /// detach消息
        /// </summary>
        public static CsTPacket<CSActorDetachEntity> ActorDetachEntity(CSActorDetachEntity structure)
        {
            return new CsTPacket<CSActorDetachEntity>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_DETACHENTITY, structure);
        }

        /// <summary>
        /// detach消息
        /// </summary>
        public static CsTPacket<CSActorDetachEntityNtf> ActorDetachEntityNtf(CSActorDetachEntityNtf structure)
        {
            return new CsTPacket<CSActorDetachEntityNtf>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_DETACHENTITY_NTF, structure);
        }

        /// <summary>
        /// 大剑劲力爆发
        /// </summary>
        public static CsTPacket<CSGiantSwordJinLiExplodeReq> GiantSwordJinLiExplodeReq(
            CSGiantSwordJinLiExplodeReq structure)
        {
            return new CsTPacket<CSGiantSwordJinLiExplodeReq>(CS_CMD_ID.CS_CMD_GIANTSWORD_EXPLODE_REQ, structure);
        }

        /// <summary>
        /// LOCOMOTION同步消息
        /// </summary>
        public static CsTPacket<CSActorLocomotion> ActorLocomotion(CSActorLocomotion structure)
        {
            return new CsTPacket<CSActorLocomotion>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_LOCOMOTION, structure);
        }

        /// <summary>
        /// 摩托艇重置广播消息
        /// </summary>
        public static CsTPacket<CSBoatReset> BoatReset(CSBoatReset structure)
        {
            return new CsTPacket<CSBoatReset>(CS_CMD_ID.CS_CMD_BOAT_RESET_NTF, structure);
        }

        /// <summary>
        /// VEHICLE AMMO同步消息
        /// </summary>
        public static CsTPacket<CSVehicleAmmo> VehicleAmmoInfo(CSVehicleAmmo structure)
        {
            return new CsTPacket<CSVehicleAmmo>(CS_CMD_ID.CS_CMD_BATTLE_VEHICLE_AMMO, structure);
        }

        /// <summary>
        /// 复活其他玩家申请
        /// </summary>
        public static CsTPacket<CSReviveOtherPlayerReq> ReviveOtherPlayerReq(CSReviveOtherPlayerReq structure)
        {
            return new CsTPacket<CSReviveOtherPlayerReq>(CS_CMD_ID.CS_CMD_REVIVE_OTHER_PLAYER_REQ, structure);
        }

        /// <summary>
        /// 复活其他玩家响应
        /// </summary>
        public static CsTPacket<CSReviveOtherPlayerRsp> ReviveOtherPlayerRsp(CSReviveOtherPlayerRsp structure)
        {
            return new CsTPacket<CSReviveOtherPlayerRsp>(CS_CMD_ID.CS_CMD_REVIVE_OTHER_PLAYER_RSP, structure);
        }

        /// <summary>
        /// 人物位置传送通知响应
        /// </summary>
        public static CsTPacket<CSPlayerTeleportResponse> PlayerTeleportResponse(CSPlayerTeleportResponse structure)
        {
            return new CsTPacket<CSPlayerTeleportResponse>(CS_CMD_ID.CS_CMD_C2S_PLAYER_TELEPORT_NTF_RESPONSE,
                structure);
        }

        /// <summary>
        /// 人物退出回避通知响应
        /// </summary>
        public static CsTPacket<CSPlayerLeaveEvadeNtf> PlayerLeaveEvadeNtf(CSPlayerLeaveEvadeNtf structure)
        {
            return new CsTPacket<CSPlayerLeaveEvadeNtf>(CS_CMD_ID.CS_CMD_C2S_PLAYER_LEAVE_EVADE_NTF, structure);
        }

        /// <summary>
        /// 定时位置同步消息
        /// </summary>
        public static CsTPacket<CSActorLocostate> ActorLocostate(CSActorLocostate structure)
        {
            return new CsTPacket<CSActorLocostate>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_LOCOSTATE, structure);
        }

        /// <summary>
        /// 锁玩家当前FSM通知
        /// </summary>
        public static CsTPacket<CSPlayerLockAction> PlayerLockActionNtf(CSPlayerLockAction structure)
        {
            return new CsTPacket<CSPlayerLockAction>(CS_CMD_ID.CS_CMD_PLAYER_LOCK_ACTION_NTF, structure);
        }

        /// <summary>
        /// 锁玩家当前FSM客户端确认
        /// </summary>
        public static CsTPacket<CSPlayerLockAction> PlayerLockActionAck(CSPlayerLockAction structure)
        {
            return new CsTPacket<CSPlayerLockAction>(CS_CMD_ID.CS_CMD_PLAYER_LOCK_ACTION_ACK, structure);
        }

        /// <summary>
        /// 宠物技能调试
        /// </summary>
        public static CsTPacket<CSPetSkillDebug> PetSkillDebug(CSPetSkillDebug structure)
        {
            return new CsTPacket<CSPetSkillDebug>(CS_CMD_ID.CS_CMD_PET_SKILL_DEBUG, structure);
        }

        /// <summary>
        /// 宠物使用技能信息同步
        /// </summary>
        public static CsTPacket<CSPetSkillUseInfo> PetSkillUseInfo(CSPetSkillUseInfo structure)
        {
            return new CsTPacket<CSPetSkillUseInfo>(CS_CMD_ID.CS_CMD_PET_SKILL_USE_INFO, structure);
        }

        /// <summary>
        /// FSM状态重置
        /// </summary>
        public static CsTPacket<CSStateResetInfo> StateResetMsg(CSStateResetInfo structure)
        {
            return new CsTPacket<CSStateResetInfo>(CS_CMD_ID.CS_CMD_PLAYER_RESET_STATE_NTF, structure);
        }

        /// <summary>
        /// 客户端玩家猎团庆典
        /// </summary>
        public static CsTPacket<CSClientPlayerCelebrate> ClientPlayerCelebrate(CSClientPlayerCelebrate structure)
        {
            return new CsTPacket<CSClientPlayerCelebrate>(CS_CMD_ID.CS_CMD_CLIENT_PLAYER_CELEBRATE, structure);
        }

        /// <summary>
        /// 客户端玩家死亡复活状态上报
        /// </summary>
        public static CsTPacket<ClientReviveState> ClientPlayerRevive(ClientReviveState structure)
        {
            return new CsTPacket<ClientReviveState>(CS_CMD_ID.CS_CMD_CLIENT_PLAYER_REVIVESTATE, structure);
        }

        /// <summary>
        /// 客户端UI自定义数据
        /// </summary>
        public static CsTPacket<ClientUIOption> UIOptionData(ClientUIOption structure)
        {
            return new CsTPacket<ClientUIOption>(CS_CMD_ID.CS_CMD_CLIENT_UIOPTION_UPDATE, structure);
        }

        /// <summary>
        /// AI技能同步
        /// </summary>
        public static CsTPacket<CSAIAnimSequence> AIAnimSeq(CSAIAnimSequence structure)
        {
            return new CsTPacket<CSAIAnimSequence>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_ANIM_SEQUENCE, structure);
        }

        /// <summary>
        /// Monster位置同步
        /// </summary>
        public static CsTPacket<CSMonsterLocomotion> MonsterLCM(CSMonsterLocomotion structure)
        {
            return new CsTPacket<CSMonsterLocomotion>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_LOCOMOTION, structure);
        }

        /// <summary>
        /// Monster部位破坏
        /// </summary>
        public static CsTPacket<CSMonsterPartBroken> MonsterPartBroken(CSMonsterPartBroken structure)
        {
            return new CsTPacket<CSMonsterPartBroken>(CS_CMD_ID.CS_CMD_MONSTER_PARTBROKEN, structure);
        }

        /// <summary>
        /// 怪物死亡
        /// </summary>
        public static CsTPacket<CSMonsterDead> MonsterDead(CSMonsterDead structure)
        {
            return new CsTPacket<CSMonsterDead>(CS_CMD_ID.CS_CMD_MONSTER_DEAD, structure);
        }

        /// <summary>
        /// 怪物位置信息
        /// </summary>
        public static CsTPacket<CSMonsterLocoInfoCmd> MonsterLocoInfoCmd(CSMonsterLocoInfoCmd structure)
        {
            return new CsTPacket<CSMonsterLocoInfoCmd>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_LOCOINFOCMD, structure);
        }

        /// <summary>
        /// 怪物位置信息
        /// </summary>
        public static CsTPacket<CSMonsterLocoInfo> MonsterLocoInfo(CSMonsterLocoInfo structure)
        {
            return new CsTPacket<CSMonsterLocoInfo>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_LOCOINFO, structure);
        }


        /// <summary>
        /// hit信息用于统计
        /// </summary>
        public static CsTPacket<CSActorHitDebuginfo> ActorHitDebuginfo(CSActorHitDebuginfo structure)
        {
            return new CsTPacket<CSActorHitDebuginfo>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_HITDEBUGINFO, structure);
        }

        /// <summary>
        /// 定时位置同步消息
        /// </summary>
        public static CsTPacket<CSMonsterMovestate> MonsterMovestate(CSMonsterMovestate structure)
        {
            return new CsTPacket<CSMonsterMovestate>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_MOVESTATE, structure);
        }

        /// <summary>
        /// 技能位置同步消息
        /// </summary>
        public static CsTPacket<CSActorSkillPos> ActorSkillPos(CSActorSkillPos structure)
        {
            return new CsTPacket<CSActorSkillPos>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_SKILLPOS, structure);
        }

        /// <summary>
        /// Locomotion结束消息
        /// </summary>
        public static CsTPacket<CSMonsterLocoEnd> MonsterLocoEnd(CSMonsterLocoEnd structure)
        {
            return new CsTPacket<CSMonsterLocoEnd>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_LOCOEND, structure);
        }

        /// <summary>
        /// 怪物技能同步消息
        /// </summary>
        public static CsTPacket<CSMonsterSequenceState> MonsterSequenceState(CSMonsterSequenceState structure)
        {
            return new CsTPacket<CSMonsterSequenceState>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_SEQUENCESTATE, structure);
        }

        /// <summary>
        /// AttachToTarget
        /// </summary>
        public static CsTPacket<CSMonsterAttachToTarget> MonsterAttachToTarget(CSMonsterAttachToTarget structure)
        {
            return new CsTPacket<CSMonsterAttachToTarget>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_ATTACHTOTARGET, structure);
        }

        /// <summary>
        /// 怪物行为确认消息
        /// </summary>
        public static CsTPacket<CSMonsterActionAck> MonsterActionAck(CSMonsterActionAck structure)
        {
            return new CsTPacket<CSMonsterActionAck>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_ACTIONACK, structure);
        }

        /// <summary>
        /// 位置记录消息
        /// </summary>
        public static CsTPacket<CSActorRecordPosition> ActorRecordPosition(CSActorRecordPosition structure)
        {
            return new CsTPacket<CSActorRecordPosition>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_RECORDPOSITION, structure);
        }

        /// <summary>
        /// 控制怪物
        /// </summary>
        public static CsTPacket<CSActorControlMonster> ActorControlMonster(CSActorControlMonster structure)
        {
            return new CsTPacket<CSActorControlMonster>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_CONTROLMONSTER, structure);
        }

        /// <summary>
        /// 副本时间同步信息
        /// </summary>
        public static CsTPacket<CSBattleTimesync> BattleTimesync(CSBattleTimesync structure)
        {
            return new CsTPacket<CSBattleTimesync>(CS_CMD_ID.CS_CMD_BATTLE_TIMESYNC, structure);
        }

 

 

        /// <summary>
        /// 停止移动消息
        /// </summary>
        public static CsTPacket<CSActorStopmove> ActorStopmove(CSActorStopmove structure)
        {
            return new CsTPacket<CSActorStopmove>(CS_CMD_ID.CS_CMD_BATTLE_ACTOR_STOPMOVE, structure);
        }

        /// <summary>
        /// 场景物体属性改变
        /// </summary>
        public static CsTPacket<CSSceneObjProperties> ObjPropertiesChange(CSSceneObjProperties structure)
        {
            return new CsTPacket<CSSceneObjProperties>(CS_CMD_ID.CS_CMD_BATTLE_OBJ_PROPERTIESCHANGE, structure);
        }

        /// <summary>
        /// 场景物体状态改变
        /// </summary>
        public static CsTPacket<CSObjStateChange> ObjStateChange(CSObjStateChange structure)
        {
            return new CsTPacket<CSObjStateChange>(CS_CMD_ID.CS_CMD_BATTLE_OBJ_STATECHANGE, structure);
        }
        
        /// <summary>
        /// 玩家出现通知
        /// </summary>
        public static CsTPacket<CSPlayerAppearNtf> PlayerAppearNtf(CSPlayerAppearNtf structure)
        {
            return new CsTPacket<CSPlayerAppearNtf>(CS_CMD_ID.CS_CMD_PLAYER_APPEAR_NTF, structure);
        }

        /// <summary>
        /// 玩家出现通知列表
        /// </summary>
        public static CsTPacket<CSPlayerAppearNtfList> PlayerAppearNtfList(CSPlayerAppearNtfList structure)
        {
            return new CsTPacket<CSPlayerAppearNtfList>(CS_CMD_ID.CS_CMD_PLAYER_APPEAR_NTF_LIST, structure);
        }

        /// <summary>
        /// 场景物件行为同步
        /// </summary>
        public static CsTPacket<CSObjectActionSyncEntry> ObjectAction(CSObjectActionSyncEntry structure)
        {
            return new CsTPacket<CSObjectActionSyncEntry>(CS_CMD_ID.CS_CMD_BATTLE_OBJECT_ACTION, structure);
        }

        /// <summary>
        /// 对象离开通知列表
        /// </summary>
        public static CsTPacket<CSEntityDisappearNtfList> EntityDisappearNtfList(CSEntityDisappearNtfList structure)
        {
            return new CsTPacket<CSEntityDisappearNtfList>(CS_CMD_ID.CS_CMD_ENTITY_DISAPPEAR_NTF_LIST, structure);
        }

        /// <summary>
        /// 设置陷阱请求
        /// </summary>
        public static CsTPacket<CSSetTrapReq> SetTrapReq(CSSetTrapReq structure)
        {
            return new CsTPacket<CSSetTrapReq>(CS_CMD_ID.CS_CMD_SET_TRAP_REQ, structure);
        }

        /// <summary>
        /// 设置陷阱响应
        /// </summary>
        public static CsTPacket<CSSetTrapRsp> SetTrapRsp(CSSetTrapRsp structure)
        {
            return new CsTPacket<CSSetTrapRsp>(CS_CMD_ID.CS_CMD_SET_TRAP_RSP, structure);
        }

        /// <summary>
        /// 玩家弩车开火
        /// </summary>
        public static CsTPacket<CSPlayerVehicleFire> PlayerVehicleFire(CSPlayerVehicleFire structure)
        {
            return new CsTPacket<CSPlayerVehicleFire>(CS_CMD_ID.CS_CMD_PLAYER_VEHICLE_FIRE, structure);
        }

        /// <summary>
        /// 血量同步
        /// </summary>
        public static CsTPacket<CSHealthSyncNtf> HealthSyncNtf(CSHealthSyncNtf structure)
        {
            return new CsTPacket<CSHealthSyncNtf>(CS_CMD_ID.CS_CMD_HEALTH_SYNC, structure);
        }

        /// <summary>
        /// 装载弹药请求
        /// </summary>
        public static CsTPacket<CSReloadAmmoReq> ReloadAmmoReq(CSReloadAmmoReq structure)
        {
            return new CsTPacket<CSReloadAmmoReq>(CS_CMD_ID.CS_CMD_RELOAD_AMMO_REQ, structure);
        }

        /// <summary>
        /// 装载弹药响应
        /// </summary>
        public static CsTPacket<CSReloadAmmoRsp> ReloadAmmoRsp(CSReloadAmmoRsp structure)
        {
            return new CsTPacket<CSReloadAmmoRsp>(CS_CMD_ID.CS_CMD_RELOAD_AMMO_RSP, structure);
        }

        /// <summary>
        /// 飞行道具发射
        /// </summary>
        public static CsTPacket<CSProjectileLaunchNtf> ProjectileLaunch(CSProjectileLaunchNtf structure)
        {
            return new CsTPacket<CSProjectileLaunchNtf>(CS_CMD_ID.CS_CMD_PROJECTILE_LAUNCH_NTF, structure);
        }

        /// <summary>
        /// 特效同步
        /// </summary>
        public static CsTPacket<CSEffectSYNC> EffectSYNC(CSEffectSYNC structure)
        {
            return new CsTPacket<CSEffectSYNC>(CS_CMD_ID.CS_CMD_EFFECT_SYNC, structure);
        }

        /// <summary>
        /// 客户端加载Level完成，进入场景
        /// </summary>
        public static CsTPacket<CSEnterLevelNtf> EnterLevelNtf(CSEnterLevelNtf structure)
        {
            return new CsTPacket<CSEnterLevelNtf>(CS_CMD_ID.CS_CMD_ENTER_LEVEL_NTF, structure);
        }

        /// <summary>
        /// 加速跑
        /// </summary>
        public static CsTPacket<CSUpdateRushState> UpdateRushState(CSUpdateRushState structure)
        {
            return new CsTPacket<CSUpdateRushState>(CS_CMD_ID.CS_CMD_UPDATE_RUSHSTATE, structure);
        }

        /// <summary>
        /// 切换弹药请求
        /// </summary>
        public static CsTPacket<CSChangeAmmoReq> ChangeAmmoReq(CSChangeAmmoReq structure)
        {
            return new CsTPacket<CSChangeAmmoReq>(CS_CMD_ID.CS_CMD_CHANGE_AMMO_REQ, structure);
        }

        /// <summary>
        /// 切换弹药响应
        /// </summary>
        public static CsTPacket<CSChangeAmmoRsp> ChangeAmmoRsp(CSChangeAmmoRsp structure)
        {
            return new CsTPacket<CSChangeAmmoRsp>(CS_CMD_ID.CS_CMD_CHANGE_AMMO_RSP, structure);
        }

        /// <summary>
        /// TOD时间同步
        /// </summary>
        public static CsTPacket<CSTimeOfDayNtf> TimeOfDayNtf(CSTimeOfDayNtf structure)
        {
            return new CsTPacket<CSTimeOfDayNtf>(CS_CMD_ID.CS_CMD_TIME_OF_DAY_NTF, structure);
        }

        /// <summary>
        /// 属性同步
        /// </summary>
        public static CsTPacket<CSPropSync> PropSync(CSPropSync structure)
        {
            return new CsTPacket<CSPropSync>(CS_CMD_ID.CS_CMD_PROP_SYNC_NTF, structure);
        }

        /// <summary>
        /// 飞行道具效果触发通知
        /// </summary>
        public static CsTPacket<CSProjectileEffectNtf> ProjectileEffectNtf(CSProjectileEffectNtf structure)
        {
            return new CsTPacket<CSProjectileEffectNtf>(CS_CMD_ID.CS_CMD_PROJECTILE_EFFECT_NTF, structure);
        }

        /// <summary>
        /// BOSS死亡
        /// </summary>
        public static CsTPacket<CSBOSSDie> BOSSDie(CSBOSSDie structure)
        {
            return new CsTPacket<CSBOSSDie>(CS_CMD_ID.CS_CMD_BOSS_DIE, structure);
        }

        /// <summary>
        /// Logic BTObj 同步
        /// </summary>
        public static CsTPacket<CSLogicBTPropSync> LogicBTObjSync(CSLogicBTPropSync structure)
        {
            return new CsTPacket<CSLogicBTPropSync>(CS_CMD_ID.CS_CMD_LOGICBT_PROPER_SYNC, structure);
        }

        /// <summary>
        /// GF event 同步
        /// </summary>
        public static CsTPacket<CSFGEventSYNC> BTFGEventSync(CSFGEventSYNC structure)
        {
            return new CsTPacket<CSFGEventSYNC>(CS_CMD_ID.CS_CMD_LOGICBT_FGEVENT_SYNC, structure);
        }

        /// <summary>
        /// 小怪击飞 同步
        /// </summary>
        public static CsTPacket<CSHitFlySYNC> HitFlySync(CSHitFlySYNC structure)
        {
            return new CsTPacket<CSHitFlySYNC>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_HIT_FLY, structure);
        }

        /// <summary>
        /// 杀死怪物采集点同步
        /// </summary>
        public static CsTPacket<CSSpawnCollectTrigSYNC> SpawnStripSync(CSSpawnCollectTrigSYNC structure)
        {
            return new CsTPacket<CSSpawnCollectTrigSYNC>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_SPAWN_STRIP, structure);
        }

        /// <summary>
        /// CUE同步
        /// </summary>
        public static CsTPacket<CSFMODCUE> FmodCueSync(CSFMODCUE structure)
        {
            return new CsTPacket<CSFMODCUE>(CS_CMD_ID.CS_CMD_FMOD_CUE, structure);
        }

        /// <summary>
        /// LOOKAT同步
        /// </summary>
        public static CsTPacket<CSLookAtSYNC> LookAtSync(CSLookAtSYNC structure)
        {
            return new CsTPacket<CSLookAtSYNC>(CS_CMD_ID.CS_CMD_LOOK_AT, structure);
        }

        /// <summary>
        /// PvP模式信息同步
        /// </summary>
        public static CsTPacket<CSPVPInfoNtf> PVPInfoNtf(CSPVPInfoNtf structure)
        {
            return new CsTPacket<CSPVPInfoNtf>(CS_CMD_ID.CS_CMD_PVP_INFO_NTF, structure);
        }

        /// <summary>
        /// PvP模式kill同步
        /// </summary>
        public static CsTPacket<CSPVPKillNtf> PVPKillNtf(CSPVPKillNtf structure)
        {
            return new CsTPacket<CSPVPKillNtf>(CS_CMD_ID.CS_CMD_PVP_KILL_NTF, structure);
        }

        /// <summary>
        /// faction set
        /// </summary>
        public static CsTPacket<CSSetFactionReq> SetFactionReq(CSSetFactionReq structure)
        {
            return new CsTPacket<CSSetFactionReq>(CS_CMD_ID.CS_CMD_SET_FACTION_REQ, structure);
        }

        /// <summary>
        /// faction set
        /// </summary>
        public static CsTPacket<CSSetFactionRsp> SetFactionRsp(CSSetFactionRsp structure)
        {
            return new CsTPacket<CSSetFactionRsp>(CS_CMD_ID.CS_CMD_SET_FACTION_RSP, structure);
        }

        /// <summary>
        /// DiffuseColor同步
        /// </summary>
        public static CsTPacket<CSDiffuseColorSYNC> DiffuseColorSync(CSDiffuseColorSYNC structure)
        {
            return new CsTPacket<CSDiffuseColorSYNC>(CS_CMD_ID.CS_CMD_SET_DIFFUSE_COLOR, structure);
        }

        /// <summary>
        /// RenderAction同步
        /// </summary>
        public static CsTPacket<CSRenderActionSYNC> RenderActionSync(CSRenderActionSYNC structure)
        {
            return new CsTPacket<CSRenderActionSYNC>(CS_CMD_ID.CS_CMD_RENDER_ACTION, structure);
        }

        /// <summary>
        /// 天气同步
        /// </summary>
        public static CsTPacket<CSWeatherSYNC> WeatherSync(CSWeatherSYNC structure)
        {
            return new CsTPacket<CSWeatherSYNC>(CS_CMD_ID.CS_CMD_BATTLE_WEATHER_SYNC, structure);
        }

        /// <summary>
        /// GM指令反馈
        /// </summary>
        public static CsTPacket<CSGmString> GmString(CSGmString structure)
        {
            return new CsTPacket<CSGmString>(CS_CMD_ID.CS_CMD_GM_STRING_DISPLAY, structure);
        }

        /// <summary>
        /// PvP道具
        /// </summary>
        public static CsTPacket<CSPVPItem> PVPItem(CSPVPItem structure)
        {
            return new CsTPacket<CSPVPItem>(CS_CMD_ID.CS_CMD_PVP_ITEM, structure);
        }

        /// <summary>
        /// 战斗伤害消息
        /// </summary>
        public static CsTPacket<CSBattleDMG> BattleDMG(CSBattleDMG structure)
        {
            return new CsTPacket<CSBattleDMG>(CS_CMD_ID.CS_CMD_BATTLE_DMG, structure);
        }

        /// <summary>
        /// 战斗伤害验证上下文
        /// </summary>
        public static CsTPacket<CSDMGVerifyContext> BattleDMGVerifyContext(CSDMGVerifyContext structure)
        {
            return new CsTPacket<CSDMGVerifyContext>(CS_CMD_ID.CS_CMD_BATTLE_DMG_VERIFY, structure);
        }

        /// <summary>
        /// 战斗伤害消息
        /// </summary>
        public static CsTPacket<CSBattlePVPDMG> BattlePVPDMG(CSBattlePVPDMG structure)
        {
            return new CsTPacket<CSBattlePVPDMG>(CS_CMD_ID.CS_CMD_BATTLE_PVP_DMG, structure);
        }

        /// <summary>
        /// 战斗伤害
        /// </summary>
        public static CsTPacket<CSDMGContext> BattleDMGContext(CSDMGContext structure)
        {
            return new CsTPacket<CSDMGContext>(CS_CMD_ID.CS_CMD_BATTLE_DMG_WITHOUT_VERIFY, structure);
        }

        /// <summary>
        /// 申请缴纳请求
        /// </summary>
        public static CsTPacket<CSPaidContributeBoxReq> PaidContributeBoxReq(CSPaidContributeBoxReq structure)
        {
            return new CsTPacket<CSPaidContributeBoxReq>(CS_CMD_ID.CS_CMD_PAID_CONTRIBUTE_BOX_REQ, structure);
        }

        /// <summary>
        /// 申请缴纳回复
        /// </summary>
        public static CsTPacket<CSPaidContributeBoxRsp> PaidContributeBoxRsp(CSPaidContributeBoxRsp structure)
        {
            return new CsTPacket<CSPaidContributeBoxRsp>(CS_CMD_ID.CS_CMD_PAID_CONTRIBUTE_BOX_RSP, structure);
        }

        /// <summary>
        /// 战斗伤害消息
        /// </summary>
        public static CsTPacket<CSBattlePVPDMGNtf> BattlePVPDMGNtf(CSBattlePVPDMGNtf structure)
        {
            return new CsTPacket<CSBattlePVPDMGNtf>(CS_CMD_ID.CS_CMD_BATTLE_PVP_DMG_NTF, structure);
        }


        /// <summary>
        /// 被控制怪物出现通知
        /// </summary>
        public static CsTPacket<CSCtrledMonsterAppearNtf> CtrledMonsterAppearNtf(CSCtrledMonsterAppearNtf structure)
        {
            return new CsTPacket<CSCtrledMonsterAppearNtf>(CS_CMD_ID.CS_CMD_BATTLE_CTRLED_MONSTER_APPEAR_NTF,
                structure);
        }

        /// <summary>
        /// 客户端打LOG
        /// </summary>
        public static CsTPacket<CSClientSendLog> ClientSendLog(CSClientSendLog structure)
        {
            return new CsTPacket<CSClientSendLog>(CS_CMD_ID.CS_CMD_CLIENT_SEND_LOG, structure);
        }

        /// <summary>
        /// 服务器探测消息
        /// </summary>
        public static CsTPacket<CSSvrTestReq> SvrTestReq(CSSvrTestReq structure)
        {
            return new CsTPacket<CSSvrTestReq>(CS_CMD_ID.CS_CMD_SVR_TEST_REQ, structure);
        }


        /// <summary>
        /// 玩家交互同步数据
        /// </summary>
        public static CsTPacket<CSDirectInteractRequest> DirectInteractRequest(CSDirectInteractRequest structure)
        {
            return new CsTPacket<CSDirectInteractRequest>(CS_CMD_ID.CS_CMD_DIRECTINTERACT_REQUEST, structure);
        }

        /// <summary>
        /// AI技能同步
        /// </summary>
        public static CsTPacket<CSAISkillSync> AISkillSync(CSAISkillSync structure)
        {
            return new CsTPacket<CSAISkillSync>(CS_CMD_ID.CS_CMD_MONSTER_AISKILL, structure);
        }

        /// <summary>
        /// 属性同步
        /// </summary>
        public static CsTPacket<CSAttrSync> AttrSync(CSAttrSync structure)
        {
            return new CsTPacket<CSAttrSync>(CS_CMD_ID.CS_CMD_ATTR_SYNC_NTF, structure);
        }

        /// <summary>
        /// 属性初始化
        /// </summary>
        public static CsTPacket<CSAttrInitInfo> AttrInfo(CSAttrInitInfo structure)
        {
            return new CsTPacket<CSAttrInitInfo>(CS_CMD_ID.CS_CMD_ATTR_INIT_NTF, structure);
        }

        /// <summary>
        /// 战斗伤害返回
        /// </summary>
        public static CsTPacket<CSDMGResult> DMGResult(CSDMGResult structure)
        {
            return new CsTPacket<CSDMGResult>(CS_CMD_ID.CS_CMD_BATTLE_DMGRESULT, structure);
        }

        /// <summary>
        /// 随机位置请求
        /// </summary>
        public static CsTPacket<CSRandomPosReq> RandomPosReq(CSRandomPosReq structure)
        {
            return new CsTPacket<CSRandomPosReq>(CS_CMD_ID.CS_CMD_RANDOM_POS_REQ, structure);
        }

        /// <summary>
        /// 随机位置响应
        /// </summary>
        public static CsTPacket<CSRandomPosRsp> RandomPosRsp(CSRandomPosRsp structure)
        {
            return new CsTPacket<CSRandomPosRsp>(CS_CMD_ID.CS_CMD_RANDOM_POS_RSP, structure);
        }

        /// <summary>
        /// 随机数同步请求
        /// </summary>
        public static CsTPacket<CSRandSeedSyncReq> RandSeedSyncReq(CSRandSeedSyncReq structure)
        {
            return new CsTPacket<CSRandSeedSyncReq>(CS_CMD_ID.CS_CMD_RANDSEEDSYNC_REQ, structure);
        }

        /// <summary>
        /// 随机数同步返回
        /// </summary>
        public static CsTPacket<CSRandSeedSyncRsp> RandSeedSyncRsp(CSRandSeedSyncRsp structure)
        {
            return new CsTPacket<CSRandSeedSyncRsp>(CS_CMD_ID.CS_CMD_RANDSEEDSYNC_RSP, structure);
        }

        /// <summary>
        /// 人物换区结束客户端告知服务器
        /// </summary>
        public static CsTPacket<CSPlayerRegionJumpEnd> PlayerRegionJumpEnd(CSPlayerRegionJumpEnd structure)
        {
            return new CsTPacket<CSPlayerRegionJumpEnd>(CS_CMD_ID.CS_CMD_PLAYER_REGION_JUMP_END, structure);
        }

        /// <summary>
        /// BT object locomotion同步
        /// </summary>
        public static CsTPacket<CSBTObjSimpleLocomotion> BTObjSimpleLocomotion(CSBTObjSimpleLocomotion structure)
        {
            return new CsTPacket<CSBTObjSimpleLocomotion>(CS_CMD_ID.CS_CMD_BTOBJ_SIMPLE_LOCOMOTION, structure);
        }

        public static CsTPacket<CSRegionWeatherNtf> RegionWeatherNtf(CSRegionWeatherNtf structure)
        {
            return new CsTPacket<CSRegionWeatherNtf>(CS_CMD_ID.CS_CMD_REGION_WEATHER_NTF, structure);
        }

        /// <summary>
        /// 烧烤结果申请
        /// </summary>
        public static CsTPacket<CSPlayerBakeResultReq> PlayerBakeResultReq(CSPlayerBakeResultReq structure)
        {
            return new CsTPacket<CSPlayerBakeResultReq>(CS_CMD_ID.CS_CMD_PLAYER_BAKE_RESULT_REQ, structure);
        }

        /// <summary>
        /// 烧烤结果反馈
        /// </summary>
        public static CsTPacket<CSPlayerBakeResultRsp> PlayerBakeResultRsp(CSPlayerBakeResultRsp structure)
        {
            return new CsTPacket<CSPlayerBakeResultRsp>(CS_CMD_ID.CS_CMD_PLAYER_BAKE_RESULT_RSP, structure);
        }

        /// <summary>
        /// 怪物骨架位置信息
        /// </summary>
        public static CsTPacket<CSMonsterSkelPoseInfo> MonsterSkelPoseInfo(CSMonsterSkelPoseInfo structure)
        {
            return new CsTPacket<CSMonsterSkelPoseInfo>(CS_CMD_ID.CS_CMD_MONSTER_SKELPOSEINFO, structure);
        }

        /// <summary>
        /// 怪物服务器动画调试
        /// </summary>
        public static CsTPacket<CSMonsterSrvAnimDebugCmd> MonsterSrvAnimDebugCmd(CSMonsterSrvAnimDebugCmd structure)
        {
            return new CsTPacket<CSMonsterSrvAnimDebugCmd>(CS_CMD_ID.CS_CMD_MONSTER_DEBUGSVRANIM, structure);
        }

        /// <summary>
        /// 怪物物理部位信息
        /// </summary>
        public static CsTPacket<CSMonsterPhysPartInfo> MonsterPhysPartInfo(CSMonsterPhysPartInfo structure)
        {
            return new CsTPacket<CSMonsterPhysPartInfo>(CS_CMD_ID.CS_CMD_MONSTER_PHYSPARTINFO, structure);
        }

        /// <summary>
        /// 怪物伤疤通知
        /// </summary>
        public static CsTPacket<CSMonsterScarNtf> MonsterScarNtf(CSMonsterScarNtf structure)
        {
            return new CsTPacket<CSMonsterScarNtf>(CS_CMD_ID.CS_CMD_MONSTER_SCAR_NTF, structure);
        }

        /// <summary>
        /// 打开服务器动画优化
        /// </summary>
        public static CsTPacket<CSEnableSvrAnimOptimize> EnableSvrAnimOptimize(CSEnableSvrAnimOptimize structure)
        {
            return new CsTPacket<CSEnableSvrAnimOptimize>(CS_CMD_ID.CS_CMD_ENABLE_SVRANIM_OPTIMIZE, structure);
        }

        /// <summary>
        /// Trackview同步
        /// </summary>
        public static CsTPacket<CSSequenceSync> SequenceSync(CSSequenceSync structure)
        {
            return new CsTPacket<CSSequenceSync>(CS_CMD_ID.CS_CMD_SEQUENCE_SYNC, structure);
        }

        /// <summary>
        /// 客户端请求播放Sequence
        /// </summary>
        public static CsTPacket<CSReqPlaySequence> ReqPlaySequence(CSReqPlaySequence structure)
        {
            return new CsTPacket<CSReqPlaySequence>(CS_CMD_ID.CS_CMD_PLAY_SEQUENCE_REQ, structure);
        }

        /// <summary>
        /// TOKEN同步
        /// </summary>
        public static CsTPacket<CSTokenSync> TokenSync(CSTokenSync structure)
        {
            return new CsTPacket<CSTokenSync>(CS_CMD_ID.CS_CMD_TOKEN_SYNC_NTF, structure);
        }

        /// <summary>
        /// 战斗伤害参数返回
        /// </summary>
        public static CsTPacket<CSDMGParam> DMGParam(CSDMGParam structure)
        {
            return new CsTPacket<CSDMGParam>(CS_CMD_ID.CS_CMD_BATTLE_DMGPARAM, structure);
        }

        /// <summary>
        /// 客户端请求播放过场动画
        /// </summary>
        public static CsTPacket<CSReqPlayCutScene> ReqPlayCutScene(CSReqPlayCutScene structure)
        {
            return new CsTPacket<CSReqPlayCutScene>(CS_CMD_ID.CS_CMD_PLAY_CUTSCENE_REQ, structure);
        }

        /// <summary>
        /// 服务器通知客户端播放过场动画
        /// </summary>
        public static CsTPacket<CSPlayCutSceneNtf> PlayCutSceneNtf(CSPlayCutSceneNtf structure)
        {
            return new CsTPacket<CSPlayCutSceneNtf>(CS_CMD_ID.CS_CMD_PLAY_CUTSCENE_NTF, structure);
        }

        /// <summary>
        /// 请求取消过场动画
        /// </summary>
        public static CsTPacket<CSReqCancelCutScene> ReqCancelCutScene(CSReqCancelCutScene structure)
        {
            return new CsTPacket<CSReqCancelCutScene>(CS_CMD_ID.CS_CMD_CANCEL_CUTSCENE_REQ, structure);
        }

        /// <summary>
        /// 怪物位置调试信息
        /// </summary>
        public static CsTPacket<CSMonsterLocoInfoDebug> MonsterLocoInfoDebug(CSMonsterLocoInfoDebug structure)
        {
            return new CsTPacket<CSMonsterLocoInfoDebug>(CS_CMD_ID.CS_CMD_BATTLE_MONSTER_LOCOINFO_DEBUG, structure);
        }

        /// <summary>
        /// 属性同步
        /// </summary>
        public static CsTPacket<CSAttrSyncList> AttrSyncList(CSAttrSyncList structure)
        {
            return new CsTPacket<CSAttrSyncList>(CS_CMD_ID.CS_CMD_ATTR_SYNC_LIST_NTF, structure);
        }

        public static CsTPacket<CSFarmGatherReq> FarmGatherReq(CSFarmGatherReq structure)
        {
            return new CsTPacket<CSFarmGatherReq>(CS_CMD_ID.CS_CMD_FARM_GATHER_REQ, structure);
        }

        public static CsTPacket<CSFarmGatherRsp> FarmGatherRsp(CSFarmGatherRsp structure)
        {
            return new CsTPacket<CSFarmGatherRsp>(CS_CMD_ID.CS_CMD_FARM_GATHER_RSP, structure);
        }

        public static CsTPacket<CSFarmFacilityLevelupReq> FarmFacilityLevelupReq(CSFarmFacilityLevelupReq structure)
        {
            return new CsTPacket<CSFarmFacilityLevelupReq>(CS_CMD_ID.CS_CMD_FARM_FACILITY_LEVELUP_REQ, structure);
        }

        public static CsTPacket<CSFarmFacilityLevelupRsp> FarmFacilityLevelupRsp(CSFarmFacilityLevelupRsp structure)
        {
            return new CsTPacket<CSFarmFacilityLevelupRsp>(CS_CMD_ID.CS_CMD_FARM_FACILITY_LEVELUP_RSP, structure);
        }

        public static CsTPacket<CSFarmSetAutoGatherReq> FarmSetAutoGatherReq(CSFarmSetAutoGatherReq structure)
        {
            return new CsTPacket<CSFarmSetAutoGatherReq>(CS_CMD_ID.CS_CMD_FARM_SET_AUTO_GATHER_REQ, structure);
        }

        public static CsTPacket<CSFarmSetAutoGatherRsp> FarmSetAutoGatherRsp(CSFarmSetAutoGatherRsp structure)
        {
            return new CsTPacket<CSFarmSetAutoGatherRsp>(CS_CMD_ID.CS_CMD_FARM_SET_AUTO_GATHER_RSP, structure);
        }

        public static CsTPacket<CSFarmSetPetReq> FarmSetPetReq(CSFarmSetPetReq structure)
        {
            return new CsTPacket<CSFarmSetPetReq>(CS_CMD_ID.CS_CMD_FARM_SET_PET_REQ, structure);
        }

        public static CsTPacket<CSFarmSetPetRsp> FarmSetPetRsp(CSFarmSetPetRsp structure)
        {
            return new CsTPacket<CSFarmSetPetRsp>(CS_CMD_ID.CS_CMD_FARM_SET_PET_RSP, structure);
        }

        public static CsTPacket<CSFarmTrainPetReq> FarmTrainPetReq(CSFarmTrainPetReq structure)
        {
            return new CsTPacket<CSFarmTrainPetReq>(CS_CMD_ID.CS_CMD_FARM_TRAIN_PET_REQ, structure);
        }

        public static CsTPacket<CSFarmTrainPetRsp> FarmTrainPetRsp(CSFarmTrainPetRsp structure)
        {
            return new CsTPacket<CSFarmTrainPetRsp>(CS_CMD_ID.CS_CMD_FARM_TRAIN_PET_RSP, structure);
        }

        public static CsTPacket<CSFarmDataUpdateNtf> FarmDataUpdate(CSFarmDataUpdateNtf structure)
        {
            return new CsTPacket<CSFarmDataUpdateNtf>(CS_CMD_ID.CS_CMD_FARM_UPDATE_NTF, structure);
        }

        public static CsTPacket<CSFarmPlantReq> FarmPlantReq(CSFarmPlantReq structure)
        {
            return new CsTPacket<CSFarmPlantReq>(CS_CMD_ID.CS_CMD_FARM_PLANT_REQ, structure);
        }

        public static CsTPacket<CSFarmPlantRsp> FarmPlantRsp(CSFarmPlantRsp structure)
        {
            return new CsTPacket<CSFarmPlantRsp>(CS_CMD_ID.CS_CMD_FARM_PLANT_RSP, structure);
        }

        public static CsTPacket<CSFarmFacilitySetGatherLevelReq> FarmFacilitySetGatherLevelReq(
            CSFarmFacilitySetGatherLevelReq structure)
        {
            return new CsTPacket<CSFarmFacilitySetGatherLevelReq>(CS_CMD_ID.CS_CMD_FARM_FACILITY_SET_GATHER_LEVEL_REQ,
                structure);
        }

        public static CsTPacket<CSFarmFacilitySetGatherLevelRsp> FarmFacilitySetGatherLevelRsp(
            CSFarmFacilitySetGatherLevelRsp structure)
        {
            return new CsTPacket<CSFarmFacilitySetGatherLevelRsp>(CS_CMD_ID.CS_CMD_FARM_FACILITY_SET_GATHER_LEVEL_RSP,
                structure);
        }

        public static CsTPacket<CSFarmTrainResultNtf> FarmTrainResultNtf(CSFarmTrainResultNtf structure)
        {
            return new CsTPacket<CSFarmTrainResultNtf>(CS_CMD_ID.CS_CMD_FARM_TRAIN_RESULT_NTF, structure);
        }

        public static CsTPacket<CSFarmAdvancedFacilityOpenNtf> FarmAdvancedFacilityOpenNtf(
            CSFarmAdvancedFacilityOpenNtf structure)
        {
            return new CsTPacket<CSFarmAdvancedFacilityOpenNtf>(CS_CMD_ID.CS_CMD_FARM_ADVANCED_FACILITY_OPEN_NTF,
                structure);
        }

        /// <summary>
        /// 副本时间同步信息
        /// </summary>
        public static CsTPacket<CSInstanceTimesync> InstanceTimesync(CSInstanceTimesync structure)
        {
            return new CsTPacket<CSInstanceTimesync>(CS_CMD_ID.CS_CMD_INSTANCE_TIMESYNC, structure);
        }

        /// <summary>
        /// 拉玩家
        /// </summary>
        public static CsTPacket<CSDragPlayer> DragPlayer(CSDragPlayer structure)
        {
            return new CsTPacket<CSDragPlayer>(CS_CMD_ID.CS_CMD_DRAG_PLAYER, structure);
        }

        /// <summary>
        /// 初始化BUFF列表
        /// </summary>
        public static CsTPacket<CSBuffInitList> BuffInitList(CSBuffInitList structure)
        {
            return new CsTPacket<CSBuffInitList>(CS_CMD_ID.CS_CMD_BUFF_INITLIST, structure);
        }

        /// <summary>
        /// 服务器通知添加新BUFF
        /// </summary>
        public static CsTPacket<CSAddBuff> AddBuff(CSAddBuff structure)
        {
            return new CsTPacket<CSAddBuff>(CS_CMD_ID.CS_CMD_BUFF_ADD_BUFF, structure);
        }

        /// <summary>
        /// 服务器通知删除BUFF
        /// </summary>
        public static CsTPacket<CSDelBuff> DelBuff(CSDelBuff structure)
        {
            return new CsTPacket<CSDelBuff>(CS_CMD_ID.CS_CMD_BUFF_DEL_BUFF, structure);
        }

        /// <summary>
        /// 客户端请求删除BUFF
        /// </summary>
        public static CsTPacket<CSDelBuffReq> DelBuffReq(CSDelBuffReq structure)
        {
            return new CsTPacket<CSDelBuffReq>(CS_CMD_ID.CS_CMD_BUFF_DEL_BUFF_REQ, structure);
        }

        /// <summary>
        /// 服务器通知BUFF参数改变
        /// </summary>
        public static CsTPacket<CSBuffParamChange> BuffParamChange(CSBuffParamChange structure)
        {
            return new CsTPacket<CSBuffParamChange>(CS_CMD_ID.CS_CMD_BUFF_PARAM_CHANGE, structure);
        }

        /// <summary>
        /// 服务器通知应用1个特效
        /// </summary>
        public static CsTPacket<CSApplyEffect> ApplyEffect(CSApplyEffect structure)
        {
            return new CsTPacket<CSApplyEffect>(CS_CMD_ID.CS_CMD_BUFF_EFFECT, structure);
        }

        /// <summary>
        /// 服务器通知condition改变
        /// </summary>
        public static CsTPacket<CSBuffCondition> BuffCondition(CSBuffCondition structure)
        {
            return new CsTPacket<CSBuffCondition>(CS_CMD_ID.CS_CMD_BUFF_CONDITION_CHG, structure);
        }

        /// <summary>
        /// 心跳
        /// </summary>
        public static CsTPacket<CSHeartBeat> HeartBeat(CSHeartBeat structure)
        {
            return new CsTPacket<CSHeartBeat>(CS_CMD_ID.CS_CMD_SYSTEM_HEARTBEAT, structure);
        }

        /// <summary>
        /// Game Manager command
        /// </summary>
        public static CsTPacket<CSGameManagerCmd> GameManagerCmd(CSGameManagerCmd structure)
        {
            return new CsTPacket<CSGameManagerCmd>(CS_CMD_ID.CS_CMD_SYSTEM_GAME_MANAGER_CMD, structure);
        }

        /// <summary>
        /// 服务器全局错误码
        /// </summary>
        public static CsTPacket<CSGlobalErrNtf> GlobalErrNtf(CSGlobalErrNtf structure)
        {
            return new CsTPacket<CSGlobalErrNtf>(CS_CMD_ID.CS_CMD_SYSTEM_GLOBAL_ERROR, structure);
        }

        /// <summary>
        /// 消息包跟踪
        /// </summary>
        public static CsTPacket<CSPkgTimerRecord> PkgTimerRecord(CSPkgTimerRecord structure)
        {
            return new CsTPacket<CSPkgTimerRecord>(CS_CMD_ID.CS_CMD_SYSTEM_PKG_TIMER_RECORD, structure);
        }

        /// <summary>
        /// 传输ANTI数据
        /// </summary>
        public static CsTPacket<CSPkgTransAntiData> PkgTransAntiData(CSPkgTransAntiData structure)
        {
            return new CsTPacket<CSPkgTransAntiData>(CS_CMD_ID.CS_CMD_SYSTEM_TRANS_ANTI_DATA, structure);
        }

        /// <summary>
        /// Ping消息
        /// </summary>
        public static CsTPacket<CSPing> Ping(CSPing structure)
        {
            return new CsTPacket<CSPing>(CS_CMD_ID.CS_CMD_SYSTEM_PING, structure);
        }

        /// <summary>
        /// Ping消息返回信息
        /// </summary>
        public static CsTPacket<CSPingReply> PingReply(CSPingReply structure)
        {
            return new CsTPacket<CSPingReply>(CS_CMD_ID.CS_CMD_SYSTEM_PING_REPLY, structure);
        }

        /// <summary>
        /// 加密消息数据
        /// </summary>
        public static CsTPacket<CSPkgEncryptData> PkgEncryptData(CSPkgEncryptData structure)
        {
            return new CsTPacket<CSPkgEncryptData>(CS_CMD_ID.CS_CMD_SYSTEM_ENCRYPT_DATA, structure);
        }

        /// <summary>
        /// 聊天加密消息数据
        /// </summary>
        public static CsTPacket<CSPkgEncryptData> PkgChatEncryptData(CSPkgEncryptData structure)
        {
            return new CsTPacket<CSPkgEncryptData>(CS_CMD_ID.CS_CMD_CHAT_ENCRYPT_DATA, structure);
        }

        /// <summary>
        /// 指令回馈
        /// </summary>
        public static CsTPacket<CSGameManagerRsp> GameManagerRsp(CSGameManagerRsp structure)
        {
            return new CsTPacket<CSGameManagerRsp>(CS_CMD_ID.CS_CMD_SYSTEM_GAME_MANAGER_RSP, structure);
        }

        /// <summary>
        /// 客户端加载Level完成，进入场景响应
        /// </summary>
        public static CsTPacket<CSEnterLevelRsp> EnterLevelRsp(CSEnterLevelRsp structure)
        {
            return new CsTPacket<CSEnterLevelRsp>(CS_CMD_ID.CS_CMD_ENTER_LEVEL_RSP, structure);
        }

        /// <summary>
        /// 服务器通知客户端的弹窗信息
        /// </summary>
        public static CsTPacket<CSNotifyInfo> NotifyInfo(CSNotifyInfo structure)
        {
            return new CsTPacket<CSNotifyInfo>(CS_CMD_ID.CS_CMD_SYSTEM_NOTIFY_INFO, structure);
        }

        /// <summary>
        /// 踢客户端服务器通知客户端的弹窗信息
        /// </summary>
        public static CsTPacket<CSDropClientNotifyInfo> DropClientNotifyInfo(CSDropClientNotifyInfo structure)
        {
            return new CsTPacket<CSDropClientNotifyInfo>(CS_CMD_ID.CS_CMD_SYSTEM_DROP_CLIENT_NOTIFY_INFO, structure);
        }

        /// <summary>
        /// Feature更新
        /// </summary>
        public static CsTPacket<CSFeatureInfo> FeatureUpdateNtf(CSFeatureInfo structure)
        {
            return new CsTPacket<CSFeatureInfo>(CS_CMD_ID.CS_CMD_FEATURE_UPDATE_NOTIFY, structure);
        }

        /// <summary>
        /// 压缩包
        /// </summary>
        public static CsTPacket<CSZipPkg> ZipPkg(CSZipPkg structure)
        {
            return new CsTPacket<CSZipPkg>(CS_CMD_ID.CS_CMD_ZIP_PKG, structure);
        }

        /// <summary>
        /// 指令回馈
        /// </summary>
        public static CsTPacket<CSSysConndTestReq> SysConndTestReq(CSSysConndTestReq structure)
        {
            return new CsTPacket<CSSysConndTestReq>(CS_CMD_ID.CS_CMD_SYS_CONNDTEST_REQ, structure);
        }

        /// <summary>
        /// 指令回馈
        /// </summary>
        public static CsTPacket<CSSysConndTestRsp> SysConndTestRsp(CSSysConndTestRsp structure)
        {
            return new CsTPacket<CSSysConndTestRsp>(CS_CMD_ID.CS_CMD_SYS_CONNDTEST_RSP, structure);
        }

        /// <summary>
        /// 组队邀请请求
        /// </summary>
        public static CsTPacket<CSTeamInviteReq> TeamInviteReq(CSTeamInviteReq structure)
        {
            return new CsTPacket<CSTeamInviteReq>(CS_CMD_ID.CS_CMD_TEAM_INVITE_REQ, structure);
        }

        /// <summary>
        /// 应答是否同意
        /// </summary>
        public static CsTPacket<CSTeamInviteRet> TeamInviteRet(CSTeamInviteRet structure)
        {
            return new CsTPacket<CSTeamInviteRet>(CS_CMD_ID.CS_CMD_TEAM_INVITE_RET, structure);
        }

        /// <summary>
        /// 玩家请求获取队伍信息
        /// </summary>
        public static CsTPacket<CSTeamInfoGetReq> TeamInfoGetReq(CSTeamInfoGetReq structure)
        {
            return new CsTPacket<CSTeamInfoGetReq>(CS_CMD_ID.CS_CMD_TEAM_INFO_GET_REQ, structure);
        }

        /// <summary>
        /// 通知队伍信息
        /// </summary>
        public static CsTPacket<CSTeamInfoNtf> TeamInfoNtf(CSTeamInfoNtf structure)
        {
            return new CsTPacket<CSTeamInfoNtf>(CS_CMD_ID.CS_CMD_TEAM_INFO_NTF, structure);
        }

        /// <summary>
        /// 请求入队
        /// </summary>
        public static CsTPacket<CSTeamJoinReq> TeamJoinReq(CSTeamJoinReq structure)
        {
            return new CsTPacket<CSTeamJoinReq>(CS_CMD_ID.CS_CMD_TEAM_JOIN_REQ, structure);
        }

        /// <summary>
        /// 入队应答
        /// </summary>
        public static CsTPacket<CSTeamJoinRet> TeamJoinRet(CSTeamJoinRet structure)
        {
            return new CsTPacket<CSTeamJoinRet>(CS_CMD_ID.CS_CMD_TEAM_JOIN_RET, structure);
        }

        /// <summary>
        /// 入队回复
        /// </summary>
        public static CsTPacket<CSTeamJoinRsp> TeamJoinRsp(CSTeamJoinRsp structure)
        {
            return new CsTPacket<CSTeamJoinRsp>(CS_CMD_ID.CS_CMD_TEAM_JOIN_RSP, structure);
        }

        /// <summary>
        /// 增加队员通知
        /// </summary>
        public static CsTPacket<CSTeamAddMemberNtf> TeamAddMemberNtf(CSTeamAddMemberNtf structure)
        {
            return new CsTPacket<CSTeamAddMemberNtf>(CS_CMD_ID.CS_CMD_TEAM_ADD_MEMBER_NTF, structure);
        }

        /// <summary>
        /// 退出队伍请求
        /// </summary>
        public static CsTPacket<CSTeamQuitReq> TeamQuitReq(CSTeamQuitReq structure)
        {
            return new CsTPacket<CSTeamQuitReq>(CS_CMD_ID.CS_CMD_TEAM_QUIT_REQ, structure);
        }

        /// <summary>
        /// 退出队伍回复
        /// </summary>
        public static CsTPacket<CSTeamQuitRsp> TeamQuitRsp(CSTeamQuitRsp structure)
        {
            return new CsTPacket<CSTeamQuitRsp>(CS_CMD_ID.CS_CMD_TEAM_QUIT_RSP, structure);
        }

        /// <summary>
        /// 队员离开通知
        /// </summary>
        public static CsTPacket<CSTeamMemberLeaveNtf> TeamMemberLeaveNtf(CSTeamMemberLeaveNtf structure)
        {
            return new CsTPacket<CSTeamMemberLeaveNtf>(CS_CMD_ID.CS_CMD_TEAM_MEMBER_LEAVE_NTF, structure);
        }

        /// <summary>
        /// 踢人请求
        /// </summary>
        public static CsTPacket<CSTeamKickReq> TeamKickReq(CSTeamKickReq structure)
        {
            return new CsTPacket<CSTeamKickReq>(CS_CMD_ID.CS_CMD_TEAM_KICK_REQ, structure);
        }

        /// <summary>
        /// 踢人回复
        /// </summary>
        public static CsTPacket<CSTeamKickRsp> TeamKickRsp(CSTeamKickRsp structure)
        {
            return new CsTPacket<CSTeamKickRsp>(CS_CMD_ID.CS_CMD_TEAM_KICK_RSP, structure);
        }

        /// <summary>
        /// 踢人通知
        /// </summary>
        public static CsTPacket<CSTeamMemberKickedNtf> TeamMemberKickedNtf(CSTeamMemberKickedNtf structure)
        {
            return new CsTPacket<CSTeamMemberKickedNtf>(CS_CMD_ID.CS_CMD_TEAM_MEMBER_KICKED_NTF, structure);
        }

        /// <summary>
        /// 更换队长请求
        /// </summary>
        public static CsTPacket<CSTeamChangeLeaderReq> TeamChangeLeaderReq(CSTeamChangeLeaderReq structure)
        {
            return new CsTPacket<CSTeamChangeLeaderReq>(CS_CMD_ID.CS_CMD_TEAM_CHANGE_LEADER_REQ, structure);
        }

        /// <summary>
        /// 更换队长回复
        /// </summary>
        public static CsTPacket<CSTeamChangeLeaderRsp> TeamChangeLeaderRsp(CSTeamChangeLeaderRsp structure)
        {
            return new CsTPacket<CSTeamChangeLeaderRsp>(CS_CMD_ID.CS_CMD_TEAM_CHANGE_LEADER_RSP, structure);
        }

        /// <summary>
        /// 更换队长通知
        /// </summary>
        public static CsTPacket<CSTeamChangeLeaderNtf> TeamChangeLeaderNtf(CSTeamChangeLeaderNtf structure)
        {
            return new CsTPacket<CSTeamChangeLeaderNtf>(CS_CMD_ID.CS_CMD_TEAM_CHANGE_LEADER_NTF, structure);
        }

        /// <summary>
        /// 解散队伍
        /// </summary>
        public static CsTPacket<CSTeamDelTeamNtf> TeamDelTeamNtf(CSTeamDelTeamNtf structure)
        {
            return new CsTPacket<CSTeamDelTeamNtf>(CS_CMD_ID.CS_CMD_TEAM_DEL_TEAM_NTF, structure);
        }

        public static CsTPacket<CSTeamUpdateMemberNtf> TeamUpdateMemberNtf(CSTeamUpdateMemberNtf structure)
        {
            return new CsTPacket<CSTeamUpdateMemberNtf>(CS_CMD_ID.CS_CMD_TEAM_UPDATE_MEMBER_NTF, structure);
        }

        /// <summary>
        /// 队员重新上线时更新队员NetId
        /// </summary>
        public static CsTPacket<CSTeamUpdateNetIdNtf> TeamUpdateNetIdNtf(CSTeamUpdateNetIdNtf structure)
        {
            return new CsTPacket<CSTeamUpdateNetIdNtf>(CS_CMD_ID.CS_CMD_TEAM_UPDATE_NETID_NTF, structure);
        }

        /// <summary>
        /// 快速组队根据队伍编号搜索队伍请求
        /// </summary>
        public static CsTPacket<CSTeamSearchTeamByIdReq> TeamSearchTeamByIdReq(CSTeamSearchTeamByIdReq structure)
        {
            return new CsTPacket<CSTeamSearchTeamByIdReq>(CS_CMD_ID.CS_CMD_TEAM_SEARCH_TEAM_BY_ID_REQ, structure);
        }

        /// <summary>
        /// 快速组队搜索队伍列表请求
        /// </summary>
        public static CsTPacket<CSTeamSearchTeamsReq> TeamSearchTeamsReq(CSTeamSearchTeamsReq structure)
        {
            return new CsTPacket<CSTeamSearchTeamsReq>(CS_CMD_ID.CS_CMD_TEAM_SEARCH_TEAMS_REQ, structure);
        }

        /// <summary>
        /// 快速组队搜索回复
        /// </summary>
        public static CsTPacket<CSTeamSearchRsp> TeamSearchRsp(CSTeamSearchRsp structure)
        {
            return new CsTPacket<CSTeamSearchRsp>(CS_CMD_ID.CS_CMD_TEAM_SEARCH_RSP, structure);
        }

        /// <summary>
        /// 快速组队队伍修改请求
        /// </summary>
        public static CsTPacket<CSTeamModifyReq> TeamModifyReq(CSTeamModifyReq structure)
        {
            return new CsTPacket<CSTeamModifyReq>(CS_CMD_ID.CS_CMD_TEAM_MODIFY_REQ, structure);
        }

        /// <summary>
        /// 快速组队队伍修改回复
        /// </summary>
        public static CsTPacket<CSTeamModifyRsp> TeamModifyRsp(CSTeamModifyRsp structure)
        {
            return new CsTPacket<CSTeamModifyRsp>(CS_CMD_ID.CS_CMD_TEAM_MODIFY_RSP, structure);
        }

        /// <summary>
        /// 快速组队队伍修改通知
        /// </summary>
        public static CsTPacket<CSTeamModifyNtf> TeamModifyNtf(CSTeamModifyNtf structure)
        {
            return new CsTPacket<CSTeamModifyNtf>(CS_CMD_ID.CS_CMD_TEAM_MODIFY_NTF, structure);
        }

        /// <summary>
        /// 快速组队队伍创建请求
        /// </summary>
        public static CsTPacket<CSTeamCreateReq> TeamCreateReq(CSTeamCreateReq structure)
        {
            return new CsTPacket<CSTeamCreateReq>(CS_CMD_ID.CS_CMD_TEAM_CREATE_REQ, structure);
        }

        /// <summary>
        /// 快速组队队伍创建回复
        /// </summary>
        public static CsTPacket<CSTeamCreateRsp> TeamCreateRsp(CSTeamCreateRsp structure)
        {
            return new CsTPacket<CSTeamCreateRsp>(CS_CMD_ID.CS_CMD_TEAM_CREATE_RSP, structure);
        }

        /// <summary>
        /// 队伍属性更新通知
        /// </summary>
        public static CsTPacket<CSTeamUpdateNtf> TeamUpdateNtf(CSTeamUpdateNtf structure)
        {
            return new CsTPacket<CSTeamUpdateNtf>(CS_CMD_ID.CS_CMD_TEAM_UPDATE_NTF, structure);
        }

        /// <summary>
        /// 快速组队根据队伍名搜索队伍请求
        /// </summary>
        public static CsTPacket<CSTeamSearchByNameReq> TeamSearchByNameReq(CSTeamSearchByNameReq structure)
        {
            return new CsTPacket<CSTeamSearchByNameReq>(CS_CMD_ID.CS_CMD_TEAM_SEARCH_BY_NAME_REQ, structure);
        }

        /// <summary>
        /// 队员移动通知
        /// </summary>
        public static CsTPacket<CSTeamMemberMoveNtf> TeamMemberMoveNtf(CSTeamMemberMoveNtf structure)
        {
            return new CsTPacket<CSTeamMemberMoveNtf>(CS_CMD_ID.CS_CMD_TEAM_MEMBER_MOVE_NTF, structure);
        }

        /// <summary>
        /// 组队错误
        /// </summary>
        public static CsTPacket<CSTeamErr> TeamErr(CSTeamErr structure)
        {
            return new CsTPacket<CSTeamErr>(CS_CMD_ID.CS_CMD_TEAM_ERR, structure);
        }

        /// <summary>
        /// 组队通知
        /// </summary>
        public static CsTPacket<CSTeamNotify> TeamNotify(CSTeamNotify structure)
        {
            return new CsTPacket<CSTeamNotify>(CS_CMD_ID.CS_CMD_TEAM_NOTIFY, structure);
        }

        /// <summary>
        /// 队员小地图点击点通知
        /// </summary>
        public static CsTPacket<CSTeamPushVecNtf> TeamPushVecNtf(CSTeamPushVecNtf structure)
        {
            return new CsTPacket<CSTeamPushVecNtf>(CS_CMD_ID.CS_CMD_TEAM_PUSH_VEC_NTF, structure);
        }

        /// <summary>
        /// 队员入队后，广播该队员身上buff
        /// </summary>
        public static CsTPacket<CSTeamMemberBuffSync> TeamMemberBuffSync(CSTeamMemberBuffSync structure)
        {
            return new CsTPacket<CSTeamMemberBuffSync>(CS_CMD_ID.CS_CMD_TEAM_MEMBER_BUFF_SYNC, structure);
        }

        /// <summary>
        /// 队员位置信息同步
        /// </summary>
        public static CsTPacket<CSTeamMemberPosSync> TeamMemberPosSync(CSTeamMemberPosSync structure)
        {
            return new CsTPacket<CSTeamMemberPosSync>(CS_CMD_ID.CS_CMD_TEAM_MEMBER_POS_SYNC, structure);
        }

        /// <summary>
        /// 快速加入队伍请求
        /// </summary>
        public static CsTPacket<CSTeamQuickJoinReq> TeamQuickJoinReq(CSTeamQuickJoinReq structure)
        {
            return new CsTPacket<CSTeamQuickJoinReq>(CS_CMD_ID.CS_CMD_TEAM_QUICK_JOIN_REQ, structure);
        }

        /// <summary>
        /// 队员add/del buff同步
        /// </summary>
        public static CsTPacket<CSTeamMemberBuffAddDelNtf> TeamMemberBuffAddDelNtf(CSTeamMemberBuffAddDelNtf structure)
        {
            return new CsTPacket<CSTeamMemberBuffAddDelNtf>(CS_CMD_ID.CS_CMD_TEAM_MEMBER_BUFF_ADDDEL_NTF, structure);
        }

        /// <summary>
        /// 队员属性变更通知
        /// </summary>
        public static CsTPacket<CSTeamMemberAttrsUpdateNtf> TeamMemberAttrsUpdateNtf(
            CSTeamMemberAttrsUpdateNtf structure)
        {
            return new CsTPacket<CSTeamMemberAttrsUpdateNtf>(CS_CMD_ID.CS_CMD_TEAM_MEMBER_ATTRS_UPDATE_NTF, structure);
        }

        /// <summary>
        /// 队伍提升为团队
        /// </summary>
        public static CsTPacket<CSTeamRaidUpgrade> TeamRaidUpgrade(CSTeamRaidUpgrade structure)
        {
            return new CsTPacket<CSTeamRaidUpgrade>(CS_CMD_ID.CS_CMD_TEAM_RAID_UPGRADE, structure);
        }

        /// <summary>
        /// A邀请B组团
        /// </summary>
        public static CsTPacket<CSTeamRaidInviteReq> TeamRaidInviteReq(CSTeamRaidInviteReq structure)
        {
            return new CsTPacket<CSTeamRaidInviteReq>(CS_CMD_ID.CS_CMD_TEAM_RAID_INVITE_REQ, structure);
        }

        /// <summary>
        /// 请求入团
        /// </summary>
        public static CsTPacket<CSTeamRaidApplyReq> TeamRaidApplyReq(CSTeamRaidApplyReq structure)
        {
            return new CsTPacket<CSTeamRaidApplyReq>(CS_CMD_ID.CS_CMD_TEAM_RAID_APPLY_REQ, structure);
        }

        /// <summary>
        /// 关卡请求入队
        /// </summary>
        public static CsTPacket<CSTeamJoinReq> TeamLinkJoinReq(CSTeamJoinReq structure)
        {
            return new CsTPacket<CSTeamJoinReq>(CS_CMD_ID.CS_CMD_LINK_TEAM_JOIN_REQ, structure);
        }

        /// <summary>
        /// 客户端请求交换2个位置的物品
        /// </summary>
        public static CsTPacket<CSReqSwapItem> ReqSwapItem(CSReqSwapItem structure)
        {
            return new CsTPacket<CSReqSwapItem>(CS_CMD_ID.CS_CMD_ITEM_REQ_SWAPITEM, structure);
        }

        /// <summary>
        /// 回复交换结果
        /// </summary>
        public static CsTPacket<CSResSwapItem> ResSwapItem(CSResSwapItem structure)
        {
            return new CsTPacket<CSResSwapItem>(CS_CMD_ID.CS_CMD_ITEM_RES_SWAPITEM, structure);
        }

        /// <summary>
        /// 客户端请求把物品移动到某个物品栏
        /// </summary>
        public static CsTPacket<CSReqMoveItem> ReqMoveItem(CSReqMoveItem structure)
        {
            return new CsTPacket<CSReqMoveItem>(CS_CMD_ID.CS_CMD_ITEM_REQ_MOVEITEM, structure);
        }

        /// <summary>
        /// 回复移动结果
        /// </summary>
        public static CsTPacket<CSResMoveItem> ResMoveItem(CSResMoveItem structure)
        {
            return new CsTPacket<CSResMoveItem>(CS_CMD_ID.CS_CMD_ITEM_RES_MOVEITEM, structure);
        }

        /// <summary>
        /// 客户端请求把摧毁某个物品
        /// </summary>
        public static CsTPacket<CSReqDestroyItem> ReqDestroyItem(CSReqDestroyItem structure)
        {
            return new CsTPacket<CSReqDestroyItem>(CS_CMD_ID.CS_CMD_ITEM_REQ_DESTROYITEM, structure);
        }

        /// <summary>
        /// 回复销毁结果
        /// </summary>
        public static CsTPacket<CSResDestroyItem> ResDestroyItem(CSResDestroyItem structure)
        {
            return new CsTPacket<CSResDestroyItem>(CS_CMD_ID.CS_CMD_ITEM_RES_DESTROYITEM, structure);
        }

        /// <summary>
        /// 客户端请求使用物品
        /// </summary>
        public static CsTPacket<CSReqUseItem> ReqUseItem(CSReqUseItem structure)
        {
            return new CsTPacket<CSReqUseItem>(CS_CMD_ID.CS_CMD_ITEM_REQ_USEITEM, structure);
        }

        /// <summary>
        /// 回复使用结果
        /// </summary>
        public static CsTPacket<CSResUseItem> ResUseItem(CSResUseItem structure)
        {
            return new CsTPacket<CSResUseItem>(CS_CMD_ID.CS_CMD_ITEM_RES_USEITEM, structure);
        }

        /// <summary>
        /// 客户端请求整理物品
        /// </summary>
        public static CsTPacket<CSReqSortItem> ReqSortItem(CSReqSortItem structure)
        {
            return new CsTPacket<CSReqSortItem>(CS_CMD_ID.CS_CMD_ITEM_REQ_SORTITEM, structure);
        }

        /// <summary>
        /// 回复整理物品
        /// </summary>
        public static CsTPacket<CSResSortItem> ResSortItem(CSResSortItem structure)
        {
            return new CsTPacket<CSResSortItem>(CS_CMD_ID.CS_CMD_ITEM_RES_SORTITEM, structure);
        }

        /// <summary>
        /// 客户端请求拆分物品
        /// </summary>
        public static CsTPacket<CSReqSplitItem> ReqSplitItem(CSReqSplitItem structure)
        {
            return new CsTPacket<CSReqSplitItem>(CS_CMD_ID.CS_CMD_ITEM_REQ_SPLITITEM, structure);
        }

        /// <summary>
        /// 回复拆分结果
        /// </summary>
        public static CsTPacket<CSResSplitItem> ResSplitItem(CSResSplitItem structure)
        {
            return new CsTPacket<CSResSplitItem>(CS_CMD_ID.CS_CMD_ITEM_RES_SPLITITEM, structure);
        }

        /// <summary>
        /// 服务器更新客户端物品，包括更新C2的情况
        /// </summary>
        public static CsTPacket<CSUpdateItem> UpdateItem(CSUpdateItem structure)
        {
            return new CsTPacket<CSUpdateItem>(CS_CMD_ID.CS_CMD_ITEM_UPDATE_ITEM, structure);
        }

        /// <summary>
        /// 同步装备avatar
        /// </summary>
        public static CsTPacket<CSItemAvatarSync> ItemAvatarSync(CSItemAvatarSync structure)
        {
            return new CsTPacket<CSItemAvatarSync>(CS_CMD_ID.CS_CMD_ITEM_AVATAR_SYNC, structure);
        }

        /// <summary>
        /// 请求扩展格子
        /// </summary>
        public static CsTPacket<CSReqExpandGrid> ReqExpandGrid(CSReqExpandGrid structure)
        {
            return new CsTPacket<CSReqExpandGrid>(CS_CMD_ID.CS_CMD_ITEM_REQ_EXPANDGRID, structure);
        }

        /// <summary>
        /// 回复扩展格子
        /// </summary>
        public static CsTPacket<CSResExpandGrid> ResExpandGrid(CSResExpandGrid structure)
        {
            return new CsTPacket<CSResExpandGrid>(CS_CMD_ID.CS_CMD_ITEM_RES_EXPANDGRID, structure);
        }

        /// <summary>
        /// 请求装备RANK提升
        /// </summary>
        public static CsTPacket<CSReqRankLevelUp> ReqRankLevelUp(CSReqRankLevelUp structure)
        {
            return new CsTPacket<CSReqRankLevelUp>(CS_CMD_ID.CS_CMD_ITEM_REQ_RANKLEVELUP, structure);
        }

        /// <summary>
        /// 回复装备RANK提升
        /// </summary>
        public static CsTPacket<CSResRankLevelUp> ResRankLevelUp(CSResRankLevelUp structure)
        {
            return new CsTPacket<CSResRankLevelUp>(CS_CMD_ID.CS_CMD_ITEM_RES_RANKLEVELUP, structure);
        }

        /// <summary>
        /// 请求镶嵌
        /// </summary>
        public static CsTPacket<CSReqEnchaseEquip> ReqEnchaseEquip(CSReqEnchaseEquip structure)
        {
            return new CsTPacket<CSReqEnchaseEquip>(CS_CMD_ID.CS_CMD_ITEM_REQ_ENCHASEEQUIP, structure);
        }

        /// <summary>
        /// 回复镶嵌
        /// </summary>
        public static CsTPacket<CSResEnchaseEquip> ResEnchaseEquip(CSResEnchaseEquip structure)
        {
            return new CsTPacket<CSResEnchaseEquip>(CS_CMD_ID.CS_CMD_ITEM_RES_ENCHASEEQUIP, structure);
        }

        /// <summary>
        /// 装备RankUpToSix广播
        /// </summary>
        public static CsTPacket<CSResRankLevelup2Six> ResRankLevelup2Six(CSResRankLevelup2Six structure)
        {
            return new CsTPacket<CSResRankLevelup2Six>(CS_CMD_ID.CS_CMD_ITEM_RES_RANKLEVELUP2SIX, structure);
        }

        /// <summary>
        /// 请求装备强化
        /// </summary>
        public static CsTPacket<CSReqEquipEnforce> ReqEquipEnforce(CSReqEquipEnforce structure)
        {
            return new CsTPacket<CSReqEquipEnforce>(CS_CMD_ID.CS_CMD_ITEM_REQ_EQUIPENFORCE, structure);
        }

        /// <summary>
        /// 回复装备强化
        /// </summary>
        public static CsTPacket<CSResEquipEnforce> ResEquipEnforce(CSResEquipEnforce structure)
        {
            return new CsTPacket<CSResEquipEnforce>(CS_CMD_ID.CS_CMD_ITEM_RES_EQUIPENFORCE, structure);
        }

        /// <summary>
        /// 请求防具精铸
        /// </summary>
        public static CsTPacket<CSReqEquipFound> ReqEquipFound(CSReqEquipFound structure)
        {
            return new CsTPacket<CSReqEquipFound>(CS_CMD_ID.CS_CMD_ITEM_REQ_EQUIP_FOUND, structure);
        }

        /// <summary>
        /// 回复防具精铸
        /// </summary>
        public static CsTPacket<CSResEquipFound> ResEquipFound(CSResEquipFound structure)
        {
            return new CsTPacket<CSResEquipFound>(CS_CMD_ID.CS_CMD_ITEM_RES_EQUIP_FOUND, structure);
        }

        /// <summary>
        /// 装备强化广播
        /// </summary>
        public static CsTPacket<CSResEquipEnforceBoard> ResEquipEnforceBoard(CSResEquipEnforceBoard structure)
        {
            return new CsTPacket<CSResEquipEnforceBoard>(CS_CMD_ID.CS_CMD_ITEM_RES_EQUIP_ENFORCE_BOARD, structure);
        }

        /// <summary>
        /// 请求精铸属性开启
        /// </summary>
        public static CsTPacket<CSReqEquipFoundOpen> ReqEquipFoundOpen(CSReqEquipFoundOpen structure)
        {
            return new CsTPacket<CSReqEquipFoundOpen>(CS_CMD_ID.CS_CMD_ITEM_REQ_EQUIP_FOUND_OPEN, structure);
        }

        /// <summary>
        /// 回复精铸属性开启
        /// </summary>
        public static CsTPacket<CSResEquipFoundOpen> ResEquipFoundOpen(CSResEquipFoundOpen structure)
        {
            return new CsTPacket<CSResEquipFoundOpen>(CS_CMD_ID.CS_CMD_ITEM_RES_EQUIP_FOUND_OPEN, structure);
        }

        /// <summary>
        /// 开包同步
        /// </summary>
        public static CsTPacket<CSItemBoxOpenSync> ItemBoxOpenSync(CSItemBoxOpenSync structure)
        {
            return new CsTPacket<CSItemBoxOpenSync>(CS_CMD_ID.CS_CMD_ITEM_BOX_OPEN_SYNC, structure);
        }

        /// <summary>
        /// 玫瑰礼花通知
        /// </summary>
        public static CsTPacket<SCRoseFlowerNtf> RoseFlowerNtf(SCRoseFlowerNtf structure)
        {
            return new CsTPacket<SCRoseFlowerNtf>(CS_CMD_ID.S2C_CMD_ITEM_ROSE_FLOWER_NTF, structure);
        }

        /// <summary>
        /// 节日礼花使用
        /// </summary>
        public static CsTPacket<CSFireWorksUseNtf> FireWorkUseNtf(CSFireWorksUseNtf structure)
        {
            return new CsTPacket<CSFireWorksUseNtf>(CS_CMD_ID.S2C_CMD_ITEM_FIREWORKS_USE_NTF, structure);
        }

        /// <summary>
        /// 添加打造技能
        /// </summary>
        public static CsTPacket<CSAddCraft> AddCraft(CSAddCraft structure)
        {
            return new CsTPacket<CSAddCraft>(CS_CMD_ID.CS_CMD_CRAFT_ADDCRAFTID, structure);
        }

        /// <summary>
        /// 添加打造技能结果返回
        /// </summary>
        public static CsTPacket<CSAddCraftResult> AddCraftResult(CSAddCraftResult structure)
        {
            return new CsTPacket<CSAddCraftResult>(CS_CMD_ID.CS_CMD_CRAFT_ADDCRAFTIDRESULT, structure);
        }

        /// <summary>
        /// 开始打造
        /// </summary>
        public static CsTPacket<CSBeginCraft> BeginCraft(CSBeginCraft structure)
        {
            return new CsTPacket<CSBeginCraft>(CS_CMD_ID.CS_CMD_CRAFT_BEGINCRAFT, structure);
        }

        /// <summary>
        /// 开始打造结果返回
        /// </summary>
        public static CsTPacket<CSBeginCraftResult> BeginCraftResult(CSBeginCraftResult structure)
        {
            return new CsTPacket<CSBeginCraftResult>(CS_CMD_ID.CS_CMD_CRAFT_BEGINCRAFTRESULT, structure);
        }

        /// <summary>
        /// 商店兑换
        /// </summary>
        public static CsTPacket<CSMaterialExchange> MaterialExchange(CSMaterialExchange structure)
        {
            return new CsTPacket<CSMaterialExchange>(CS_CMD_ID.CS_CMD_MATERIAL_EXCHANGE, structure);
        }

        /// <summary>
        /// 商店兑换结果
        /// </summary>
        public static CsTPacket<CSMaterialExchangeNtf> MaterialExchangeNtf(CSMaterialExchangeNtf structure)
        {
            return new CsTPacket<CSMaterialExchangeNtf>(CS_CMD_ID.CS_CMD_MATERIAL_EXCHANGE_NTF, structure);
        }

        /// <summary>
        /// 更新
        /// </summary>
        public static CsTPacket<CSShortcutUpdate> ShortcutUpdate(CSShortcutUpdate structure)
        {
            return new CsTPacket<CSShortcutUpdate>(CS_CMD_ID.CS_CMD_SHORTCUT_UPDATE, structure);
        }

        /// <summary>
        /// 技能效果同步
        /// </summary>
        public static CsTPacket<CSSkillEffectInfo> SkillEffectSync(CSSkillEffectInfo structure)
        {
            return new CsTPacket<CSSkillEffectInfo>(CS_CMD_ID.CS_CMD_SKILL_EFFECT_SYNC, structure);
        }

        /// <summary>
        /// 技能结果同步
        /// </summary>
        public static CsTPacket<CSSkillResultList> SkillResultSync(CSSkillResultList structure)
        {
            return new CsTPacket<CSSkillResultList>(CS_CMD_ID.CS_CMD_SKILL_RESULT_SYNC, structure);
        }

        /// <summary>
        /// 天赋升级请求
        /// </summary>
        public static CsTPacket<CSTalentLevelupReq> TalentLevelupReq(CSTalentLevelupReq structure)
        {
            return new CsTPacket<CSTalentLevelupReq>(CS_CMD_ID.CS_CMD_TALENT_LEVELUP_REQ, structure);
        }

        /// <summary>
        /// 天赋升级应答
        /// </summary>
        public static CsTPacket<CSTalentLevelupRsp> TalentLevelupRsp(CSTalentLevelupRsp structure)
        {
            return new CsTPacket<CSTalentLevelupRsp>(CS_CMD_ID.CS_CMD_TALENT_LEVELUP_RSP, structure);
        }

        /// <summary>
        /// 天赋激活请求
        /// </summary>
        public static CsTPacket<CSTalentActiveReq> TalentActiveReq(CSTalentActiveReq structure)
        {
            return new CsTPacket<CSTalentActiveReq>(CS_CMD_ID.CS_CMD_TALENT_ACTIVE_REQ, structure);
        }

        /// <summary>
        /// 天赋激活应答
        /// </summary>
        public static CsTPacket<CSTalentActiveRsp> TalentActiveRsp(CSTalentActiveRsp structure)
        {
            return new CsTPacket<CSTalentActiveRsp>(CS_CMD_ID.CS_CMD_TALENT_ACTIVE_RSP, structure);
        }

        /// <summary>
        /// 天赋解除激活请求
        /// </summary>
        public static CsTPacket<CSTalentUnActiveReq> TalentUnActiveReq(CSTalentUnActiveReq structure)
        {
            return new CsTPacket<CSTalentUnActiveReq>(CS_CMD_ID.CS_CMD_TALENT_UNACTIVE_REQ, structure);
        }

        /// <summary>
        /// 天赋解除激活应答
        /// </summary>
        public static CsTPacket<CSTalentUnActiveRsp> TalentUnActiveRsp(CSTalentUnActiveRsp structure)
        {
            return new CsTPacket<CSTalentUnActiveRsp>(CS_CMD_ID.CS_CMD_TALENT_UNACTIVE_RSP, structure);
        }

        /// <summary>
        /// 设置PVE奥义请求
        /// </summary>
        public static CsTPacket<CSSetPVERageReq> SetPVERageReq(CSSetPVERageReq structure)
        {
            return new CsTPacket<CSSetPVERageReq>(CS_CMD_ID.CS_CMD_SET_PVE_RAGE_REQ, structure);
        }

        /// <summary>
        /// 设置PVE奥义应答
        /// </summary>
        public static CsTPacket<CSSetPVERageRsp> SetPVERageRsp(CSSetPVERageRsp structure)
        {
            return new CsTPacket<CSSetPVERageRsp>(CS_CMD_ID.CS_CMD_SET_PVE_RAGE_RSP, structure);
        }

        /// <summary>
        /// 观看视屏通知
        /// </summary>
        public static CsTPacket<CSVideoViewNtf> VideoViewNtf(CSVideoViewNtf structure)
        {
            return new CsTPacket<CSVideoViewNtf>(CS_CMD_ID.CS_CMD_VIDEO_VIEW_NTF, structure);
        }

        /// <summary>
        /// 设置奥义请求
        /// </summary>
        public static CsTPacket<CSSetRageReq> SetRageReq(CSSetRageReq structure)
        {
            return new CsTPacket<CSSetRageReq>(CS_CMD_ID.CS_CMD_SET_RAGE_REQ, structure);
        }

        /// <summary>
        /// 设置奥义应答
        /// </summary>
        public static CsTPacket<CSSetRageRsp> SetRageRsp(CSSetRageRsp structure)
        {
            return new CsTPacket<CSSetRageRsp>(CS_CMD_ID.CS_CMD_SET_RAGE_RSP, structure);
        }

        /// <summary>
        /// 开始采集剥取
        /// </summary>
        public static CsTPacket<CSBeginLoot> BeginLoot(CSBeginLoot structure)
        {
            return new CsTPacket<CSBeginLoot>(CS_CMD_ID.CS_CMD_LOOT_BEGINLOOT, structure);
        }

        /// <summary>
        /// 采集剥取返回
        /// </summary>
        public static CsTPacket<CSBeginLootResult> BeginLootResult(CSBeginLootResult structure)
        {
            return new CsTPacket<CSBeginLootResult>(CS_CMD_ID.CS_CMD_LOOT_BEGINLOOTRESULT, structure);
        }

        /// <summary>
        /// 开始钓鱼
        /// </summary>
        public static CsTPacket<CSLootFishBeginReq> LootFishBeginReq(CSLootFishBeginReq structure)
        {
            return new CsTPacket<CSLootFishBeginReq>(CS_CMD_ID.CS_CMD_LOOT_FISH_BEGIN_REQ, structure);
        }

        /// <summary>
        /// 开始钓鱼回复
        /// </summary>
        public static CsTPacket<CSLootFishBeginRes> LootFishBeginRes(CSLootFishBeginRes structure)
        {
            return new CsTPacket<CSLootFishBeginRes>(CS_CMD_ID.CS_CMD_LOOT_FISH_BEGIN_RES, structure);
        }

        /// <summary>
        /// 收杆请求
        /// </summary>
        public static CsTPacket<CSLootFishFinishReq> LootFishFinishReq(CSLootFishFinishReq structure)
        {
            return new CsTPacket<CSLootFishFinishReq>(CS_CMD_ID.CS_CMD_LOOT_FISH_FINISH_REQ, structure);
        }

        /// <summary>
        /// 收杆回复
        /// </summary>
        public static CsTPacket<CSLootFishFinishRes> LootFishFinishRes(CSLootFishFinishRes structure)
        {
            return new CsTPacket<CSLootFishFinishRes>(CS_CMD_ID.CS_CMD_LOOT_FISH_FINISH_RES, structure);
        }

        /// <summary>
        /// 请求采集点信息
        /// </summary>
        public static CsTPacket<CSSyncLootInfoReq> SyncLootInfoReq(CSSyncLootInfoReq structure)
        {
            return new CsTPacket<CSSyncLootInfoReq>(CS_CMD_ID.CS_CMD_SYNC_LOOTINFO_REQ, structure);
        }

        /// <summary>
        /// 钓鱼结束请求
        /// </summary>
        public static CsTPacket<CSLootFishFinish2Req> LootFishFinish2Req(CSLootFishFinish2Req structure)
        {
            return new CsTPacket<CSLootFishFinish2Req>(CS_CMD_ID.CS_CMD_LOOT_FISH_FINISH2_REQ, structure);
        }

        /// <summary>
        /// 钓鱼结束回复
        /// </summary>
        public static CsTPacket<CSLootFishFinish2Res> LootFishFinish2Res(CSLootFishFinish2Res structure)
        {
            return new CsTPacket<CSLootFishFinish2Res>(CS_CMD_ID.CS_CMD_LOOT_FISH_FINISH2_RES, structure);
        }

        public static CsTPacket<CSSupplyBoxStateNtf> SupplyBoxStateNtf(CSSupplyBoxStateNtf structure)
        {
            return new CsTPacket<CSSupplyBoxStateNtf>(CS_CMD_ID.CS_CMD_SUPPLY_BOX_STATE_NTF, structure);
        }

        public static CsTPacket<CSSupplyBoxGetItemReq> SupplyBoxGetItemReq(CSSupplyBoxGetItemReq structure)
        {
            return new CsTPacket<CSSupplyBoxGetItemReq>(CS_CMD_ID.CS_CMD_SUPPLY_BOX_GET_ITEM_REQ, structure);
        }

        public static CsTPacket<CSSupplyBoxGetItemRsp> SupplyBoxGetItemRsp(CSSupplyBoxGetItemRsp structure)
        {
            return new CsTPacket<CSSupplyBoxGetItemRsp>(CS_CMD_ID.CS_CMD_SUPPLY_BOX_GET_ITEM_RSP, structure);
        }

        public static CsTPacket<CSSupplyBoxInitItemNtf> SupplyBoxInitItemNtf(CSSupplyBoxInitItemNtf structure)
        {
            return new CsTPacket<CSSupplyBoxInitItemNtf>(CS_CMD_ID.CS_CMD_SUPPLY_BOX_INIT_ITEM_NTF, structure);
        }

        public static CsTPacket<CSSupplyCatUnlockReq> SupplyCatUnlockReq(CSSupplyCatUnlockReq structure)
        {
            return new CsTPacket<CSSupplyCatUnlockReq>(CS_CMD_ID.CS_CMD_SUPPLY_CAT_UNLOCK_REQ, structure);
        }

        public static CsTPacket<CSSupplyCatUnlockNtf> SupplyCatUnlockNtf(CSSupplyCatUnlockNtf structure)
        {
            return new CsTPacket<CSSupplyCatUnlockNtf>(CS_CMD_ID.CS_CMD_SUPPLY_CAT_UNLOCK_NTF, structure);
        }

        public static CsTPacket<CSSupplyBoxGetAllReq> SupplyBoxGetAllReq(CSSupplyBoxGetAllReq structure)
        {
            return new CsTPacket<CSSupplyBoxGetAllReq>(CS_CMD_ID.CS_CMD_SUPPLY_BOX_GET_ALL_REQ, structure);
        }

        public static CsTPacket<CSSupplyBoxOnePersonReq> SupplyBoxGetOnePReq(CSSupplyBoxOnePersonReq structure)
        {
            return new CsTPacket<CSSupplyBoxOnePersonReq>(CS_CMD_ID.CS_CMD_SUPPLY_BOX_GET_ONEPERSON_REQ, structure);
        }

        public static CsTPacket<CSContributeBoxStateNtf> ContributeBoxStateNtf(CSContributeBoxStateNtf structure)
        {
            return new CsTPacket<CSContributeBoxStateNtf>(CS_CMD_ID.CS_CMD_CONTRIBUTE_BOX_STATE_NTF, structure);
        }

        /// <summary>
        /// 接受任务
        /// </summary>
        public static CsTPacket<C2SAcceptTask> C2SAcceptTask(C2SAcceptTask structure)
        {
            return new CsTPacket<C2SAcceptTask>(CS_CMD_ID.C2S_CMD_TASK_ACCEPTTASK, structure);
        }

        /// <summary>
        /// 接受任务
        /// </summary>
        public static CsTPacket<C2SAcceptTask2> C2SAcceptTask2(C2SAcceptTask2 structure)
        {
            return new CsTPacket<C2SAcceptTask2>(CS_CMD_ID.C2S_CMD_TASK_ACCEPTTASK2, structure);
        }

        /// <summary>
        /// 放弃任务
        /// </summary>
        public static CsTPacket<C2SGiveupTask> C2SGiveupTask(C2SGiveupTask structure)
        {
            return new CsTPacket<C2SGiveupTask>(CS_CMD_ID.C2S_CMD_TASK_GIVEUPTASK, structure);
        }

        /// <summary>
        /// 交任务
        /// </summary>
        public static CsTPacket<C2SSubmitTask> C2SSubmitTask(C2SSubmitTask structure)
        {
            return new CsTPacket<C2SSubmitTask>(CS_CMD_ID.C2S_CMD_TASK_SUBMITTASK, structure);
        }

        /// <summary>
        /// 交任务
        /// </summary>
        public static CsTPacket<C2SSubmitTask2> C2SSubmitTask2(C2SSubmitTask2 structure)
        {
            return new CsTPacket<C2SSubmitTask2>(CS_CMD_ID.C2S_CMD_TASK_SUBMITTASK2, structure);
        }

        /// <summary>
        /// 追踪任务
        /// </summary>
        public static CsTPacket<C2STraceTask> C2STraceTask(C2STraceTask structure)
        {
            return new CsTPacket<C2STraceTask>(CS_CMD_ID.C2S_CMD_TASK_TRACETASK, structure);
        }

        /// <summary>
        /// 共享任务
        /// </summary>
        public static CsTPacket<C2SShareTask> C2SShareTask(C2SShareTask structure)
        {
            return new CsTPacket<C2SShareTask>(CS_CMD_ID.C2S_CMD_TASK_SHARETASK, structure);
        }

        /// <summary>
        /// 日常同步
        /// </summary>
        public static CsTPacket<C2SSyncDaily> C2SSyncDaily(C2SSyncDaily structure)
        {
            return new CsTPacket<C2SSyncDaily>(CS_CMD_ID.C2S_CMD_TASK_SYNCDAILY, structure);
        }

        /// <summary>
        /// 日常刷新
        /// </summary>
        public static CsTPacket<C2SRefreshDaily> C2SRefreshDaily(C2SRefreshDaily structure)
        {
            return new CsTPacket<C2SRefreshDaily>(CS_CMD_ID.C2S_CMD_TASK_REFRESHDAILY, structure);
        }

        /// <summary>
        /// 日程表刷新
        /// </summary>
        public static CsTPacket<C2SRefreshSchedule> C2SRefreshSchedule(C2SRefreshSchedule structure)
        {
            return new CsTPacket<C2SRefreshSchedule>(CS_CMD_ID.C2S_CMD_TASK_REFRESHSCHEDULE, structure);
        }

        /// <summary>
        /// 日常刷新
        /// </summary>
        public static CsTPacket<C2SRefreshxDaily> C2SRefreshxDaily(C2SRefreshxDaily structure)
        {
            return new CsTPacket<C2SRefreshxDaily>(CS_CMD_ID.C2S_CMD_TASK_REFRESHXDAILY, structure);
        }

        /// <summary>
        /// 接受任务
        /// </summary>
        public static CsTPacket<S2CAcceptTask> S2CAcceptTask(S2CAcceptTask structure)
        {
            return new CsTPacket<S2CAcceptTask>(CS_CMD_ID.S2C_CMD_TASK_ACCEPTTASK, structure);
        }

        /// <summary>
        /// 放弃任务
        /// </summary>
        public static CsTPacket<S2CGiveupTask> S2CGiveupTask(S2CGiveupTask structure)
        {
            return new CsTPacket<S2CGiveupTask>(CS_CMD_ID.S2C_CMD_TASK_GIVEUPTASK, structure);
        }

        /// <summary>
        /// 交任务
        /// </summary>
        public static CsTPacket<S2CSubmitTask> S2CSubmitTask(S2CSubmitTask structure)
        {
            return new CsTPacket<S2CSubmitTask>(CS_CMD_ID.S2C_CMD_TASK_SUBMITTASK, structure);
        }

        /// <summary>
        /// 共享任务
        /// </summary>
        public static CsTPacket<S2CShareTask> S2CShareTask(S2CShareTask structure)
        {
            return new CsTPacket<S2CShareTask>(CS_CMD_ID.S2C_CMD_TASK_SHARETASK, structure);
        }

        /// <summary>
        /// 错误
        /// </summary>
        public static CsTPacket<S2CTaskErr> S2CTaskErr(S2CTaskErr structure)
        {
            return new CsTPacket<S2CTaskErr>(CS_CMD_ID.S2C_CMD_TASK_ERR, structure);
        }

        /// <summary>
        /// 任务执行
        /// </summary>
        public static CsTPacket<S2CTaskExec> S2CTaskExec(S2CTaskExec structure)
        {
            return new CsTPacket<S2CTaskExec>(CS_CMD_ID.S2C_CMD_TASK_EXEC, structure);
        }

        /// <summary>
        /// 任务执行
        /// </summary>
        public static CsTPacket<S2CTaskExec2> S2CTaskExec2(S2CTaskExec2 structure)
        {
            return new CsTPacket<S2CTaskExec2>(CS_CMD_ID.S2C_CMD_TASK_EXEC2, structure);
        }

        /// <summary>
        /// 设置任务状态
        /// </summary>
        public static CsTPacket<S2CTaskSetState> S2CTaskSetState(S2CTaskSetState structure)
        {
            return new CsTPacket<S2CTaskSetState>(CS_CMD_ID.S2C_CMD_TASK_SETSTATE, structure);
        }

        /// <summary>
        /// 日常同步
        /// </summary>
        public static CsTPacket<S2CSyncDaily> S2CSyncDaily(S2CSyncDaily structure)
        {
            return new CsTPacket<S2CSyncDaily>(CS_CMD_ID.S2C_CMD_TASK_SYNCDAILY, structure);
        }

        /// <summary>
        /// 日常刷新
        /// </summary>
        public static CsTPacket<S2CRefreshDaily> S2CRefreshDaily(S2CRefreshDaily structure)
        {
            return new CsTPacket<S2CRefreshDaily>(CS_CMD_ID.S2C_CMD_TASK_REFRESHDAILY, structure);
        }

        /// <summary>
        /// 日常重置
        /// </summary>
        public static CsTPacket<S2CResetDaily> S2CResetDaily(S2CResetDaily structure)
        {
            return new CsTPacket<S2CResetDaily>(CS_CMD_ID.S2C_CMD_TASK_RESETDAILY, structure);
        }

        /// <summary>
        /// 日程表刷新
        /// </summary>
        public static CsTPacket<S2CRefreshSchedule> S2CRefreshSchedule(S2CRefreshSchedule structure)
        {
            return new CsTPacket<S2CRefreshSchedule>(CS_CMD_ID.S2C_CMD_TASK_REFRESHSCHEDULE, structure);
        }

        /// <summary>
        /// 日程表重置
        /// </summary>
        public static CsTPacket<S2CResetSchedule> S2CResetSchedule(S2CResetSchedule structure)
        {
            return new CsTPacket<S2CResetSchedule>(CS_CMD_ID.S2C_CMD_TASK_RESETSCHEDULE, structure);
        }

        /// <summary>
        /// 日常刷新
        /// </summary>
        public static CsTPacket<S2CRefreshxDaily> S2CRefreshxDaily(S2CRefreshxDaily structure)
        {
            return new CsTPacket<S2CRefreshxDaily>(CS_CMD_ID.S2C_CMD_TASK_REFRESHXDAILY, structure);
        }

        /// <summary>
        /// 日常重置
        /// </summary>
        public static CsTPacket<S2CResetxDaily> S2CResetxDaily(S2CResetxDaily structure)
        {
            return new CsTPacket<S2CResetxDaily>(CS_CMD_ID.S2C_CMD_TASK_RESETXDAILY, structure);
        }

        /// <summary>
        /// 任务重置
        /// </summary>
        public static CsTPacket<S2CResetTask> S2CResetTask(S2CResetTask structure)
        {
            return new CsTPacket<S2CResetTask>(CS_CMD_ID.S2C_CMD_TASK_RESETTASK, structure);
        }

        /// <summary>
        /// 购买商店中贩卖的物品的请求
        /// </summary>
        public static CsTPacket<CSNpcShopBuyItemReq> NpcShopBuyItemReq(CSNpcShopBuyItemReq structure)
        {
            return new CsTPacket<CSNpcShopBuyItemReq>(CS_CMD_ID.CS_CMD_NPCSHOP_BUYITEM_REQ, structure);
        }

        /// <summary>
        /// 购买商店中贩卖的物品的返回
        /// </summary>
        public static CsTPacket<CSNpcShopBuyItemRsp> NpcShopBuyItemRsp(CSNpcShopBuyItemRsp structure)
        {
            return new CsTPacket<CSNpcShopBuyItemRsp>(CS_CMD_ID.CS_CMD_NPCSHOP_BUYITEM_RSP, structure);
        }

        /// <summary>
        /// 卖出背包中的物品的请求
        /// </summary>
        public static CsTPacket<CSNpcShopSellItemReq> NpcShopSellItemReq(CSNpcShopSellItemReq structure)
        {
            return new CsTPacket<CSNpcShopSellItemReq>(CS_CMD_ID.CS_CMD_NPCSHOP_SELLITEM_REQ, structure);
        }

        /// <summary>
        /// 卖出背包中的物品的返回
        /// </summary>
        public static CsTPacket<CSNpcShopSellItemRsp> NpcShopSellItemRsp(CSNpcShopSellItemRsp structure)
        {
            return new CsTPacket<CSNpcShopSellItemRsp>(CS_CMD_ID.CS_CMD_NPCSHOP_SELLITEM_RSP, structure);
        }

        /// <summary>
        /// 回购物品的请求
        /// </summary>
        public static CsTPacket<CSNpcShopBuyBackItemReq> NpcShopBuyBackItemReq(CSNpcShopBuyBackItemReq structure)
        {
            return new CsTPacket<CSNpcShopBuyBackItemReq>(CS_CMD_ID.CS_CMD_NPCSHOP_BUYBACKITEM_REQ, structure);
        }

        /// <summary>
        /// 回购物品的结果
        /// </summary>
        public static CsTPacket<CSNpcShopBuyBackItemRsp> NpcShopBuyBackItemRsp(CSNpcShopBuyBackItemRsp structure)
        {
            return new CsTPacket<CSNpcShopBuyBackItemRsp>(CS_CMD_ID.CS_CMD_NPCSHOP_BUYBACKITEM_RSP, structure);
        }

        /// <summary>
        /// 物品购买限制数据添加
        /// </summary>
        public static CsTPacket<CSNpcShopAddBuyItemLimitNtf> NpcShopAddBuyItemLimitNtf(
            CSNpcShopAddBuyItemLimitNtf structure)
        {
            return new CsTPacket<CSNpcShopAddBuyItemLimitNtf>(CS_CMD_ID.CS_CMD_NPCSHOP_ADD_BUY_ITEM_LIMIT_NTF,
                structure);
        }

        /// <summary>
        /// 物品购买限制数据删除
        /// </summary>
        public static CsTPacket<CSNpcShopDelBuyItemLimitNtf> NpcShopDelBuyItemLimitNtf(
            CSNpcShopDelBuyItemLimitNtf structure)
        {
            return new CsTPacket<CSNpcShopDelBuyItemLimitNtf>(CS_CMD_ID.CS_CMD_NPCSHOP_DEL_BUY_ITEM_LIMIT_NTF,
                structure);
        }

        /// <summary>
        /// npc商店事件通知
        /// </summary>
        public static CsTPacket<CSShopEvent> NPCShopEventNtf(CSShopEvent structure)
        {
            return new CsTPacket<CSShopEvent>(CS_CMD_ID.CS_CMD_NPCSHOP_EVENT_NTF, structure);
        }

        /// <summary>
        /// 商店错误
        /// </summary>
        public static CsTPacket<S2CShopErr> S2CShopErr(S2CShopErr structure)
        {
            return new CsTPacket<S2CShopErr>(CS_CMD_ID.S2C_CMD_SHOP_ERR, structure);
        }

        /// <summary>
        /// 商店刷新
        /// </summary>
        public static CsTPacket<S2CRefreshShop> S2CRefreshShop(S2CRefreshShop structure)
        {
            return new CsTPacket<S2CRefreshShop>(CS_CMD_ID.S2C_CMD_SHOP_REFRESHSHOP, structure);
        }

        /// <summary>
        /// 商店刷新
        /// </summary>
        public static CsTPacket<C2SRefreshShops> C2SRefreshShops(C2SRefreshShops structure)
        {
            return new CsTPacket<C2SRefreshShops>(CS_CMD_ID.C2S_CMD_SHOP_REFRESHSHOPS, structure);
        }

        /// <summary>
        /// 商店重置
        /// </summary>
        public static CsTPacket<S2CManualResetShop> S2CManualResetShop(S2CManualResetShop structure)
        {
            return new CsTPacket<S2CManualResetShop>(CS_CMD_ID.S2C_CMD_SHOP_MANUALRESETSHOP, structure);
        }

        /// <summary>
        /// 商店重置
        /// </summary>
        public static CsTPacket<C2SManualResetShop> C2SManualResetShop(C2SManualResetShop structure)
        {
            return new CsTPacket<C2SManualResetShop>(CS_CMD_ID.C2S_CMD_SHOP_MANUALRESETSHOP, structure);
        }

        /// <summary>
        /// 商品属性同步
        /// </summary>
        public static CsTPacket<S2CShopCommodityUpdate> S2CShopCommodityUpdate(S2CShopCommodityUpdate structure)
        {
            return new CsTPacket<S2CShopCommodityUpdate>(CS_CMD_ID.S2C_CMD_SHOP_COMMODITYUPDATE, structure);
        }

        /// <summary>
        /// 根据配方进行生产请求
        /// </summary>
        public static CsTPacket<CSManufactureProduceReq> ManufactureProduceReq(CSManufactureProduceReq structure)
        {
            return new CsTPacket<CSManufactureProduceReq>(CS_CMD_ID.CS_CMD_MANUFACTURE_PRODUCE_REQ, structure);
        }

        /// <summary>
        /// 根据配方进行生产结果
        /// </summary>
        public static CsTPacket<CSManufactureProduceRsp> ManufactureProduceRsp(CSManufactureProduceRsp structure)
        {
            return new CsTPacket<CSManufactureProduceRsp>(CS_CMD_ID.CS_CMD_MANUFACTURE_PRODUCE_RSP, structure);
        }

        /// <summary>
        /// 升级生产技能请求
        /// </summary>
        public static CsTPacket<CSManufactureLvUpSkillReq> ManufactureLvUpSkillReq(CSManufactureLvUpSkillReq structure)
        {
            return new CsTPacket<CSManufactureLvUpSkillReq>(CS_CMD_ID.CS_CMD_MANUFACTURE_LVUPSKILL_REQ, structure);
        }

        /// <summary>
        /// 升级生产技能结果
        /// </summary>
        public static CsTPacket<CSManufactureLvUpSkillRsp> ManufactureLvUpSkillRsp(CSManufactureLvUpSkillRsp structure)
        {
            return new CsTPacket<CSManufactureLvUpSkillRsp>(CS_CMD_ID.CS_CMD_MANUFACTURE_LVUPSKILL_RSP, structure);
        }

        /// <summary>
        /// 学习生产配方请求
        /// </summary>
        public static CsTPacket<CSManufactureLearnIngredientReq> ManufactureLearnIngredientReq(
            CSManufactureLearnIngredientReq structure)
        {
            return new CsTPacket<CSManufactureLearnIngredientReq>(CS_CMD_ID.CS_CMD_MANUFACTURE_LEARNINGREDIENT_REQ,
                structure);
        }

        /// <summary>
        /// 学习生产配方结果
        /// </summary>
        public static CsTPacket<CSManufactureLearnIngredientRsp> ManufactureLearnIngredientRsp(
            CSManufactureLearnIngredientRsp structure)
        {
            return new CsTPacket<CSManufactureLearnIngredientRsp>(CS_CMD_ID.CS_CMD_MANUFACTURE_LEARNINGREDIENT_RSP,
                structure);
        }

        /// <summary>
        /// 更新生产技能通知
        /// </summary>
        public static CsTPacket<CSManufactureUpdateSkillNtf> ManufactureUpdateSkillNtf(
            CSManufactureUpdateSkillNtf structure)
        {
            return new CsTPacket<CSManufactureUpdateSkillNtf>(CS_CMD_ID.CS_CMD_MANUFACTURE_UPDATESKILL_NTF, structure);
        }

        /// <summary>
        /// 更新生产配方通知
        /// </summary>
        public static CsTPacket<CSManufactureUpdateIngredientNtf> ManufactureUpdateIngredientNtf(
            CSManufactureUpdateIngredientNtf structure)
        {
            return new CsTPacket<CSManufactureUpdateIngredientNtf>(CS_CMD_ID.CS_CMD_MANUFACTURE_UPDATEINGREDIENT_NTF,
                structure);
        }

        /// <summary>
        /// 错误返回
        /// </summary>
        public static CsTPacket<CSTradeErrorRet> TradeErrorRet(CSTradeErrorRet structure)
        {
            return new CsTPacket<CSTradeErrorRet>(CS_CMD_ID.CS_CMD_TRADE_ERROR_RET, structure);
        }

        /// <summary>
        /// 请求开始交易
        /// </summary>
        public static CsTPacket<CSTradeBeginReq> TradeBeginReq(CSTradeBeginReq structure)
        {
            return new CsTPacket<CSTradeBeginReq>(CS_CMD_ID.CS_CMD_TRADE_BEGIN_REQ, structure);
        }

        /// <summary>
        /// 询问
        /// </summary>
        public static CsTPacket<CSTradeBeginAsk> TradeBeginAsk(CSTradeBeginAsk structure)
        {
            return new CsTPacket<CSTradeBeginAsk>(CS_CMD_ID.CS_CMD_TRADE_BEGIN_ASK, structure);
        }

        /// <summary>
        /// 应答
        /// </summary>
        public static CsTPacket<CSTradeBeginRet> TradeBeginRet(CSTradeBeginRet structure)
        {
            return new CsTPacket<CSTradeBeginRet>(CS_CMD_ID.CS_CMD_TRADE_BEGIN_RET, structure);
        }

        /// <summary>
        /// 通知开始交易
        /// </summary>
        public static CsTPacket<CSTradeBeginNtf> TradeBeginNtf(CSTradeBeginNtf structure)
        {
            return new CsTPacket<CSTradeBeginNtf>(CS_CMD_ID.CS_CMD_TRADE_BEGIN_NTF, structure);
        }

        /// <summary>
        /// 请求添加交易物品
        /// </summary>
        public static CsTPacket<CSTradeAddItemReq> TradeAddItemReq(CSTradeAddItemReq structure)
        {
            return new CsTPacket<CSTradeAddItemReq>(CS_CMD_ID.CS_CMD_TRADE_ADDITEM_REQ, structure);
        }

        /// <summary>
        /// 通知增加道具
        /// </summary>
        public static CsTPacket<CSTradeAddItemNtf> TradeAddItemNtf(CSTradeAddItemNtf structure)
        {
            return new CsTPacket<CSTradeAddItemNtf>(CS_CMD_ID.CS_CMD_TRADE_ADDITEM_NTF, structure);
        }

        /// <summary>
        /// 添加道具通知
        /// </summary>
        public static CsTPacket<CSTradeAddNormalNtf> TradeAddNormalNtf(CSTradeAddNormalNtf structure)
        {
            return new CsTPacket<CSTradeAddNormalNtf>(CS_CMD_ID.CS_CMD_TRADE_ADDNORMAL_NTF, structure);
        }

        /// <summary>
        /// 请求删除交易道具
        /// </summary>
        public static CsTPacket<CSTradeDelItemReq> TradeDelItemReq(CSTradeDelItemReq structure)
        {
            return new CsTPacket<CSTradeDelItemReq>(CS_CMD_ID.CS_CMD_TRADE_DELITEM_REQ, structure);
        }

        /// <summary>
        /// 通知删除交易道具
        /// </summary>
        public static CsTPacket<CSTradeDelItemNtf> TradeDelItemNtf(CSTradeDelItemNtf structure)
        {
            return new CsTPacket<CSTradeDelItemNtf>(CS_CMD_ID.CS_CMD_TRADE_DELITEM_NTF, structure);
        }

        /// <summary>
        /// 请求添加金币
        /// </summary>
        public static CsTPacket<CSTradeSetGoldReq> TradeSetGoldReq(CSTradeSetGoldReq structure)
        {
            return new CsTPacket<CSTradeSetGoldReq>(CS_CMD_ID.CS_CMD_TRADE_SETGOLD_REQ, structure);
        }

        /// <summary>
        /// 通知添加金币
        /// </summary>
        public static CsTPacket<CSTradeSetGoldNtf> TradeSetGoldNtf(CSTradeSetGoldNtf structure)
        {
            return new CsTPacket<CSTradeSetGoldNtf>(CS_CMD_ID.CS_CMD_TRADE_SETGOLD_NTF, structure);
        }

        /// <summary>
        /// 请求切换状态
        /// </summary>
        public static CsTPacket<CSTradeChgStateReq> TradeChgStateReq(CSTradeChgStateReq structure)
        {
            return new CsTPacket<CSTradeChgStateReq>(CS_CMD_ID.CS_CMD_TRADE_CHGSTATE_REQ, structure);
        }

        /// <summary>
        /// 切换状态通知
        /// </summary>
        public static CsTPacket<CSTradeChgStateNtf> TradeChgStateNtf(CSTradeChgStateNtf structure)
        {
            return new CsTPacket<CSTradeChgStateNtf>(CS_CMD_ID.CS_CMD_TRADE_CHGSTATE_NTF, structure);
        }

        /// <summary>
        /// 请求取消交易
        /// </summary>
        public static CsTPacket<CSTradeCancelReq> TradeCancelReq(CSTradeCancelReq structure)
        {
            return new CsTPacket<CSTradeCancelReq>(CS_CMD_ID.CS_CMD_TRADE_CANCEL_REQ, structure);
        }

        /// <summary>
        /// 通知取消交易
        /// </summary>
        public static CsTPacket<CSTradeCancelNtf> TradeCancelNtf(CSTradeCancelNtf structure)
        {
            return new CsTPacket<CSTradeCancelNtf>(CS_CMD_ID.CS_CMD_TRADE_CANCEL_NTF, structure);
        }

        /// <summary>
        /// 通知交易成功
        /// </summary>
        public static CsTPacket<CSTradeSuccessNtf> TradeSuccessNtf(CSTradeSuccessNtf structure)
        {
            return new CsTPacket<CSTradeSuccessNtf>(CS_CMD_ID.CS_CMD_TRADE_SUCCESS_NTF, structure);
        }

        /// <summary>
        /// 移动物品请求
        /// </summary>
        public static CsTPacket<CSTradeMoveItemReq> TradeMoveItemReq(CSTradeMoveItemReq structure)
        {
            return new CsTPacket<CSTradeMoveItemReq>(CS_CMD_ID.CS_CMD_TRADE_MOVE_ITEM_REQ, structure);
        }

        /// <summary>
        /// 通知移动物品
        /// </summary>
        public static CsTPacket<CSTradeMoveItemNtf> TradeMoveItemNtf(CSTradeMoveItemNtf structure)
        {
            return new CsTPacket<CSTradeMoveItemNtf>(CS_CMD_ID.CS_CMD_TRADE_MOVE_ITEM_NTF, structure);
        }

        /// <summary>
        /// 行动力操作请求
        /// </summary>
        public static CsTPacket<CSActionPointRequest> ActionPointRequest(CSActionPointRequest structure)
        {
            return new CsTPacket<CSActionPointRequest>(CS_CMD_ID.CS_CMD_ACTIONPOINT_REQUEST, structure);
        }

        /// <summary>
        /// 行动力操作返回
        /// </summary>
        public static CsTPacket<CSActionPointResult> ActionPointResult(CSActionPointResult structure)
        {
            return new CsTPacket<CSActionPointResult>(CS_CMD_ID.CS_CMD_ACTIONPOINT_RESULT, structure);
        }

        /// <summary>
        /// 查询行动力数据
        /// </summary>
        public static CsTPacket<CSInteractRequest> InteractRequest(CSInteractRequest structure)
        {
            return new CsTPacket<CSInteractRequest>(CS_CMD_ID.CS_CMD_INTERACT_REQUEST, structure);
        }

        /// <summary>
        /// 玩家交互同步数据
        /// </summary>
        public static CsTPacket<CSInteractResult> InteractResult(CSInteractResult structure)
        {
            return new CsTPacket<CSInteractResult>(CS_CMD_ID.CS_CMD_INTERACT_RESULT, structure);
        }

        /// <summary>
        /// 玩家扩展请求
        /// </summary>
        public static CsTPacket<CSPlayerExtRequest> PlayerExtRequest(CSPlayerExtRequest structure)
        {
            return new CsTPacket<CSPlayerExtRequest>(CS_CMD_ID.CS_CMD_PLAYER_EXT_REQUEST, structure);
        }

        /// <summary>
        /// 玩家扩展返回
        /// </summary>
        public static CsTPacket<CSPlayerExtResult> PlayerExtResult(CSPlayerExtResult structure)
        {
            return new CsTPacket<CSPlayerExtResult>(CS_CMD_ID.CS_CMD_PLAYER_EXT_RESULT, structure);
        }

        /// <summary>
        /// 玩家扩展通知
        /// </summary>
        public static CsTPacket<CSPlayerExtNotify> PlayerExtNotify(CSPlayerExtNotify structure)
        {
            return new CsTPacket<CSPlayerExtNotify>(CS_CMD_ID.CS_CMD_PLAYER_EXT_NOTIFY, structure);
        }

        /// <summary>
        /// 拍卖请求
        /// </summary>
        public static CsTPacket<CSAuctionSaleReq> AuctionSaleReq(CSAuctionSaleReq structure)
        {
            return new CsTPacket<CSAuctionSaleReq>(CS_CMD_ID.CS_CMD_AUCTION_SALE_REQ, structure);
        }

        /// <summary>
        /// 拍卖回复
        /// </summary>
        public static CsTPacket<CSAuctionSaleRes> AuctionSaleRes(CSAuctionSaleRes structure)
        {
            return new CsTPacket<CSAuctionSaleRes>(CS_CMD_ID.CS_CMD_AUCTION_SALE_RES, structure);
        }

        /// <summary>
        /// 拍卖取消请求
        /// </summary>
        public static CsTPacket<CSAuctionCancelReq> AuctionCancelReq(CSAuctionCancelReq structure)
        {
            return new CsTPacket<CSAuctionCancelReq>(CS_CMD_ID.CS_CMD_AUCTION_CANCEL_REQ, structure);
        }

        /// <summary>
        /// 拍卖取消回复
        /// </summary>
        public static CsTPacket<CSAuctionCancelRes> AuctionCancelRes(CSAuctionCancelRes structure)
        {
            return new CsTPacket<CSAuctionCancelRes>(CS_CMD_ID.CS_CMD_AUCTION_CANCEL_RES, structure);
        }

        /// <summary>
        /// 竞拍请求
        /// </summary>
        public static CsTPacket<CSAuctionBiddingReq> AuctionBiddingReq(CSAuctionBiddingReq structure)
        {
            return new CsTPacket<CSAuctionBiddingReq>(CS_CMD_ID.CS_CMD_AUCTION_BIDDING_REQ, structure);
        }

        /// <summary>
        /// 竞拍回复
        /// </summary>
        public static CsTPacket<CSAuctionBiddingRes> AuctionBiddingRes(CSAuctionBiddingRes structure)
        {
            return new CsTPacket<CSAuctionBiddingRes>(CS_CMD_ID.CS_CMD_AUCTION_BIDDING_RES, structure);
        }

        /// <summary>
        /// 查询请求
        /// </summary>
        public static CsTPacket<CSAuctionSearchReq> AuctionSearchReq(CSAuctionSearchReq structure)
        {
            return new CsTPacket<CSAuctionSearchReq>(CS_CMD_ID.CS_CMD_AUCTION_SEARCH_REQ, structure);
        }

        /// <summary>
        /// 排序请求
        /// </summary>
        public static CsTPacket<CSAuctionSortReq> AuctionSortReq(CSAuctionSortReq structure)
        {
            return new CsTPacket<CSAuctionSortReq>(CS_CMD_ID.CS_CMD_AUCTION_SORT_REQ, structure);
        }

        /// <summary>
        /// 查询回复
        /// </summary>
        public static CsTPacket<CSAuctionSearchRes> AuctionSearchRes(CSAuctionSearchRes structure)
        {
            return new CsTPacket<CSAuctionSearchRes>(CS_CMD_ID.CS_CMD_AUCTION_SEARCH_RES, structure);
        }

        /// <summary>
        /// 查询指定索引请求
        /// </summary>
        public static CsTPacket<CSAuctionSearchIdxReq> AuctionSearchIdxReq(CSAuctionSearchIdxReq structure)
        {
            return new CsTPacket<CSAuctionSearchIdxReq>(CS_CMD_ID.CS_CMD_AUCTION_SEARCH_IDX_REQ, structure);
        }

        /// <summary>
        /// 查询我的拍卖请求
        /// </summary>
        public static CsTPacket<CSAuctionMySaleReq> AuctionMySaleReq(CSAuctionMySaleReq structure)
        {
            return new CsTPacket<CSAuctionMySaleReq>(CS_CMD_ID.CS_CMD_AUCTION_MYSALE_REQ, structure);
        }

        /// <summary>
        /// 查询我的拍卖回复
        /// </summary>
        public static CsTPacket<CSAuctionMySaleRes> AuctionMySaleRes(CSAuctionMySaleRes structure)
        {
            return new CsTPacket<CSAuctionMySaleRes>(CS_CMD_ID.CS_CMD_AUCTION_MYSALE_RES, structure);
        }

        /// <summary>
        /// 查询我的竞拍请求
        /// </summary>
        public static CsTPacket<CSAuctionMyBiddingReq> AuctionMyBiddingReq(CSAuctionMyBiddingReq structure)
        {
            return new CsTPacket<CSAuctionMyBiddingReq>(CS_CMD_ID.CS_CMD_AUCTION_MYBIDDING_REQ, structure);
        }

        /// <summary>
        /// 查询我的竞拍回复
        /// </summary>
        public static CsTPacket<CSAuctionMyBiddingRes> AuctionMyBiddingRes(CSAuctionMyBiddingRes structure)
        {
            return new CsTPacket<CSAuctionMyBiddingRes>(CS_CMD_ID.CS_CMD_AUCTION_MYBIDDING_RES, structure);
        }

        /// <summary>
        /// 添加好友请求
        /// </summary>
        public static CsTPacket<CSFriendAddReq> FriendAddReq(CSFriendAddReq structure)
        {
            return new CsTPacket<CSFriendAddReq>(CS_CMD_ID.CS_CMD_FRIEND_ADD_REQ, structure);
        }

        /// <summary>
        /// 添加好友返回
        /// </summary>
        public static CsTPacket<CSFriendAddRsp> FriendAddRsp(CSFriendAddRsp structure)
        {
            return new CsTPacket<CSFriendAddRsp>(CS_CMD_ID.CS_CMD_FRIEND_ADD_RSP, structure);
        }

        /// <summary>
        /// 删除好友请求
        /// </summary>
        public static CsTPacket<CSFriendDelReq> FriendDelReq(CSFriendDelReq structure)
        {
            return new CsTPacket<CSFriendDelReq>(CS_CMD_ID.CS_CMD_FRIEND_DEL_REQ, structure);
        }

        /// <summary>
        /// 删除好友返回
        /// </summary>
        public static CsTPacket<CSFriendDelRsp> FriendDelRsp(CSFriendDelRsp structure)
        {
            return new CsTPacket<CSFriendDelRsp>(CS_CMD_ID.CS_CMD_FRIEND_DEL_RSP, structure);
        }

        /// <summary>
        /// 添加分组请求
        /// </summary>
        public static CsTPacket<CSFriendAddGroupReq> FriendAddGroupReq(CSFriendAddGroupReq structure)
        {
            return new CsTPacket<CSFriendAddGroupReq>(CS_CMD_ID.CS_CMD_FRIEND_ADD_GROUP_REQ, structure);
        }

        /// <summary>
        /// 添加分组返回
        /// </summary>
        public static CsTPacket<CSFriendAddGroupRsp> FriendAddGroupRsp(CSFriendAddGroupRsp structure)
        {
            return new CsTPacket<CSFriendAddGroupRsp>(CS_CMD_ID.CS_CMD_FRIEND_ADD_GROUP_RSP, structure);
        }

        /// <summary>
        /// 删除分组请求
        /// </summary>
        public static CsTPacket<CSFriendDelGroupReq> FriendDelGroupReq(CSFriendDelGroupReq structure)
        {
            return new CsTPacket<CSFriendDelGroupReq>(CS_CMD_ID.CS_CMD_FRIEND_DEL_GROUP_REQ, structure);
        }

        /// <summary>
        /// 删除分组返回
        /// </summary>
        public static CsTPacket<CSFriendDelGroupRsp> FriendDelGroupRsp(CSFriendDelGroupRsp structure)
        {
            return new CsTPacket<CSFriendDelGroupRsp>(CS_CMD_ID.CS_CMD_FRIEND_DEL_GROUP_RSP, structure);
        }

        /// <summary>
        /// 分组重命名请求
        /// </summary>
        public static CsTPacket<CSFriendRenameGroupReq> FriendRenameGroupReq(CSFriendRenameGroupReq structure)
        {
            return new CsTPacket<CSFriendRenameGroupReq>(CS_CMD_ID.CS_CMD_FRIEND_RENAME_GROUP_REQ, structure);
        }

        /// <summary>
        /// 分组重命名返回
        /// </summary>
        public static CsTPacket<CSFriendRenameGroupRsp> FriendRenameGroupRsp(CSFriendRenameGroupRsp structure)
        {
            return new CsTPacket<CSFriendRenameGroupRsp>(CS_CMD_ID.CS_CMD_FRIEND_RENAME_GROUP_RSP, structure);
        }

        /// <summary>
        /// 移动好友到分组请求
        /// </summary>
        public static CsTPacket<CSFriendMoveToGroupReq> FriendMoveToGroupReq(CSFriendMoveToGroupReq structure)
        {
            return new CsTPacket<CSFriendMoveToGroupReq>(CS_CMD_ID.CS_CMD_FRIEND_MOVE_TO_GROUP_REQ, structure);
        }

        /// <summary>
        /// 移动好友到分组返回
        /// </summary>
        public static CsTPacket<CSFriendMoveToGroupRsp> FriendMoveToGroupRsp(CSFriendMoveToGroupRsp structure)
        {
            return new CsTPacket<CSFriendMoveToGroupRsp>(CS_CMD_ID.CS_CMD_FRIEND_MOVE_TO_GROUP_RSP, structure);
        }

        /// <summary>
        /// 添加玩家到黑名单请求
        /// </summary>
        public static CsTPacket<CSFriendAddBlacklistReq> FriendAddBlacklistReq(CSFriendAddBlacklistReq structure)
        {
            return new CsTPacket<CSFriendAddBlacklistReq>(CS_CMD_ID.CS_CMD_FRIEND_ADD_BLACKLIST_REQ, structure);
        }

        /// <summary>
        /// 添加玩家到黑名单返回
        /// </summary>
        public static CsTPacket<CSFriendAddBlacklistRsp> FriendAddBlacklistRsp(CSFriendAddBlacklistRsp structure)
        {
            return new CsTPacket<CSFriendAddBlacklistRsp>(CS_CMD_ID.CS_CMD_FRIEND_ADD_BLACKLIST_RSP, structure);
        }

        /// <summary>
        /// 将玩家从黑名单中删除请求
        /// </summary>
        public static CsTPacket<CSFriendDelBlacklistReq> FriendDelBlacklistReq(CSFriendDelBlacklistReq structure)
        {
            return new CsTPacket<CSFriendDelBlacklistReq>(CS_CMD_ID.CS_CMD_FRIEND_DEL_BLACKLIST_REQ, structure);
        }

        /// <summary>
        /// 将玩家从黑名单中删除返回
        /// </summary>
        public static CsTPacket<CSFriendDelBlacklistRsp> FriendDelBlacklistRsp(CSFriendDelBlacklistRsp structure)
        {
            return new CsTPacket<CSFriendDelBlacklistRsp>(CS_CMD_ID.CS_CMD_FRIEND_DEL_BLACKLIST_RSP, structure);
        }

        /// <summary>
        /// 删除路人请求
        /// </summary>
        public static CsTPacket<CSFriendDelPasserbyReq> FriendDelPasserbyReq(CSFriendDelPasserbyReq structure)
        {
            return new CsTPacket<CSFriendDelPasserbyReq>(CS_CMD_ID.CS_CMD_FRIEND_DEL_PASSERBY_REQ, structure);
        }

        /// <summary>
        /// 删除路人返回
        /// </summary>
        public static CsTPacket<CSFriendDelPasserbyRsp> FriendDelPasserbyRsp(CSFriendDelPasserbyRsp structure)
        {
            return new CsTPacket<CSFriendDelPasserbyRsp>(CS_CMD_ID.CS_CMD_FRIEND_DEL_PASSERBY_RSP, structure);
        }

        /// <summary>
        /// 好友在线通知
        /// </summary>
        public static CsTPacket<CSFriendListOnlineNtf> FriendListOnlineNtf(CSFriendListOnlineNtf structure)
        {
            return new CsTPacket<CSFriendListOnlineNtf>(CS_CMD_ID.CS_CMD_FRIEND_LIST_ONLINE_NTF, structure);
        }

        /// <summary>
        /// 好友上线通知
        /// </summary>
        public static CsTPacket<CSFriendOnlineNtf> FriendOnlineNtf(CSFriendOnlineNtf structure)
        {
            return new CsTPacket<CSFriendOnlineNtf>(CS_CMD_ID.CS_CMD_FRIEND_ONLINE_NTF, structure);
        }

        /// <summary>
        /// 好友下线通知
        /// </summary>
        public static CsTPacket<CSFriendOfflineNtf> FriendOfflineNtf(CSFriendOfflineNtf structure)
        {
            return new CsTPacket<CSFriendOfflineNtf>(CS_CMD_ID.CS_CMD_FRIEND_OFFLINE_NTF, structure);
        }

        /// <summary>
        /// 友好度变化通知
        /// </summary>
        public static CsTPacket<CSFriendFriendlyUpdateNtf> FriendFriendlyUpdateNtf(CSFriendFriendlyUpdateNtf structure)
        {
            return new CsTPacket<CSFriendFriendlyUpdateNtf>(CS_CMD_ID.CS_CMD_FRIEND_FRIENDLY_UPDATE_NTF, structure);
        }

        /// <summary>
        /// 获取好友系统所有信息请求
        /// </summary>
        public static CsTPacket<CSFriendQueryReq> FriendQueryReq(CSFriendQueryReq structure)
        {
            return new CsTPacket<CSFriendQueryReq>(CS_CMD_ID.CS_CMD_FRIEND_QUERY_REQ, structure);
        }

        /// <summary>
        /// 获取好友系统所有信息返回
        /// </summary>
        public static CsTPacket<CSFriendQueryRsp> FriendQueryRsp(CSFriendQueryRsp structure)
        {
            return new CsTPacket<CSFriendQueryRsp>(CS_CMD_ID.CS_CMD_FRIEND_QUERY_RSP, structure);
        }

        /// <summary>
        /// 添加路人通知
        /// </summary>
        public static CsTPacket<CSFriendPasserbyNtf> FriendPasserbyNtf(CSFriendPasserbyNtf structure)
        {
            return new CsTPacket<CSFriendPasserbyNtf>(CS_CMD_ID.CS_CMD_FRIEND_PASSERBY_NTF, structure);
        }

        /// <summary>
        /// 被添加好友通知
        /// </summary>
        public static CsTPacket<CSFriendBeAddNtf> FriendBeAddNtf(CSFriendBeAddNtf structure)
        {
            return new CsTPacket<CSFriendBeAddNtf>(CS_CMD_ID.CS_CMD_FRIEND_BE_ADD_NTF, structure);
        }

        /// <summary>
        /// 设置心情请求
        /// </summary>
        public static CsTPacket<CSFriendSetMoodReq> FriendSetMoodReq(CSFriendSetMoodReq structure)
        {
            return new CsTPacket<CSFriendSetMoodReq>(CS_CMD_ID.CS_CMD_FRIEND_SET_MOOD_REQ, structure);
        }

        /// <summary>
        /// 设置心情返回
        /// </summary>
        public static CsTPacket<CSFriendSetMoodRsp> FriendSetMoodRsp(CSFriendSetMoodRsp structure)
        {
            return new CsTPacket<CSFriendSetMoodRsp>(CS_CMD_ID.CS_CMD_FRIEND_SET_MOOD_RSP, structure);
        }

        /// <summary>
        /// 农场点数变化通知
        /// </summary>
        public static CsTPacket<CSFriendFarmPointUpdateNtf> FriendFarmPointUpdateNtf(
            CSFriendFarmPointUpdateNtf structure)
        {
            return new CsTPacket<CSFriendFarmPointUpdateNtf>(CS_CMD_ID.CS_CMD_FRIEND_FARMPOINT_UPDATE_NTF, structure);
        }

        /// <summary>
        /// 好友属性更新通知
        /// </summary>
        public static CsTPacket<CSFriendAttrUpdateNtf> FriendAttrUpdateNtf(CSFriendAttrUpdateNtf structure)
        {
            return new CsTPacket<CSFriendAttrUpdateNtf>(CS_CMD_ID.CS_CMD_FRIEND_ATTR_UPDATE_NTF, structure);
        }

        /// <summary>
        /// 在线好友列表请求
        /// </summary>
        public static CsTPacket<CSFriendsOnlineReq> FriendsOnlineReq(CSFriendsOnlineReq structure)
        {
            return new CsTPacket<CSFriendsOnlineReq>(CS_CMD_ID.CS_CMD_FRIENDS_ONLINE_REQ, structure);
        }

        /// <summary>
        /// 好友列表请求
        /// </summary>
        public static CsTPacket<CSFriendListGetReq> FriendListGetReq(CSFriendListGetReq structure)
        {
            return new CsTPacket<CSFriendListGetReq>(CS_CMD_ID.CS_CMD_FRIEND_LIST_GET_REQ, structure);
        }

        /// <summary>
        /// 好友列表请求响应
        /// </summary>
        public static CsTPacket<CSFriendListGetRsp> FriendListGetRsp(CSFriendListGetRsp structure)
        {
            return new CsTPacket<CSFriendListGetRsp>(CS_CMD_ID.CS_CMD_FRIEND_LIST_GET_RSP, structure);
        }

        /// <summary>
        /// 好友错误
        /// </summary>
        public static CsTPacket<S2CFriendErr> S2CFriendErr(S2CFriendErr structure)
        {
            return new CsTPacket<S2CFriendErr>(CS_CMD_ID.S2C_CMD_FRIEND_ERR, structure);
        }

        /// <summary>
        /// 好友通知
        /// </summary>
        public static CsTPacket<S2CFriendNotify> S2CFriendNotify(S2CFriendNotify structure)
        {
            return new CsTPacket<S2CFriendNotify>(CS_CMD_ID.S2C_CMD_FRIEND_NOTIFY, structure);
        }

        /// <summary>
        /// 接受好友申请
        /// </summary>
        public static CsTPacket<C2SAcceptFriendApply> C2SAcceptFriendApply(C2SAcceptFriendApply structure)
        {
            return new CsTPacket<C2SAcceptFriendApply>(CS_CMD_ID.C2S_CMD_FRIEND_ACCEPTFRIENDAPPLY, structure);
        }

        /// <summary>
        /// 拒绝好友申请
        /// </summary>
        public static CsTPacket<C2SRejectFriendApply> C2SRejectFriendApply(C2SRejectFriendApply structure)
        {
            return new CsTPacket<C2SRejectFriendApply>(CS_CMD_ID.C2S_CMD_FRIEND_JEJECTFRIENDAPPLY, structure);
        }

        /// <summary>
        /// 好友所属服务器信息更新
        /// </summary>
        public static CsTPacket<S2CFriendSvrUpdate> S2CFriendSvrUpdate(S2CFriendSvrUpdate structure)
        {
            return new CsTPacket<S2CFriendSvrUpdate>(CS_CMD_ID.S2C_CMD_FRIEND_SVRSUPDATE, structure);
        }

        /// <summary>
        /// 宠物出现通知列表
        /// </summary>
        public static CsTPacket<CSPetAppearNtfList> PetAppearNtfList(CSPetAppearNtfList structure)
        {
            return new CsTPacket<CSPetAppearNtfList>(CS_CMD_ID.CS_CMD_PET_APPEAR_NTF_LIST, structure);
        }

        /// <summary>
        /// 宠物初始化列表
        /// </summary>
        public static CsTPacket<CSPetInitList> PetInitList(CSPetInitList structure)
        {
            return new CsTPacket<CSPetInitList>(CS_CMD_ID.CS_CMD_PET_INIT_LIST, structure);
        }

        /// <summary>
        /// 宠物添加同步
        /// </summary>
        public static CsTPacket<CSPetAddSync> PetAddSync(CSPetAddSync structure)
        {
            return new CsTPacket<CSPetAddSync>(CS_CMD_ID.CS_CMD_PET_ADD_SYNC, structure);
        }

        /// <summary>
        /// 宠物属性同步
        /// </summary>
        public static CsTPacket<CSPetAttrSync> PetAttrSync(CSPetAttrSync structure)
        {
            return new CsTPacket<CSPetAttrSync>(CS_CMD_ID.CS_CMD_PET_ATTR_SYNC, structure);
        }

        /// <summary>
        /// 宠物解雇请求
        /// </summary>
        public static CsTPacket<CSPetFireReq> PetFireReq(CSPetFireReq structure)
        {
            return new CsTPacket<CSPetFireReq>(CS_CMD_ID.CS_CMD_PET_FIRE_REQ, structure);
        }

        /// <summary>
        /// 宠物解雇应答
        /// </summary>
        public static CsTPacket<CSPetFireRsp> PetFireRsp(CSPetFireRsp structure)
        {
            return new CsTPacket<CSPetFireRsp>(CS_CMD_ID.CS_CMD_PET_FIRE_RSP, structure);
        }

        /// <summary>
        /// 宠物命名请求
        /// </summary>
        public static CsTPacket<CSPetNameReq> PetNameReq(CSPetNameReq structure)
        {
            return new CsTPacket<CSPetNameReq>(CS_CMD_ID.CS_CMD_PET_NAME_REQ, structure);
        }

        /// <summary>
        /// 宠物命名应答
        /// </summary>
        public static CsTPacket<CSPetNameRsp> PetNameRsp(CSPetNameRsp structure)
        {
            return new CsTPacket<CSPetNameRsp>(CS_CMD_ID.CS_CMD_PET_NAME_RSP, structure);
        }

        /// <summary>
        /// 宠物宣言请求
        /// </summary>
        public static CsTPacket<CSPetDescReq> PetDescReq(CSPetDescReq structure)
        {
            return new CsTPacket<CSPetDescReq>(CS_CMD_ID.CS_CMD_PET_DESC_REQ, structure);
        }

        /// <summary>
        /// 宠物宣言应答
        /// </summary>
        public static CsTPacket<CSPetDescRsp> PetDescRsp(CSPetDescRsp structure)
        {
            return new CsTPacket<CSPetDescRsp>(CS_CMD_ID.CS_CMD_PET_DESC_RSP, structure);
        }

        /// <summary>
        /// 宠物设置状态请求
        /// </summary>
        public static CsTPacket<CSPetStateReq> PetStateReq(CSPetStateReq structure)
        {
            return new CsTPacket<CSPetStateReq>(CS_CMD_ID.CS_CMD_PET_STATE_REQ, structure);
        }

        /// <summary>
        /// 宠物设置状态应答
        /// </summary>
        public static CsTPacket<CSPetStateRsp> PetStateRsp(CSPetStateRsp structure)
        {
            return new CsTPacket<CSPetStateRsp>(CS_CMD_ID.CS_CMD_PET_STATE_RSP, structure);
        }

        /// <summary>
        /// 宠物技能学习通知
        /// </summary>
        public static CsTPacket<CSPetSkillLearnSync> PetSkillLearnSync(CSPetSkillLearnSync structure)
        {
            return new CsTPacket<CSPetSkillLearnSync>(CS_CMD_ID.CS_CMD_PET_SKILL_LEARN_SYNC, structure);
        }

        /// <summary>
        /// 宠物技能遗忘请求
        /// </summary>
        public static CsTPacket<CSPetSkillForgetReq> PetSkillForgetReq(CSPetSkillForgetReq structure)
        {
            return new CsTPacket<CSPetSkillForgetReq>(CS_CMD_ID.CS_CMD_PET_SKILL_FORGET_REQ, structure);
        }

        /// <summary>
        /// 宠物技能遗忘应答
        /// </summary>
        public static CsTPacket<CSPetSkillForgetRsp> PetSkillForgetRsp(CSPetSkillForgetRsp structure)
        {
            return new CsTPacket<CSPetSkillForgetRsp>(CS_CMD_ID.CS_CMD_PET_SKILL_FORGET_RSP, structure);
        }

        /// <summary>
        /// 宠物技能装备请求
        /// </summary>
        public static CsTPacket<CSPetSkillEquipOnReq> PetSkillEquipOnReq(CSPetSkillEquipOnReq structure)
        {
            return new CsTPacket<CSPetSkillEquipOnReq>(CS_CMD_ID.CS_CMD_PET_SKILL_EQUIP_ON_REQ, structure);
        }

        /// <summary>
        /// 宠物技能装备应答
        /// </summary>
        public static CsTPacket<CSPetSkillEquipOnRsp> PetSkillEquipOnRsp(CSPetSkillEquipOnRsp structure)
        {
            return new CsTPacket<CSPetSkillEquipOnRsp>(CS_CMD_ID.CS_CMD_PET_SKILL_EQUIP_ON_RSP, structure);
        }

        /// <summary>
        /// 宠物技能不装备请求
        /// </summary>
        public static CsTPacket<CSPetSkillEquipOffReq> PetSkillEquipOffReq(CSPetSkillEquipOffReq structure)
        {
            return new CsTPacket<CSPetSkillEquipOffReq>(CS_CMD_ID.CS_CMD_PET_SKILL_EQUIP_OFF_REQ, structure);
        }

        /// <summary>
        /// 宠物技能不装备应答
        /// </summary>
        public static CsTPacket<CSPetSkillEquipOffRsp> PetSkillEquipOffRsp(CSPetSkillEquipOffRsp structure)
        {
            return new CsTPacket<CSPetSkillEquipOffRsp>(CS_CMD_ID.CS_CMD_PET_SKILL_EQUIP_OFF_RSP, structure);
        }

        /// <summary>
        /// 宠物换装请求
        /// </summary>
        public static CsTPacket<CSPetEquipChangeReq> PetEquipChangeReq(CSPetEquipChangeReq structure)
        {
            return new CsTPacket<CSPetEquipChangeReq>(CS_CMD_ID.CS_CMD_PET_EQUIP_CHANGE_REQ, structure);
        }

        /// <summary>
        /// 宠物换装应答
        /// </summary>
        public static CsTPacket<CSPetEquipChangeRsp> PetEquipChangeRsp(CSPetEquipChangeRsp structure)
        {
            return new CsTPacket<CSPetEquipChangeRsp>(CS_CMD_ID.CS_CMD_PET_EQUIP_CHANGE_RSP, structure);
        }

        /// <summary>
        /// 宠物支援技能升级请求
        /// </summary>
        public static CsTPacket<CSPetSupportSkillLevelupReq> PetSupportSkillLevelupReq(
            CSPetSupportSkillLevelupReq structure)
        {
            return new CsTPacket<CSPetSupportSkillLevelupReq>(CS_CMD_ID.CS_CMD_PET_SUPPORT_SKILL_LEVELUP_REQ,
                structure);
        }

        /// <summary>
        /// 宠物支援技能升级应答
        /// </summary>
        public static CsTPacket<CSPetSupportSkillLevelupRsp> PetSupportSkillLevelupRsp(
            CSPetSupportSkillLevelupRsp structure)
        {
            return new CsTPacket<CSPetSupportSkillLevelupRsp>(CS_CMD_ID.CS_CMD_PET_SUPPORT_SKILL_LEVELUP_RSP,
                structure);
        }

        /// <summary>
        /// 宠物添加BUFF同步
        /// </summary>
        public static CsTPacket<CSPetAddBuffSync> PetAddBuffSync(CSPetAddBuffSync structure)
        {
            return new CsTPacket<CSPetAddBuffSync>(CS_CMD_ID.CS_CMD_PET_ADD_BUFF_SYNC, structure);
        }

        /// <summary>
        /// 宠物删除BUFF同步
        /// </summary>
        public static CsTPacket<CSPetDelBuffSync> PetDelBuffSync(CSPetDelBuffSync structure)
        {
            return new CsTPacket<CSPetDelBuffSync>(CS_CMD_ID.CS_CMD_PET_DEL_BUFF_SYNC, structure);
        }

        /// <summary>
        /// 宠物avatar同步
        /// </summary>
        public static CsTPacket<CSPetAvatarNotify> PetAvatarNotify(CSPetAvatarNotify structure)
        {
            return new CsTPacket<CSPetAvatarNotify>(CS_CMD_ID.CS_CMD_PET_AVATAR_NOTIFY, structure);
        }

        /// <summary>
        /// 宠物天生技能升级请求
        /// </summary>
        public static CsTPacket<CSPetGiftSkillLevelupReq> PetGiftSkillLevelupReq(CSPetGiftSkillLevelupReq structure)
        {
            return new CsTPacket<CSPetGiftSkillLevelupReq>(CS_CMD_ID.CS_CMD_PET_GIFT_SKILL_LEVELUP_REQ, structure);
        }

        /// <summary>
        /// 宠物天生技能升级应答
        /// </summary>
        public static CsTPacket<CSPetGiftSkillLevelupRsp> PetGiftSkillLevelupRsp(CSPetGiftSkillLevelupRsp structure)
        {
            return new CsTPacket<CSPetGiftSkillLevelupRsp>(CS_CMD_ID.CS_CMD_PET_GIFT_SKILL_LEVELUP_RSP, structure);
        }

        /// <summary>
        /// 宠物拥有上限同步
        /// </summary>
        public static CsTPacket<CSPetOwnedMaxNumSync> PetOwnedMaxNumSync(CSPetOwnedMaxNumSync structure)
        {
            return new CsTPacket<CSPetOwnedMaxNumSync>(CS_CMD_ID.CS_CMD_PET_OWNED_MAX_NUM_SYNC, structure);
        }

        /// <summary>
        /// 宠物随机信息
        /// </summary>
        public static CsTPacket<C2SPetRng> C2SPetRng(C2SPetRng structure)
        {
            return new CsTPacket<C2SPetRng>(CS_CMD_ID.C2S_CMD_PET_RNG, structure);
        }

        /// <summary>
        /// 宠物随机信息
        /// </summary>
        public static CsTPacket<S2CPetRng> S2CPetRng(S2CPetRng structure)
        {
            return new CsTPacket<S2CPetRng>(CS_CMD_ID.S2C_CMD_PET_RNG, structure);
        }

        /// <summary>
        /// 宠物说话通知
        /// </summary>
        public static CsTPacket<CSPetTalkNtf> PetTalkNtf(CSPetTalkNtf structure)
        {
            return new CsTPacket<CSPetTalkNtf>(CS_CMD_ID.CS_CMD_PET_TALK_NTF, structure);
        }

        /// <summary>
        /// 解锁宠物技能栏位
        /// </summary>
        public static CsTPacket<C2SPetUnlockSkillSlot> C2SPetUnlockSkillSlot(C2SPetUnlockSkillSlot structure)
        {
            return new CsTPacket<C2SPetUnlockSkillSlot>(CS_CMD_ID.C2S_CMD_PET_UNLOCK_SKILL_SLOT, structure);
        }

        /// <summary>
        /// 解锁宠物技能栏位
        /// </summary>
        public static CsTPacket<S2CPetUnlockSkillSlot> S2CPetUnlockSkillSlot(S2CPetUnlockSkillSlot structure)
        {
            return new CsTPacket<S2CPetUnlockSkillSlot>(CS_CMD_ID.S2C_CMD_PET_UNLOCK_SKILL_SLOT, structure);
        }

        /// <summary>
        /// 宠物设置支援请求
        /// </summary>
        public static CsTPacket<CSPetSupportReq> PetSupportReq(CSPetSupportReq structure)
        {
            return new CsTPacket<CSPetSupportReq>(CS_CMD_ID.CS_CMD_PET_SUPPORT_REQ, structure);
        }

        /// <summary>
        /// 宠物设置支援请求
        /// </summary>
        public static CsTPacket<CSPetSupportRsp> PetSupportRsp(CSPetSupportRsp structure)
        {
            return new CsTPacket<CSPetSupportRsp>(CS_CMD_ID.CS_CMD_PET_SUPPORT_RSP, structure);
        }

        /// <summary>
        /// 宠物删除等待装备技能请求
        /// </summary>
        public static CsTPacket<CSPetWaitSkillDelReq> PetWaitSkillDelReq(CSPetWaitSkillDelReq structure)
        {
            return new CsTPacket<CSPetWaitSkillDelReq>(CS_CMD_ID.CS_CMD_PET_WAIT_SKILL_DEL_REQ, structure);
        }

        /// <summary>
        /// 宠物删除等待装备技能应答
        /// </summary>
        public static CsTPacket<CSPetWaitSkillDelRsp> PetWaitSkillDelRsp(CSPetWaitSkillDelRsp structure)
        {
            return new CsTPacket<CSPetWaitSkillDelRsp>(CS_CMD_ID.CS_CMD_PET_WAIT_SKILL_DEL_RSP, structure);
        }

        /// <summary>
        /// 宠物等待装备技能同步
        /// </summary>
        public static CsTPacket<CSPetWaitSkillSync> PetWaitSkillSync(CSPetWaitSkillSync structure)
        {
            return new CsTPacket<CSPetWaitSkillSync>(CS_CMD_ID.CS_CMD_PET_WAIT_SKILL_SYNC, structure);
        }

        /// <summary>
        /// 宠物等待装备技能new信息通知
        /// </summary>
        public static CsTPacket<CSPetWaitSkillNewNtf> PetWaitSkillNewNtf(CSPetWaitSkillNewNtf structure)
        {
            return new CsTPacket<CSPetWaitSkillNewNtf>(CS_CMD_ID.CS_CMD_PET_WAIT_SKILL_NEW_NTF, structure);
        }

        /// <summary>
        /// 宠物等待装备技能购买请求
        /// </summary>
        public static CsTPacket<CSPetWaitSkillBuyReq> PetWaitSkillBuyReq(CSPetWaitSkillBuyReq structure)
        {
            return new CsTPacket<CSPetWaitSkillBuyReq>(CS_CMD_ID.CS_CMD_PET_WAIT_SKILL_BUY_REQ, structure);
        }

        /// <summary>
        /// 宠物等待装备技能购买应答
        /// </summary>
        public static CsTPacket<CSPetWaitSkillBuyRsp> PetWaitSkillBuyRsp(CSPetWaitSkillBuyRsp structure)
        {
            return new CsTPacket<CSPetWaitSkillBuyRsp>(CS_CMD_ID.CS_CMD_PET_WAIT_SKILL_BUY_RSP, structure);
        }

        /// <summary>
        /// 宠物清空等待装备技能请求
        /// </summary>
        public static CsTPacket<CSPetWaitSkillClearReq> PetWaitSkillClearReq(CSPetWaitSkillClearReq structure)
        {
            return new CsTPacket<CSPetWaitSkillClearReq>(CS_CMD_ID.CS_CMD_PET_WAIT_SKILL_CLEAR_REQ, structure);
        }

        /// <summary>
        /// 宠物清空等待装备技能应答
        /// </summary>
        public static CsTPacket<CSPetWaitSkillClearRsp> PetWaitSkillClearRsp(CSPetWaitSkillClearRsp structure)
        {
            return new CsTPacket<CSPetWaitSkillClearRsp>(CS_CMD_ID.CS_CMD_PET_WAIT_SKILL_CLEAR_RSP, structure);
        }

        /// <summary>
        /// 宠物技能效果同步
        /// </summary>
        public static CsTPacket<CSPetSkillEffectSync> PetSkillEffectSync(CSPetSkillEffectSync structure)
        {
            return new CsTPacket<CSPetSkillEffectSync>(CS_CMD_ID.CS_CMD_PET_SKILL_EFFECT_SYNC, structure);
        }

        /// <summary>
        /// 俯冲行为版本1 同步
        /// </summary>
        public static CsTPacket<CSFlyDiveToTarget1SYNC> FlyDiveToTarget1Sync(CSFlyDiveToTarget1SYNC structure)
        {
            return new CsTPacket<CSFlyDiveToTarget1SYNC>(CS_CMD_ID.CS_CMD_FORMULA_FLY_DIVE_TO_TARGET1, structure);
        }

        public static CsTPacket<CSMsgBoxNewNtf> MsgBoxNewNtf(CSMsgBoxNewNtf structure)
        {
            return new CsTPacket<CSMsgBoxNewNtf>(CS_CMD_ID.CS_CMD_MSGBOX_NEW_NTF, structure);
        }

        public static CsTPacket<CSMsgBoxSelectReq> MsgBoxSelectReq(CSMsgBoxSelectReq structure)
        {
            return new CsTPacket<CSMsgBoxSelectReq>(CS_CMD_ID.CS_CMD_MSGBOX_SELECT_REQ, structure);
        }

        public static CsTPacket<CSMsgBoxSafeModeNtf> MsgBoxSafeModeNtf(CSMsgBoxSafeModeNtf structure)
        {
            return new CsTPacket<CSMsgBoxSafeModeNtf>(CS_CMD_ID.CS_CMD_MSGBOX_SAFE_MODE_NTF, structure);
        }

        public static CsTPacket<CSMsgBoxSafeTimeNtf> MsgBoxSafeTimeNtf(CSMsgBoxSafeTimeNtf structure)
        {
            return new CsTPacket<CSMsgBoxSafeTimeNtf>(CS_CMD_ID.CS_CMD_MSGBOX_SAFE_TIME_NTF, structure);
        }

        /// <summary>
        /// 等级信息通知
        /// </summary>
        public static CsTPacket<CSHunterStarLevelInfoNtf> HunterStarLevelInfoNtf(CSHunterStarLevelInfoNtf structure)
        {
            return new CsTPacket<CSHunterStarLevelInfoNtf>(CS_CMD_ID.CS_CMD_HUNTER_STAR_LEVEL_INFO_NTF, structure);
        }

        /// <summary>
        /// 添加卡片通知
        /// </summary>
        public static CsTPacket<CSHunterStarAddCardNtf> HunterStarAddCardNtf(CSHunterStarAddCardNtf structure)
        {
            return new CsTPacket<CSHunterStarAddCardNtf>(CS_CMD_ID.CS_CMD_HUNTER_STAR_ADD_CARD_NTF, structure);
        }

        /// <summary>
        /// 更新卡片通知
        /// </summary>
        public static CsTPacket<CSHunterStarUpdateCardNtf> HunterStarUpdateCardNtf(CSHunterStarUpdateCardNtf structure)
        {
            return new CsTPacket<CSHunterStarUpdateCardNtf>(CS_CMD_ID.CS_CMD_HUNTER_STAR_UPDATE_CARD_NTF, structure);
        }

        /// <summary>
        /// 更新统计项
        /// </summary>
        public static CsTPacket<CSHunterStarUpdateStatNtf> HunterStarUpdateStatNtf(CSHunterStarUpdateStatNtf structure)
        {
            return new CsTPacket<CSHunterStarUpdateStatNtf>(CS_CMD_ID.CS_CMD_HUNTER_STAR_UPDATE_STAT_NTF, structure);
        }

        /// <summary>
        /// 数据初始化
        /// </summary>
        public static CsTPacket<CSHunterStarInitNtf> HunterStarInitNtf(CSHunterStarInitNtf structure)
        {
            return new CsTPacket<CSHunterStarInitNtf>(CS_CMD_ID.CS_CMD_HUNTER_STAR_INIT_NTF, structure);
        }

        /// <summary>
        /// 星级通知
        /// </summary>
        public static CsTPacket<CSHunterStarNotify> HunterStarNotify(CSHunterStarNotify structure)
        {
            return new CsTPacket<CSHunterStarNotify>(CS_CMD_ID.CS_CMD_HUNTER_STAR_NTF, structure);
        }

        /// <summary>
        /// 星级重置通知
        /// </summary>
        public static CsTPacket<CSHunterStarResetNtf> HunterStarResetNtf(CSHunterStarResetNtf structure)
        {
            return new CsTPacket<CSHunterStarResetNtf>(CS_CMD_ID.CS_CMD_HUNTER_STAR_RESET_NTF, structure);
        }

        /// <summary>
        /// 获取星级
        /// </summary>
        public static CsTPacket<CSHunterStarGetLevel> HunterStarGetLevel(CSHunterStarGetLevel structure)
        {
            return new CsTPacket<CSHunterStarGetLevel>(CS_CMD_ID.CS_CMD_HUNTER_STAR_GET_LEVEL, structure);
        }

        /// <summary>
        /// 卡片追踪
        /// </summary>
        public static CsTPacket<C2SHunterStarTrackCard> C2SHunterStarTrackCard(C2SHunterStarTrackCard structure)
        {
            return new CsTPacket<C2SHunterStarTrackCard>(CS_CMD_ID.C2S_CMD_HUNTER_STAR_TRACK_CARD, structure);
        }

        /// <summary>
        /// 卡片追踪
        /// </summary>
        public static CsTPacket<S2CHunterStarTrackCard> S2CHunterStarTrackCard(S2CHunterStarTrackCard structure)
        {
            return new CsTPacket<S2CHunterStarTrackCard>(CS_CMD_ID.S2C_CMD_HUNTER_STAR_TRACK_CARD, structure);
        }

        /// <summary>
        /// 刷新统计项
        /// </summary>
        public static CsTPacket<S2CHunterStarRefreshStat> S2CHunterStarRefreshStat(S2CHunterStarRefreshStat structure)
        {
            return new CsTPacket<S2CHunterStarRefreshStat>(CS_CMD_ID.S2C_CMD_HUNTER_STAR_REFRESH_STAT, structure);
        }

        /// <summary>
        /// 成就奖励领取
        /// </summary>
        public static CsTPacket<C2SAchieveFetchReward> C2SAchieveFetchReward(C2SAchieveFetchReward structure)
        {
            return new CsTPacket<C2SAchieveFetchReward>(CS_CMD_ID.C2S_CMD_ACHEIVE_FETCHREWARD, structure);
        }

        /// <summary>
        /// 获取邮件列表请求
        /// </summary>
        public static CsTPacket<CSMailListGetReq> MailListGetReq(CSMailListGetReq structure)
        {
            return new CsTPacket<CSMailListGetReq>(CS_CMD_ID.CS_CMD_MAIL_LISTGET_REQ, structure);
        }

        /// <summary>
        /// 获取邮件列表响应
        /// </summary>
        public static CsTPacket<CSMailListGetRes> MailListGetRes(CSMailListGetRes structure)
        {
            return new CsTPacket<CSMailListGetRes>(CS_CMD_ID.CS_CMD_MAIL_LISTGET_RES, structure);
        }

        /// <summary>
        /// 获取邮件内容请求
        /// </summary>
        public static CsTPacket<CSMailDetailGetReq> MailDetailGetReq(CSMailDetailGetReq structure)
        {
            return new CsTPacket<CSMailDetailGetReq>(CS_CMD_ID.CS_CMD_MAIL_DETAILGET_REQ, structure);
        }

        /// <summary>
        /// 获取邮件内容响应
        /// </summary>
        public static CsTPacket<CSMailDetailGetRes> MailDetailGetRes(CSMailDetailGetRes structure)
        {
            return new CsTPacket<CSMailDetailGetRes>(CS_CMD_ID.CS_CMD_MAIL_DETAILGET_RES, structure);
        }

        /// <summary>
        /// 提取邮件附件请求
        /// </summary>
        public static CsTPacket<CSMailAccessoriesGetReq> MailAccessoriesGetReq(CSMailAccessoriesGetReq structure)
        {
            return new CsTPacket<CSMailAccessoriesGetReq>(CS_CMD_ID.CS_CMD_MAIL_ACCESSORIESGET_REQ, structure);
        }

        /// <summary>
        /// 提取邮件附件响应
        /// </summary>
        public static CsTPacket<CSMailAccessoriesGetRes> MailAccessoriesGetRes(CSMailAccessoriesGetRes structure)
        {
            return new CsTPacket<CSMailAccessoriesGetRes>(CS_CMD_ID.CS_CMD_MAIL_ACCESSORIESGET_RES, structure);
        }

        /// <summary>
        /// 邮件发送请求
        /// </summary>
        public static CsTPacket<CSMailSendReq> MailSendReq(CSMailSendReq structure)
        {
            return new CsTPacket<CSMailSendReq>(CS_CMD_ID.CS_CMD_MAIL_SEND_REQ, structure);
        }

        /// <summary>
        /// 邮件发送响应
        /// </summary>
        public static CsTPacket<CSMailSendRes> MailSendRes(CSMailSendRes structure)
        {
            return new CsTPacket<CSMailSendRes>(CS_CMD_ID.CS_CMD_MAIL_SEND_RES, structure);
        }

        /// <summary>
        /// 邮件删除请求
        /// </summary>
        public static CsTPacket<CSMailForceDelReq> MailForceDelReq(CSMailForceDelReq structure)
        {
            return new CsTPacket<CSMailForceDelReq>(CS_CMD_ID.CS_CMD_MAIL_FORCEDEL_REQ, structure);
        }

        /// <summary>
        /// 邮件删除响应
        /// </summary>
        public static CsTPacket<CSMailForceDelRes> MailForceDelRes(CSMailForceDelRes structure)
        {
            return new CsTPacket<CSMailForceDelRes>(CS_CMD_ID.CS_CMD_MAIL_FORCEDEL_RES, structure);
        }

        /// <summary>
        /// 邮件通知
        /// </summary>
        public static CsTPacket<CSMailNotify> MailNotify(CSMailNotify structure)
        {
            return new CsTPacket<CSMailNotify>(CS_CMD_ID.CS_CMD_MAIL_NOTIFY, structure);
        }

        /// <summary>
        /// 角色登陆后未读邮件提醒
        /// </summary>
        public static CsTPacket<CSMailLoginRes> MailLoginRes(CSMailLoginRes structure)
        {
            return new CsTPacket<CSMailLoginRes>(CS_CMD_ID.CS_CMD_MAIL_LOGIN_RES, structure);
        }

        /// <summary>
        /// 设置黑名单请求
        /// </summary>
        public static CsTPacket<CSMailBlackSetReq> MailBlackSetReq(CSMailBlackSetReq structure)
        {
            return new CsTPacket<CSMailBlackSetReq>(CS_CMD_ID.CS_CMD_MAIL_BLACK_SET_REQ, structure);
        }

        /// <summary>
        /// 设置黑名单响应
        /// </summary>
        public static CsTPacket<CSMailBlackSetRes> MailBlackSetRes(CSMailBlackSetRes structure)
        {
            return new CsTPacket<CSMailBlackSetRes>(CS_CMD_ID.CS_CMD_MAIL_BLACK_SET_RES, structure);
        }

        /// <summary>
        /// 设置已读请求
        /// </summary>
        public static CsTPacket<CSMailReadedReq> MailReadedReq(CSMailReadedReq structure)
        {
            return new CsTPacket<CSMailReadedReq>(CS_CMD_ID.CS_CMD_MAIL_READEDREQ, structure);
        }

        /// <summary>
        /// 设置已读响应
        /// </summary>
        public static CsTPacket<CSMailReadedRes> MailReadedRes(CSMailReadedRes structure)
        {
            return new CsTPacket<CSMailReadedRes>(CS_CMD_ID.CS_CMD_MAIL_READEDRES, structure);
        }

        /// <summary>
        /// 玩家退信请求
        /// </summary>
        public static CsTPacket<CSMailReturnReq> MailReturnReq(CSMailReturnReq structure)
        {
            return new CsTPacket<CSMailReturnReq>(CS_CMD_ID.CS_CMD_MAIL_RETURN_REQ, structure);
        }

        /// <summary>
        /// 玩家退信响应
        /// </summary>
        public static CsTPacket<CSMailReturnRes> MailReturnRes(CSMailReturnRes structure)
        {
            return new CsTPacket<CSMailReturnRes>(CS_CMD_ID.CS_CMD_MAIL_RETURN_RES, structure);
        }

        /// <summary>
        /// 批量删除请求
        /// </summary>
        public static CsTPacket<CSMailGroupDelReq> MailGroupDelReq(CSMailGroupDelReq structure)
        {
            return new CsTPacket<CSMailGroupDelReq>(CS_CMD_ID.CS_CMD_MAIL_GROUPDEL_REQ, structure);
        }

        /// <summary>
        /// 批量删除响应
        /// </summary>
        public static CsTPacket<CSMailGroupDelRes> MailGroupDelRes(CSMailGroupDelRes structure)
        {
            return new CsTPacket<CSMailGroupDelRes>(CS_CMD_ID.CS_CMD_MAIL_GROUPDEL_RES, structure);
        }

        /// <summary>
        /// 获取未读邮件数目请求
        /// </summary>
        public static CsTPacket<CSMailunReadGetReq> MailunReadGetReq(CSMailunReadGetReq structure)
        {
            return new CsTPacket<CSMailunReadGetReq>(CS_CMD_ID.CS_CMD_MAIL_UNREADGET_REQ, structure);
        }

        /// <summary>
        /// 获取未读邮件数目响应
        /// </summary>
        public static CsTPacket<CSMailunReadGetRes> MailunReadGetRes(CSMailunReadGetRes structure)
        {
            return new CsTPacket<CSMailunReadGetRes>(CS_CMD_ID.CS_CMD_MAIL_UNREADGET_RES, structure);
        }

        /// <summary>
        /// 邮件错误
        /// </summary>
        public static CsTPacket<S2CMailErr> S2CMailErr(S2CMailErr structure)
        {
            return new CsTPacket<S2CMailErr>(CS_CMD_ID.S2C_CMD_MAIL_ERR, structure);
        }

        /// <summary>
        /// 批量提取邮件附件请求
        /// </summary>
        public static CsTPacket<CSMailGroupAccessoriesGetReq> MailGroupAccessoriesGetReq(
            CSMailGroupAccessoriesGetReq structure)
        {
            return new CsTPacket<CSMailGroupAccessoriesGetReq>(CS_CMD_ID.CS_CMD_MAIL_GROUP_ACCESSORIESGET_REQ,
                structure);
        }

        /// <summary>
        /// 邮件通知
        /// </summary>
        public static CsTPacket<S2CMailNotify> S2CMailNotify(S2CMailNotify structure)
        {
            return new CsTPacket<S2CMailNotify>(CS_CMD_ID.S2C_CMD_MAIL_NOTIFY, structure);
        }

        /// <summary>
        /// 猎团邮件发送请求
        /// </summary>
        public static CsTPacket<CSMailSendReq> GuildMailSendReq(CSMailSendReq structure)
        {
            return new CsTPacket<CSMailSendReq>(CS_CMD_ID.CS_CMD_GUILD_MAIL_SEND_REQ, structure);
        }

        /// <summary>
        /// 领取礼包请求
        /// </summary>
        public static CsTPacket<CSFetchPrizeReq> FetchPrizeReq(CSFetchPrizeReq structure)
        {
            return new CsTPacket<CSFetchPrizeReq>(CS_CMD_ID.CS_CMD_SCHEDULE_FETCH_PRIZE_REQ, structure);
        }

        /// <summary>
        /// 领取礼包响应
        /// </summary>
        public static CsTPacket<CSFetchPrizeRes> FetchPrizeRes(CSFetchPrizeRes structure)
        {
            return new CsTPacket<CSFetchPrizeRes>(CS_CMD_ID.CS_CMD_SCHEDULE_FETCH_PRIZE_RES, structure);
        }

        /// <summary>
        /// 获取每日奖励请求
        /// </summary>
        public static CsTPacket<CSObtainDailyRewardListReq> ObtainRewardListReq(CSObtainDailyRewardListReq structure)
        {
            return new CsTPacket<CSObtainDailyRewardListReq>(CS_CMD_ID.CS_CMD_SCHEDULE_OBTAIN_REWARD_LIST_REQ,
                structure);
        }

        /// <summary>
        /// 获取每日奖励响应
        /// </summary>
        public static CsTPacket<CSObtainDailyRewardListRes> ObtainRewardListRes(CSObtainDailyRewardListRes structure)
        {
            return new CsTPacket<CSObtainDailyRewardListRes>(CS_CMD_ID.CS_CMD_SCHEDULE_OBTAIN_REWARD_LIST_RES,
                structure);
        }

        /// <summary>
        /// 获取每日目标请求
        /// </summary>
        public static CsTPacket<CSObtainDailyTargetListReq> ObtainTargetListReq(CSObtainDailyTargetListReq structure)
        {
            return new CsTPacket<CSObtainDailyTargetListReq>(CS_CMD_ID.CS_CMD_SCHEDULE_OBTAIN_TARGET_LIST_REQ,
                structure);
        }

        /// <summary>
        /// 获取每日目标响应
        /// </summary>
        public static CsTPacket<CSObtainDailyTargetListRes> ObtainTargetListRes(CSObtainDailyTargetListRes structure)
        {
            return new CsTPacket<CSObtainDailyTargetListRes>(CS_CMD_ID.CS_CMD_SCHEDULE_OBTAIN_TARGET_LIST_RES,
                structure);
        }

        /// <summary>
        /// 错误
        /// </summary>
        public static CsTPacket<CSScheduleError> ScheduleError(CSScheduleError structure)
        {
            return new CsTPacket<CSScheduleError>(CS_CMD_ID.CS_CMD_SCHEDULE_ERROR, structure);
        }

        /// <summary>
        /// 每日刷新
        /// </summary>
        public static CsTPacket<CSScheduleRefresh> ScheduleRefresh(CSScheduleRefresh structure)
        {
            return new CsTPacket<CSScheduleRefresh>(CS_CMD_ID.CS_CMD_SCHEDULE_REFRESH, structure);
        }

        /// <summary>
        /// 申请排副本
        /// </summary>
        public static CsTPacket<CSLineUpInstanceReq> LineUpInstanceReq(CSLineUpInstanceReq structure)
        {
            return new CsTPacket<CSLineUpInstanceReq>(CS_CMD_ID.CS_CMD_LINE_UP_INSTANCE_REQ, structure);
        }

        /// <summary>
        /// 申请排副本
        /// </summary>
        public static CsTPacket<CSLineUpInstanceRsp> LineUpInstanceRsp(CSLineUpInstanceRsp structure)
        {
            return new CsTPacket<CSLineUpInstanceRsp>(CS_CMD_ID.CS_CMD_LINE_UP_INSTANCE_RSP, structure);
        }

        /// <summary>
        /// 退出排副本
        /// </summary>
        public static CsTPacket<CSQuitLineUpInstanceReq> QuitLineUpInstanceReq(CSQuitLineUpInstanceReq structure)
        {
            return new CsTPacket<CSQuitLineUpInstanceReq>(CS_CMD_ID.CS_CMD_QUIT_LINE_UP_INSTANCE_REQ, structure);
        }

        /// <summary>
        /// 退出排副本
        /// </summary>
        public static CsTPacket<CSQuitLineUpInstanceRsp> QuitLineUpInstanceRsp(CSQuitLineUpInstanceRsp structure)
        {
            return new CsTPacket<CSQuitLineUpInstanceRsp>(CS_CMD_ID.CS_CMD_QUIT_LINE_UP_INSTANCE_RSP, structure);
        }

        /// <summary>
        /// 排副本就绪确认请求
        /// </summary>
        public static CsTPacket<CSLineUpAgreeInstanceReq> LineUpAgreeInstanceReq(CSLineUpAgreeInstanceReq structure)
        {
            return new CsTPacket<CSLineUpAgreeInstanceReq>(CS_CMD_ID.CS_CMD_LINE_UP_AGREE_INSTANCE_REQ, structure);
        }

        /// <summary>
        /// 排副本就绪确认应答
        /// </summary>
        public static CsTPacket<CSLineUpAgreeInstanceRsp> LineUpAgreeInstanceRsp(CSLineUpAgreeInstanceRsp structure)
        {
            return new CsTPacket<CSLineUpAgreeInstanceRsp>(CS_CMD_ID.CS_CMD_LINE_UP_AGREE_INSTANCE_RSP, structure);
        }

        /// <summary>
        /// 排副本状态变更
        /// </summary>
        public static CsTPacket<CSLineUpStateNtf> LineUpStateNtf(CSLineUpStateNtf structure)
        {
            return new CsTPacket<CSLineUpStateNtf>(CS_CMD_ID.CS_CMD_LINE_UP_STATE_NTF, structure);
        }

        /// <summary>
        /// 猎团战报名请求
        /// </summary>
        public static CsTPacket<CSGuildMatchSignUpReq> GuildMatchSignUpReq(CSGuildMatchSignUpReq structure)
        {
            return new CsTPacket<CSGuildMatchSignUpReq>(CS_CMD_ID.CS_CMD_GUILD_MATCH_SIGN_UP_REQ, structure);
        }

        /// <summary>
        /// 猎团战报名响应
        /// </summary>
        public static CsTPacket<CSGuildMatchSignUpRsp> GuildMatchSignUpRsp(CSGuildMatchSignUpRsp structure)
        {
            return new CsTPacket<CSGuildMatchSignUpRsp>(CS_CMD_ID.CS_CMD_GUILD_MATCH_SIGN_UP_RSP, structure);
        }

        /// <summary>
        /// 猎团战报名取消请求
        /// </summary>
        public static CsTPacket<CSGuildMatchGiveUpReq> GuildMatchGiveUpReq(CSGuildMatchGiveUpReq structure)
        {
            return new CsTPacket<CSGuildMatchGiveUpReq>(CS_CMD_ID.CS_CMD_GUILD_MATCH_GIVE_UP_REQ, structure);
        }

        /// <summary>
        /// 猎团战报名取消响应
        /// </summary>
        public static CsTPacket<CSGuildMatchGiveUpRsp> GuildMatchGiveUpRsp(CSGuildMatchGiveUpRsp structure)
        {
            return new CsTPacket<CSGuildMatchGiveUpRsp>(CS_CMD_ID.CS_CMD_GUILD_MATCH_GIVE_UP_RSP, structure);
        }

        /// <summary>
        /// 猎团战报名确认请求
        /// </summary>
        public static CsTPacket<CSGuildMatchSignUpAgreeReq> GuildMatchSignUpAgreeReq(
            CSGuildMatchSignUpAgreeReq structure)
        {
            return new CsTPacket<CSGuildMatchSignUpAgreeReq>(CS_CMD_ID.CS_CMD_GUILD_MATCH_SIGN_UP_AGREE_REQ, structure);
        }

        /// <summary>
        /// 猎团战报名确认响应
        /// </summary>
        public static CsTPacket<CSGuildMatchSignUpAgreeRsp> GuildMatchSignUpAgreeRsp(
            CSGuildMatchSignUpAgreeRsp structure)
        {
            return new CsTPacket<CSGuildMatchSignUpAgreeRsp>(CS_CMD_ID.CS_CMD_GUILD_MATCH_SIGN_UP_AGREE_RSP, structure);
        }

        /// <summary>
        /// 猎团战报名确认准备
        /// </summary>
        public static CsTPacket<CSGuildMatchSignUpReadyNtf> GuildMatchSignUpReadyNtf(
            CSGuildMatchSignUpReadyNtf structure)
        {
            return new CsTPacket<CSGuildMatchSignUpReadyNtf>(CS_CMD_ID.CS_CMD_GUILD_MATCH_SIGN_UP_READY_NTF, structure);
        }

        /// <summary>
        /// 猎团战报名列表LIST
        /// </summary>
        public static CsTPacket<CSGuildMatchSignUpListNtf> GuildMatchSignUpListNtf(CSGuildMatchSignUpListNtf structure)
        {
            return new CsTPacket<CSGuildMatchSignUpListNtf>(CS_CMD_ID.CS_CMD_GUILD_MATCH_SIGN_UP_LIST_NTF, structure);
        }

        /// <summary>
        /// 猎团战报增加
        /// </summary>
        public static CsTPacket<CSGuildMatchSignUpAdd> GuildMatchSignUpAdd(CSGuildMatchSignUpAdd structure)
        {
            return new CsTPacket<CSGuildMatchSignUpAdd>(CS_CMD_ID.CS_CMD_GUILD_MATCH_SIGN_UP_ADD, structure);
        }

        /// <summary>
        /// 猎团战报删除
        /// </summary>
        public static CsTPacket<CSGuildMatchSignUpDel> GuildMatchSignUpDel(CSGuildMatchSignUpDel structure)
        {
            return new CsTPacket<CSGuildMatchSignUpDel>(CS_CMD_ID.CS_CMD_GUILD_MATCH_SIGN_UP_DEL, structure);
        }

        /// <summary>
        /// 猎团战预选赛排序列表
        /// </summary>
        public static CsTPacket<CSGuildMatchQualifierResultListNtf> GuildMatchQualifierResultListNtf(
            CSGuildMatchQualifierResultListNtf structure)
        {
            return new CsTPacket<CSGuildMatchQualifierResultListNtf>(
                CS_CMD_ID.CS_CMD_GUILD_MATCH_QUALIFIER_RESULT_LIST_NTF, structure);
        }

        /// <summary>
        /// 猎团战预选赛排序列表增加
        /// </summary>
        public static CsTPacket<CSGuildMatchQualifierResultAdd> GuildMatchQualifierResultAdd(
            CSGuildMatchQualifierResultAdd structure)
        {
            return new CsTPacket<CSGuildMatchQualifierResultAdd>(CS_CMD_ID.CS_CMD_GUILD_MATCH_QUALIFIER_RESULT_ADD,
                structure);
        }

        /// <summary>
        /// 猎团战预选赛排序列表删除
        /// </summary>
        public static CsTPacket<CSGuildMatchQualifierResultDel> GuildMatchQualifierResultDel(
            CSGuildMatchQualifierResultDel structure)
        {
            return new CsTPacket<CSGuildMatchQualifierResultDel>(CS_CMD_ID.CS_CMD_GUILD_MATCH_QUALIFIER_RESULT_DEL,
                structure);
        }

        /// <summary>
        /// 猎团战预选赛第一名通知
        /// </summary>
        public static CsTPacket<CSGuildMatchQualifierFirstNtf> GuildMatchQualifierFirstNtf(
            CSGuildMatchQualifierFirstNtf structure)
        {
            return new CsTPacket<CSGuildMatchQualifierFirstNtf>(CS_CMD_ID.CS_CMD_GUILD_MATCH_QUALIFIER_FIRST_NTF,
                structure);
        }

        /// <summary>
        /// 猎团战状态更新
        /// </summary>
        public static CsTPacket<CSGuildMatchStateNtf> GuildMatchStateNtf(CSGuildMatchStateNtf structure)
        {
            return new CsTPacket<CSGuildMatchStateNtf>(CS_CMD_ID.CS_CMD_GUILD_MATCH_STATE_NTF, structure);
        }

        /// <summary>
        /// 猎团战淘汰赛每轮对决列表
        /// </summary>
        public static CsTPacket<CSGuildMatchPairListNtf> GuildMatchPairListNtf(CSGuildMatchPairListNtf structure)
        {
            return new CsTPacket<CSGuildMatchPairListNtf>(CS_CMD_ID.CS_CMD_GUILD_MATCH_PAIR_LIST_NTF, structure);
        }

        /// <summary>
        /// 猎团战淘汰赛每轮对决晋级
        /// </summary>
        public static CsTPacket<CSGuildMatchPairAdd> GuildMatchPairAdd(CSGuildMatchPairAdd structure)
        {
            return new CsTPacket<CSGuildMatchPairAdd>(CS_CMD_ID.CS_CMD_GUILD_MATCH_PAIR_ADD, structure);
        }

        /// <summary>
        /// 猎团战淘汰赛每轮接受
        /// </summary>
        public static CsTPacket<CSGuildMatchPairAcceptReq> GuildMatchPairAcceptReq(CSGuildMatchPairAcceptReq structure)
        {
            return new CsTPacket<CSGuildMatchPairAcceptReq>(CS_CMD_ID.CS_CMD_GUILD_MATCH_PAIR_ACCEPT_REQ, structure);
        }

        /// <summary>
        /// 猎团战淘汰赛每轮接受
        /// </summary>
        public static CsTPacket<CSGuildMatchPairAcceptRsp> GuildMatchPairAcceptRsp(CSGuildMatchPairAcceptRsp structure)
        {
            return new CsTPacket<CSGuildMatchPairAcceptRsp>(CS_CMD_ID.CS_CMD_GUILD_MATCH_PAIR_ACCEPT_RSP, structure);
        }

        /// <summary>
        /// 猎团战淘汰赛进入失败通知
        /// </summary>
        public static CsTPacket<CSGuildMatchPairEnterErrNtf> GuildMatchPairEnterErrNtf(
            CSGuildMatchPairEnterErrNtf structure)
        {
            return new CsTPacket<CSGuildMatchPairEnterErrNtf>(CS_CMD_ID.CS_CMD_GUILD_MATCH_PAIR_ENTER_ERR_NTF,
                structure);
        }

        /// <summary>
        /// 回到匹配队列
        /// </summary>
        public static CsTPacket<CSLineUpRetry> LineUpRetry(CSLineUpRetry structure)
        {
            return new CsTPacket<CSLineUpRetry>(CS_CMD_ID.CS_CMD_LINE_UP_RETYR, structure);
        }

        /// <summary>
        /// 猎人教官匹配请求
        /// </summary>
        public static CsTPacket<CSLineUpHunterOfficer> LineUpHunterOfficer(CSLineUpHunterOfficer structure)
        {
            return new CsTPacket<CSLineUpHunterOfficer>(CS_CMD_ID.CS_CMD_LINE_UP_HUNTER_OFFICER, structure);
        }

        /// <summary>
        /// 玩家进入BS时，重新发送房间必要的信息
        /// </summary>
        public static CsTPacket<CSRoomInitInfo> RoomInitInfo(CSRoomInitInfo structure)
        {
            return new CsTPacket<CSRoomInitInfo>(CS_CMD_ID.CS_CMD_ROOM_INIT_INFO, structure);
        }
        
        /// <summary>
        /// 检测猎团
        /// </summary>
        public static CsTPacket<C2SCheckGuild> C2SCheckGuild(C2SCheckGuild structure)
        {
            return new CsTPacket<C2SCheckGuild>(CS_CMD_ID.C2S_CMD_GUILD_CHECKGUILD, structure);
        }

        /// <summary>
        /// 创建猎团
        /// </summary>
        public static CsTPacket<C2SCreateGuild> C2SCreateGuild(C2SCreateGuild structure)
        {
            return new CsTPacket<C2SCreateGuild>(CS_CMD_ID.C2S_CMD_GUILD_CREATEGUILD, structure);
        }

        /// <summary>
        /// 解散猎团
        /// </summary>
        public static CsTPacket<C2SDismissGuild> C2SDismissGuild(C2SDismissGuild structure)
        {
            return new CsTPacket<C2SDismissGuild>(CS_CMD_ID.C2S_CMD_GUILD_DISMISSGUILD, structure);
        }

        /// <summary>
        /// 获取猎团集
        /// </summary>
        public static CsTPacket<C2SGetGuilds> C2SGetGuilds(C2SGetGuilds structure)
        {
            return new CsTPacket<C2SGetGuilds>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDS, structure);
        }

        /// <summary>
        /// 搜索猎团集
        /// </summary>
        public static CsTPacket<C2SFindGuilds> C2SFindGuilds(C2SFindGuilds structure)
        {
            return new CsTPacket<C2SFindGuilds>(CS_CMD_ID.C2S_CMD_GUILD_FINDGUILDS, structure);
        }

        /// <summary>
        /// 申请加入猎团
        /// </summary>
        public static CsTPacket<C2SApplyGuild> C2SApplyGuild(C2SApplyGuild structure)
        {
            return new CsTPacket<C2SApplyGuild>(CS_CMD_ID.C2S_CMD_GUILD_APPLYGUILD, structure);
        }

        /// <summary>
        /// 获取猎团申请集
        /// </summary>
        public static CsTPacket<C2SGetGuildApplys> C2SGetGuildApplys(C2SGetGuildApplys structure)
        {
            return new CsTPacket<C2SGetGuildApplys>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDAPPLYS, structure);
        }

        /// <summary>
        /// 接受猎团申请
        /// </summary>
        public static CsTPacket<C2SAcceptGuildApply> C2SAcceptGuildApply(C2SAcceptGuildApply structure)
        {
            return new CsTPacket<C2SAcceptGuildApply>(CS_CMD_ID.C2S_CMD_GUILD_ACCEPTGUILDAPPLY, structure);
        }

        /// <summary>
        /// 拒绝猎团申请
        /// </summary>
        public static CsTPacket<C2SRejectGuildApply> C2SRejectGuildApply(C2SRejectGuildApply structure)
        {
            return new CsTPacket<C2SRejectGuildApply>(CS_CMD_ID.C2S_CMD_GUILD_JEJECTGUILDAPPLY, structure);
        }

        /// <summary>
        /// 邀请加入猎团
        /// </summary>
        public static CsTPacket<C2SInviteGuild> C2SInviteGuild(C2SInviteGuild structure)
        {
            return new CsTPacket<C2SInviteGuild>(CS_CMD_ID.C2S_CMD_GUILD_INVITEGUILD, structure);
        }

        /// <summary>
        /// 获取猎团邀请集
        /// </summary>
        public static CsTPacket<C2SGetGuildInvitations> C2SGetGuildInvitations(C2SGetGuildInvitations structure)
        {
            return new CsTPacket<C2SGetGuildInvitations>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDINVITATIONS, structure);
        }

        /// <summary>
        /// 接受猎团邀请
        /// </summary>
        public static CsTPacket<C2SAcceptGuildInvitation> C2SAcceptGuildInvitation(C2SAcceptGuildInvitation structure)
        {
            return new CsTPacket<C2SAcceptGuildInvitation>(CS_CMD_ID.C2S_CMD_GUILD_ACCEPTGUILDINVITATION, structure);
        }

        /// <summary>
        /// 拒绝猎团邀请
        /// </summary>
        public static CsTPacket<C2SRejectGuildInvitation> C2SRejectGuildInvitation(C2SRejectGuildInvitation structure)
        {
            return new CsTPacket<C2SRejectGuildInvitation>(CS_CMD_ID.C2S_CMD_GUILD_JEJECTGUILDINVITATION, structure);
        }

        /// <summary>
        /// 退出猎团
        /// </summary>
        public static CsTPacket<C2SQuitGuild> C2SQuitGuild(C2SQuitGuild structure)
        {
            return new CsTPacket<C2SQuitGuild>(CS_CMD_ID.C2S_CMD_GUILD_QUITGUILD, structure);
        }

        /// <summary>
        /// 踢猎团团员
        /// </summary>
        public static CsTPacket<C2SKickGuilder> C2SKickGuilder(C2SKickGuilder structure)
        {
            return new CsTPacket<C2SKickGuilder>(CS_CMD_ID.C2S_CMD_GUILD_KICKGUILDER, structure);
        }

        /// <summary>
        /// 转让团长
        /// </summary>
        public static CsTPacket<C2SGuildAlterLeader> C2SGuildAlterLeader(C2SGuildAlterLeader structure)
        {
            return new CsTPacket<C2SGuildAlterLeader>(CS_CMD_ID.C2S_CMD_GUILD_ALTERLEADER, structure);
        }

        /// <summary>
        /// 修改备注
        /// </summary>
        public static CsTPacket<C2SGuilderNoteSetting> C2SGuilderNoteSetting(C2SGuilderNoteSetting structure)
        {
            return new CsTPacket<C2SGuilderNoteSetting>(CS_CMD_ID.C2S_CMD_GUILD_GUILDERNOTESETTING, structure);
        }

        /// <summary>
        /// 发布公告
        /// </summary>
        public static CsTPacket<C2SGuildNoteSetting> C2SGuildNoteSetting(C2SGuildNoteSetting structure)
        {
            return new CsTPacket<C2SGuildNoteSetting>(CS_CMD_ID.C2S_CMD_GUILD_NOTESETTING, structure);
        }

        /// <summary>
        /// 设置猎团标识
        /// </summary>
        public static CsTPacket<C2SGuildIconSetting> C2SGuildIconSetting(C2SGuildIconSetting structure)
        {
            return new CsTPacket<C2SGuildIconSetting>(CS_CMD_ID.C2S_CMD_GUILD_ICONSETTING, structure);
        }

        /// <summary>
        /// 升级
        /// </summary>
        public static CsTPacket<C2SGuildLevelUp> C2SGuildLevelUp(C2SGuildLevelUp structure)
        {
            return new CsTPacket<C2SGuildLevelUp>(CS_CMD_ID.C2S_CMD_GUILD_LEVELUP, structure);
        }

        /// <summary>
        /// 领工资
        /// </summary>
        public static CsTPacket<C2SGuildTakeWage> C2SGuildTakeWage(C2SGuildTakeWage structure)
        {
            return new CsTPacket<C2SGuildTakeWage>(CS_CMD_ID.C2S_CMD_GUILD_TAKEWAGE, structure);
        }

        /// <summary>
        /// 获取猎团句柄
        /// </summary>
        public static CsTPacket<C2SGetGuildHandle> C2SGetGuildHandle(C2SGetGuildHandle structure)
        {
            return new CsTPacket<C2SGetGuildHandle>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDHANDLE, structure);
        }

        /// <summary>
        /// 获取猎团信息
        /// </summary>
        public static CsTPacket<C2SGetGuildDetail> C2SGetGuildDetail(C2SGetGuildDetail structure)
        {
            return new CsTPacket<C2SGetGuildDetail>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDDETAIL, structure);
        }

        /// <summary>
        /// 获取猎团头衔
        /// </summary>
        public static CsTPacket<C2SGetGuildTitles> C2SGetGuildTitles(C2SGetGuildTitles structure)
        {
            return new CsTPacket<C2SGetGuildTitles>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDTITLES, structure);
        }

        /// <summary>
        /// 获取团长
        /// </summary>
        public static CsTPacket<C2SGuildGetLeader> C2SGuildGetLeader(C2SGuildGetLeader structure)
        {
            return new CsTPacket<C2SGuildGetLeader>(CS_CMD_ID.C2S_CMD_GUILD_GETLEADER, structure);
        }

        /// <summary>
        /// 获取自己
        /// </summary>
        public static CsTPacket<C2SGuildGetSelf> C2SGuildGetSelf(C2SGuildGetSelf structure)
        {
            return new CsTPacket<C2SGuildGetSelf>(CS_CMD_ID.C2S_CMD_GUILD_GETSELF, structure);
        }

        /// <summary>
        /// 获取自己
        /// </summary>
        public static CsTPacket<C2SGetGuilderDetail> C2SGetGuilderDetail(C2SGetGuilderDetail structure)
        {
            return new CsTPacket<C2SGetGuilderDetail>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDERDETAIL, structure);
        }

        /// <summary>
        /// 获取猎团信息
        /// </summary>
        public static CsTPacket<C2SGetGuildAll> C2SGetGuildAll(C2SGetGuildAll structure)
        {
            return new CsTPacket<C2SGetGuildAll>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDALL, structure);
        }

        /// <summary>
        /// 获取猎团团员
        /// </summary>
        public static CsTPacket<C2SGetGuilder> C2SGetGuilder(C2SGetGuilder structure)
        {
            return new CsTPacket<C2SGetGuilder>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDER, structure);
        }

        /// <summary>
        /// 获取猎团团员集
        /// </summary>
        public static CsTPacket<C2SGetGuildersCount> C2SGetGuildersCount(C2SGetGuildersCount structure)
        {
            return new CsTPacket<C2SGetGuildersCount>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDERSCOUNT, structure);
        }

        /// <summary>
        /// 获取猎团团员集
        /// </summary>
        public static CsTPacket<C2SGetGuilders> C2SGetGuilders(C2SGetGuilders structure)
        {
            return new CsTPacket<C2SGetGuilders>(CS_CMD_ID.C2S_CMD_GUILD_GETGUILDERS, structure);
        }

        /// <summary>
        /// 设置头衔
        /// </summary>
        public static CsTPacket<C2SGuildTitleSetting> C2SGuildTitleSetting(C2SGuildTitleSetting structure)
        {
            return new CsTPacket<C2SGuildTitleSetting>(CS_CMD_ID.C2S_CMD_GUILD_TITLESETTING, structure);
        }

        /// <summary>
        /// 重置头衔
        /// </summary>
        public static CsTPacket<C2SGuildResetTitle> C2SGuildResetTitle(C2SGuildResetTitle structure)
        {
            return new CsTPacket<C2SGuildResetTitle>(CS_CMD_ID.C2S_CMD_GUILD_RESETTITLE, structure);
        }

        /// <summary>
        /// 设置权限
        /// </summary>
        public static CsTPacket<C2SGuildRightSetting> C2SGuildRightSetting(C2SGuildRightSetting structure)
        {
            return new CsTPacket<C2SGuildRightSetting>(CS_CMD_ID.C2S_CMD_GUILD_RIGHTSETTING, structure);
        }

        /// <summary>
        /// 重置权限
        /// </summary>
        public static CsTPacket<C2SGuildResetRight> C2SGuildResetRight(C2SGuildResetRight structure)
        {
            return new CsTPacket<C2SGuildResetRight>(CS_CMD_ID.C2S_CMD_GUILD_RESETRIGHT, structure);
        }

        /// <summary>
        /// 提升头衔
        /// </summary>
        public static CsTPacket<C2SGuildAscendTitle> C2SGuildAscendTitle(C2SGuildAscendTitle structure)
        {
            return new CsTPacket<C2SGuildAscendTitle>(CS_CMD_ID.C2S_CMD_GUILD_ASCENDTITLE, structure);
        }

        /// <summary>
        /// 降低头衔
        /// </summary>
        public static CsTPacket<C2SGuildDescendTitle> C2SGuildDescendTitle(C2SGuildDescendTitle structure)
        {
            return new CsTPacket<C2SGuildDescendTitle>(CS_CMD_ID.C2S_CMD_GUILD_DESCENDTITLE, structure);
        }

        /// <summary>
        /// 进入营地
        /// </summary>
        public static CsTPacket<C2SGuildEnterCamp> C2SGuildEnterCamp(C2SGuildEnterCamp structure)
        {
            return new CsTPacket<C2SGuildEnterCamp>(CS_CMD_ID.C2S_CMD_GUILD_ENTERCAMP, structure);
        }

        /// <summary>
        /// 离开营地
        /// </summary>
        public static CsTPacket<C2SGuildLeaveCamp> C2SGuildLeaveCamp(C2SGuildLeaveCamp structure)
        {
            return new CsTPacket<C2SGuildLeaveCamp>(CS_CMD_ID.C2S_CMD_GUILD_LEAVECAMP, structure);
        }

        /// <summary>
        /// 获取学会的技能
        /// </summary>
        public static CsTPacket<C2SGuildGetLearnedSkills> C2SGuildGetLearnedSkills(C2SGuildGetLearnedSkills structure)
        {
            return new CsTPacket<C2SGuildGetLearnedSkills>(CS_CMD_ID.C2S_CMD_GUILD_GETLEARNEDSKILLS, structure);
        }

        /// <summary>
        /// 获取未被学习的猎团技能
        /// </summary>
        public static CsTPacket<C2SGuildGetCandidateSkills> C2SGuildGetCandidateSkills(
            C2SGuildGetCandidateSkills structure)
        {
            return new CsTPacket<C2SGuildGetCandidateSkills>(CS_CMD_ID.C2S_CMD_GUILD_GETCANDIDATESKILLS, structure);
        }

        /// <summary>
        /// 学习技能
        /// </summary>
        public static CsTPacket<C2SGuildLearnSkill> C2SGuildLearnSkill(C2SGuildLearnSkill structure)
        {
            return new CsTPacket<C2SGuildLearnSkill>(CS_CMD_ID.C2S_CMD_GUILD_LEARNSKILL, structure);
        }

        /// <summary>
        /// 整理物品
        /// </summary>
        public static CsTPacket<C2SGuildSortItemReq> GuildSortItemReq(C2SGuildSortItemReq structure)
        {
            return new CsTPacket<C2SGuildSortItemReq>(CS_CMD_ID.C2S_CMD_GUILD_SORT_ITEM_REQ, structure);
        }

        /// <summary>
        /// 修改猎团页签名称
        /// </summary>
        public static CsTPacket<C2SGuildModifyColumnName> C2SGuildModifyColumnName(C2SGuildModifyColumnName structure)
        {
            return new CsTPacket<C2SGuildModifyColumnName>(CS_CMD_ID.C2S_CMD_GUILD_MODIFYCOLUMNNAME, structure);
        }

        /// <summary>
        /// 请求操作物品
        /// </summary>
        public static CsTPacket<C2SGuildOperateItemReq> C2SGuildOperateItemReq(C2SGuildOperateItemReq structure)
        {
            return new CsTPacket<C2SGuildOperateItemReq>(CS_CMD_ID.C2S_CMD_GUILD_OPERATE_ITEM_REQ, structure);
        }

        /// <summary>
        /// 设置仓库权限
        /// </summary>
        public static CsTPacket<C2SGuildDepotRightSetting> C2SGuildDepotRightSetting(
            C2SGuildDepotRightSetting structure)
        {
            return new CsTPacket<C2SGuildDepotRightSetting>(CS_CMD_ID.C2S_CMD_GUILD_DEPOTRIGHTSETTING, structure);
        }

        /// <summary>
        /// 重置仓库权限
        /// </summary>
        public static CsTPacket<C2SGuildResetDepotRight> C2SGuildResetDepotRight(C2SGuildResetDepotRight structure)
        {
            return new CsTPacket<C2SGuildResetDepotRight>(CS_CMD_ID.C2S_CMD_GUILD_RESETDEPOTRIGHT, structure);
        }

        /// <summary>
        /// 弹劾团长
        /// </summary>
        public static CsTPacket<C2SGuildImpeachLeader> C2SGuildImpeachLeader(C2SGuildImpeachLeader structure)
        {
            return new CsTPacket<C2SGuildImpeachLeader>(CS_CMD_ID.C2S_CMD_GUILD_IMPEACHLEADER, structure);
        }

        /// <summary>
        /// 选择QuestPrize
        /// </summary>
        public static CsTPacket<C2SGuildSelectQuestPrize> C2SGuildSelectQuestPrize(C2SGuildSelectQuestPrize structure)
        {
            return new CsTPacket<C2SGuildSelectQuestPrize>(CS_CMD_ID.C2S_CMD_GUILD_SELECTQUESTPRIZE, structure);
        }

        /// <summary>
        /// 猎团改名
        /// </summary>
        public static CsTPacket<C2SGuildModifyName> C2SGuildModifyName(C2SGuildModifyName structure)
        {
            return new CsTPacket<C2SGuildModifyName>(CS_CMD_ID.C2S_CMD_GUILD_MODIFYNAME, structure);
        }

        /// <summary>
        /// 查询猎团
        /// </summary>
        public static CsTPacket<C2SGuildQueryGuild> C2SGuildQueryGuild(C2SGuildQueryGuild structure)
        {
            return new CsTPacket<C2SGuildQueryGuild>(CS_CMD_ID.C2S_CMD_GUILD_QUERYGUILD, structure);
        }

        /// <summary>
        /// 猎团错误
        /// </summary>
        public static CsTPacket<S2CGuildErr> S2CGuildErr(S2CGuildErr structure)
        {
            return new CsTPacket<S2CGuildErr>(CS_CMD_ID.S2C_CMD_GUILD_ERR, structure);
        }

        /// <summary>
        /// 猎团通知
        /// </summary>
        public static CsTPacket<S2CGuildNotify> S2CGuildNotify(S2CGuildNotify structure)
        {
            return new CsTPacket<S2CGuildNotify>(CS_CMD_ID.S2C_CMD_GUILD_NOTIFY, structure);
        }

        /// <summary>
        /// 获取猎团集
        /// </summary>
        public static CsTPacket<S2CGetGuilds> S2CGetGuilds(S2CGetGuilds structure)
        {
            return new CsTPacket<S2CGetGuilds>(CS_CMD_ID.S2C_CMD_GUILD_GETGUILDS, structure);
        }

        /// <summary>
        /// 搜索猎团集
        /// </summary>
        public static CsTPacket<S2CFindGuilds> S2CFindGuilds(S2CFindGuilds structure)
        {
            return new CsTPacket<S2CFindGuilds>(CS_CMD_ID.S2C_CMD_GUILD_FINDGUILDS, structure);
        }

        /// <summary>
        /// 获取猎团申请集
        /// </summary>
        public static CsTPacket<S2CGetGuildApplys> S2CGetGuildApplys(S2CGetGuildApplys structure)
        {
            return new CsTPacket<S2CGetGuildApplys>(CS_CMD_ID.S2C_CMD_GUILD_GETGUILDAPPLYS, structure);
        }

        /// <summary>
        /// 获取猎团邀请集
        /// </summary>
        public static CsTPacket<S2CGetGuildInvitations> S2CGetGuildInvitations(S2CGetGuildInvitations structure)
        {
            return new CsTPacket<S2CGetGuildInvitations>(CS_CMD_ID.S2C_CMD_GUILD_GETGUILDINVITATIONS, structure);
        }

        /// <summary>
        /// 获取猎团信息
        /// </summary>
        public static CsTPacket<S2CGetGuildDetail> S2CGetGuildDetail(S2CGetGuildDetail structure)
        {
            return new CsTPacket<S2CGetGuildDetail>(CS_CMD_ID.S2C_CMD_GUILD_GETGUILDDETAIL, structure);
        }

        /// <summary>
        /// 获取猎团头衔
        /// </summary>
        public static CsTPacket<S2CGetGuildTitles> S2CGetGuildTitles(S2CGetGuildTitles structure)
        {
            return new CsTPacket<S2CGetGuildTitles>(CS_CMD_ID.S2C_CMD_GUILD_GETGUILDTITLES, structure);
        }

        /// <summary>
        /// 获取团长
        /// </summary>
        public static CsTPacket<S2CGuildGetLeader> S2CGuildGetLeader(S2CGuildGetLeader structure)
        {
            return new CsTPacket<S2CGuildGetLeader>(CS_CMD_ID.S2C_CMD_GUILD_GETLEADER, structure);
        }

        /// <summary>
        /// 获取自己
        /// </summary>
        public static CsTPacket<S2CGuildGetSelf> S2CGuildGetSelf(S2CGuildGetSelf structure)
        {
            return new CsTPacket<S2CGuildGetSelf>(CS_CMD_ID.S2C_CMD_GUILD_GETSELF, structure);
        }

        /// <summary>
        /// 获取自己
        /// </summary>
        public static CsTPacket<S2CGetGuilderDetail> S2CGetGuilderDetail(S2CGetGuilderDetail structure)
        {
            return new CsTPacket<S2CGetGuilderDetail>(CS_CMD_ID.S2C_CMD_GUILD_GETGUILDERDETAIL, structure);
        }

        /// <summary>
        /// 清理自己
        /// </summary>
        public static CsTPacket<S2CClearGuilderDetail> S2CClearGuilderDetail(S2CClearGuilderDetail structure)
        {
            return new CsTPacket<S2CClearGuilderDetail>(CS_CMD_ID.S2C_CMD_GUILD_CLEARGUILDERDETAIL, structure);
        }

        /// <summary>
        /// 获取猎团团员
        /// </summary>
        public static CsTPacket<S2CGetGuilder> S2CGetGuilder(S2CGetGuilder structure)
        {
            return new CsTPacket<S2CGetGuilder>(CS_CMD_ID.S2C_CMD_GUILD_GETGUILDER, structure);
        }

        /// <summary>
        /// 获取猎团团员集
        /// </summary>
        public static CsTPacket<S2CGetGuildersCount> S2CGetGuildersCount(S2CGetGuildersCount structure)
        {
            return new CsTPacket<S2CGetGuildersCount>(CS_CMD_ID.S2C_CMD_GUILD_GETGUILDERSCOUNT, structure);
        }

        /// <summary>
        /// 获取猎团团员集
        /// </summary>
        public static CsTPacket<S2CGetGuilders> S2CGetGuilders(S2CGetGuilders structure)
        {
            return new CsTPacket<S2CGetGuilders>(CS_CMD_ID.S2C_CMD_GUILD_GETGUILDERS, structure);
        }

        /// <summary>
        /// 重置猎团任务
        /// </summary>
        public static CsTPacket<S2CResetGuildTask> S2CResetGuildTask(S2CResetGuildTask structure)
        {
            return new CsTPacket<S2CResetGuildTask>(CS_CMD_ID.S2C_CMD_GUILD_RESETTASK, structure);
        }

        /// <summary>
        /// 刷新猎团任务
        /// </summary>
        public static CsTPacket<S2CRefreshGuildTask> S2CRefreshGuildTask(S2CRefreshGuildTask structure)
        {
            return new CsTPacket<S2CRefreshGuildTask>(CS_CMD_ID.S2C_CMD_GUILD_REFRESHTASK, structure);
        }

        /// <summary>
        /// 接取猎团任务
        /// </summary>
        public static CsTPacket<S2CAcceptGuildTasks> S2CAcceptGuildTasks(S2CAcceptGuildTasks structure)
        {
            return new CsTPacket<S2CAcceptGuildTasks>(CS_CMD_ID.S2C_CMD_GUILD_ACCEPTTASKS, structure);
        }

        /// <summary>
        /// 完成猎团任务
        /// </summary>
        public static CsTPacket<S2CSubmitGuildTask> S2CSubmitGuildTask(S2CSubmitGuildTask structure)
        {
            return new CsTPacket<S2CSubmitGuildTask>(CS_CMD_ID.S2C_CMD_GUILD_SUBMITTASK, structure);
        }

        /// <summary>
        /// 猎团任务执行
        /// </summary>
        public static CsTPacket<S2CExecGuildTask> S2CExecGuildTask(S2CExecGuildTask structure)
        {
            return new CsTPacket<S2CExecGuildTask>(CS_CMD_ID.S2C_CMD_GUILD_EXECTASK, structure);
        }

        /// <summary>
        /// 获取猎团任务
        /// </summary>
        public static CsTPacket<S2CGetGuildTasks> S2CGetGuildTasks(S2CGetGuildTasks structure)
        {
            return new CsTPacket<S2CGetGuildTasks>(CS_CMD_ID.S2C_CMD_GUILD_GETTASKS, structure);
        }

        /// <summary>
        /// 获取猎团技能
        /// </summary>
        public static CsTPacket<S2CGetGuildLearnedSkills> S2CGetGuildLearnedSkills(S2CGetGuildLearnedSkills structure)
        {
            return new CsTPacket<S2CGetGuildLearnedSkills>(CS_CMD_ID.S2C_CMD_GUILD_GETLEARNEDSKILLS, structure);
        }

        /// <summary>
        /// 获取未被学习的猎团技能
        /// </summary>
        public static CsTPacket<S2CGetGuildCandidateSkills> S2CGetGuildCandidateSkills(
            S2CGetGuildCandidateSkills structure)
        {
            return new CsTPacket<S2CGetGuildCandidateSkills>(CS_CMD_ID.S2C_CMD_GUILD_GETCANDIDATESKILLS, structure);
        }

        /// <summary>
        /// 通知添加物品
        /// </summary>
        public static CsTPacket<S2CGuildAddItemNtf> S2CGuildAddItemNtf(S2CGuildAddItemNtf structure)
        {
            return new CsTPacket<S2CGuildAddItemNtf>(CS_CMD_ID.S2C_CMD_GUILD_ADD_ITEM_NTF, structure);
        }

        /// <summary>
        /// 通知更新物品
        /// </summary>
        public static CsTPacket<S2CGuildUpdateItemNtf> S2CGuildUpdateItemNtf(S2CGuildUpdateItemNtf structure)
        {
            return new CsTPacket<S2CGuildUpdateItemNtf>(CS_CMD_ID.S2C_CMD_GUILD_UPDATE_ITEM_NTF, structure);
        }

        /// <summary>
        /// 通知删除物品
        /// </summary>
        public static CsTPacket<S2CGuildDelItemNtf> S2CGuildDelItemNtf(S2CGuildDelItemNtf structure)
        {
            return new CsTPacket<S2CGuildDelItemNtf>(CS_CMD_ID.S2C_CMD_GUILD_DEL_ITEM_NTF, structure);
        }

        /// <summary>
        /// 移动物品
        /// </summary>
        public static CsTPacket<S2CGuildMoveItemNtf> S2CGuildMoveItemNtf(S2CGuildMoveItemNtf structure)
        {
            return new CsTPacket<S2CGuildMoveItemNtf>(CS_CMD_ID.S2C_CMD_GUILD_MOVE_ITEM_NTF, structure);
        }

        /// <summary>
        /// 交换物品
        /// </summary>
        public static CsTPacket<S2CGuildSwapItemNtf> S2CGuildSwapItemNtf(S2CGuildSwapItemNtf structure)
        {
            return new CsTPacket<S2CGuildSwapItemNtf>(CS_CMD_ID.S2C_CMD_GUILD_SWAP_ITEM_NTF, structure);
        }

        /// <summary>
        /// 整理物品
        /// </summary>
        public static CsTPacket<S2CGuildSortItemNtf> S2CGuildSortItemNtf(S2CGuildSortItemNtf structure)
        {
            return new CsTPacket<S2CGuildSortItemNtf>(CS_CMD_ID.S2C_CMD_GUILD_SORT_ITEM_NTF, structure);
        }

        /// <summary>
        /// 获取猎团仓库
        /// </summary>
        public static CsTPacket<S2CGuildGetDepot> S2CGuildGetDepot(S2CGuildGetDepot structure)
        {
            return new CsTPacket<S2CGuildGetDepot>(CS_CMD_ID.S2C_CMD_GUILD_GETDEPOT, structure);
        }

        /// <summary>
        /// 获取猎团限购商品集
        /// </summary>
        public static CsTPacket<S2CGetGuildRandCommodities> S2CGetGuildRandCommodities(
            S2CGetGuildRandCommodities structure)
        {
            return new CsTPacket<S2CGetGuildRandCommodities>(CS_CMD_ID.S2C_CMD_GUILD_GETRANDCOMMODITIES, structure);
        }

        /// <summary>
        /// 获取QUEST
        /// </summary>
        public static CsTPacket<S2CGetGuildQuest> S2CGetGuildQuest(S2CGetGuildQuest structure)
        {
            return new CsTPacket<S2CGetGuildQuest>(CS_CMD_ID.S2C_CMD_GUILD_GETQUEST, structure);
        }

        /// <summary>
        /// 查询猎团
        /// </summary>
        public static CsTPacket<S2CGuildQueryGuild> S2CGuildQueryGuild(S2CGuildQueryGuild structure)
        {
            return new CsTPacket<S2CGuildQueryGuild>(CS_CMD_ID.S2C_CMD_GUILD_QUERYGUILD, structure);
        }

        /// <summary>
        /// 猎团营地操作请求
        /// </summary>
        public static CsTPacket<CSGuildCampOperationReq> GuildCampOperationReq(CSGuildCampOperationReq structure)
        {
            return new CsTPacket<CSGuildCampOperationReq>(CS_CMD_ID.CS_CMD_GUILDCAMP_OPERATION_REQ, structure);
        }

        /// <summary>
        /// 猎团营地操作响应
        /// </summary>
        public static CsTPacket<CSGuildCampOperationRsp> GuildCampOperationRsp(CSGuildCampOperationRsp structure)
        {
            return new CsTPacket<CSGuildCampOperationRsp>(CS_CMD_ID.CS_CMD_GUILDCAMP_OPERATION_RSP, structure);
        }

        /// <summary>
        /// 禁言猎团成员请求
        /// </summary>
        public static CsTPacket<CSGuildBanGuilderReq> GuildBanGuilderReq(CSGuildBanGuilderReq structure)
        {
            return new CsTPacket<CSGuildBanGuilderReq>(CS_CMD_ID.CS_CMD_GUILDBANGUILDER_REQ, structure);
        }

        /// <summary>
        /// 猎团战选择商船请求
        /// </summary>
        public static CsTPacket<CSGuildSelectComerceBoatReq> GuildSelectComerceBoatReq(
            CSGuildSelectComerceBoatReq structure)
        {
            return new CsTPacket<CSGuildSelectComerceBoatReq>(CS_CMD_ID.CS_CMD_GUILD_SELECT_COMERCE_BOAT_REQ,
                structure);
        }

        /// <summary>
        /// 猎团战选择商船响应
        /// </summary>
        public static CsTPacket<CSGuildSelectComerceBoatRsp> GuildSelectComerceBoatRsp(
            CSGuildSelectComerceBoatRsp structure)
        {
            return new CsTPacket<CSGuildSelectComerceBoatRsp>(CS_CMD_ID.CS_CMD_GUILD_SELECT_COMERCE_BOAT_RSP,
                structure);
        }

        /// <summary>
        /// 猎团战获取猎团情报请求
        /// </summary>
        public static CsTPacket<CSGuildGetGuildStatusReq> GuildGetGuildStatusReq(CSGuildGetGuildStatusReq structure)
        {
            return new CsTPacket<CSGuildGetGuildStatusReq>(CS_CMD_ID.CS_CMD_GUILD_GET_GUILD_STATUS_REQ, structure);
        }

        /// <summary>
        /// 猎团战获取猎团情报响应
        /// </summary>
        public static CsTPacket<CSGuildGetGuildStatusRsp> GuildGetGuildStatusRsp(CSGuildGetGuildStatusRsp structure)
        {
            return new CsTPacket<CSGuildGetGuildStatusRsp>(CS_CMD_ID.CS_CMD_GUILD_GET_GUILD_STATUS_RSP, structure);
        }

        /// <summary>
        /// 猎团战开船请求
        /// </summary>
        public static CsTPacket<CSGuildStartBoatReq> GuildStartBoatReq(CSGuildStartBoatReq structure)
        {
            return new CsTPacket<CSGuildStartBoatReq>(CS_CMD_ID.CS_CMD_GUILD_START_BOAT_REQ, structure);
        }

        /// <summary>
        /// 猎团战开船响应
        /// </summary>
        public static CsTPacket<CSGuildStartBoatRsp> GuildStartBoatRsp(CSGuildStartBoatRsp structure)
        {
            return new CsTPacket<CSGuildStartBoatRsp>(CS_CMD_ID.CS_CMD_GUILD_START_BOAT_RSP, structure);
        }

        /// <summary>
        /// 猎团战获取商船情报请求
        /// </summary>
        public static CsTPacket<CSGuildGetCommerceBoatStatusReq> GuildGetCommerceBoatStatusReq(
            CSGuildGetCommerceBoatStatusReq structure)
        {
            return new CsTPacket<CSGuildGetCommerceBoatStatusReq>(CS_CMD_ID.CS_CMD_GUILD_GET_COMERCE_BOAT_STATUS_REQ,
                structure);
        }

        /// <summary>
        /// 猎团战获取商船情报响应
        /// </summary>
        public static CsTPacket<CSGuildGetCommerceBoatStatusRsp> GuildGetCommerceBoatStatusRsp(
            CSGuildGetCommerceBoatStatusRsp structure)
        {
            return new CsTPacket<CSGuildGetCommerceBoatStatusRsp>(CS_CMD_ID.CS_CMD_GUILD_GET_COMERCE_BOAT_STATUS_RSP,
                structure);
        }

        /// <summary>
        /// 猎团战商船信息变化通知
        /// </summary>
        public static CsTPacket<CSGuildCommerceBoatStatusNtf> GuildCommerceBoatStatusNtf(
            CSGuildCommerceBoatStatusNtf structure)
        {
            return new CsTPacket<CSGuildCommerceBoatStatusNtf>(CS_CMD_ID.CS_CMD_GUILD_COMERCE_BOAT_STATUS_NTF,
                structure);
        }

        /// <summary>
        /// 猎团战购买抢夺次数
        /// </summary>
        public static CsTPacket<CSGuildWarBuyGrabTimesReq> GuildWarBuyGrabTimesReq(CSGuildWarBuyGrabTimesReq structure)
        {
            return new CsTPacket<CSGuildWarBuyGrabTimesReq>(CS_CMD_ID.CS_CMD_GUILD_BUY_GRAB_TIMES_REQ, structure);
        }

        /// <summary>
        /// 获取所有的商会请求
        /// </summary>
        public static CsTPacket<CSGuildWarGetAllCommerceReq> GuildWarGetAllCommerceReq(
            CSGuildWarGetAllCommerceReq structure)
        {
            return new CsTPacket<CSGuildWarGetAllCommerceReq>(CS_CMD_ID.CS_CMD_GUILD_GET_ALL_COMMERCE_REQ, structure);
        }

        /// <summary>
        /// 获取所有的商会响应
        /// </summary>
        public static CsTPacket<CSGuildWarGetAllCommerceRsp> GuildWarGetAllCommerceRsp(
            CSGuildWarGetAllCommerceRsp structure)
        {
            return new CsTPacket<CSGuildWarGetAllCommerceRsp>(CS_CMD_ID.CS_CMD_GUILD_GET_ALL_COMMERCE_RSP, structure);
        }

        /// <summary>
        /// 获取猎团商船信息请求
        /// </summary>
        public static CsTPacket<CSGuildWarGetGuildBoatsReq> GuildWarGetGuildBoatsReq(
            CSGuildWarGetGuildBoatsReq structure)
        {
            return new CsTPacket<CSGuildWarGetGuildBoatsReq>(CS_CMD_ID.CS_CMD_GUILD_GET_GUILD_BOATS_REQ, structure);
        }

        /// <summary>
        /// 获取猎团商船信息响应
        /// </summary>
        public static CsTPacket<CSGuildWarGetGuildBoatsRsp> GuildWarGetGuildBoatsRsp(
            CSGuildWarGetGuildBoatsRsp structure)
        {
            return new CsTPacket<CSGuildWarGetGuildBoatsRsp>(CS_CMD_ID.CS_CMD_GUILD_GET_GUILD_BOATS_RSP, structure);
        }

        /// <summary>
        /// 抢夺商船确认请求
        /// </summary>
        public static CsTPacket<CSGuildWarGrabBoatReq> GuildWarGrabBoatReq(CSGuildWarGrabBoatReq structure)
        {
            return new CsTPacket<CSGuildWarGrabBoatReq>(CS_CMD_ID.CS_CMD_GUILD_GRAB_BOAT_REQ, structure);
        }

        /// <summary>
        /// 抢夺商船确认响应
        /// </summary>
        public static CsTPacket<CSGuildWarGrabBoatRsp> GuildWarGrabBoatRsp(CSGuildWarGrabBoatRsp structure)
        {
            return new CsTPacket<CSGuildWarGrabBoatRsp>(CS_CMD_ID.CS_CMD_GUILD_GRAB_BOAT_RSP, structure);
        }

        /// <summary>
        /// 猎团战猎团商会物资变更通知
        /// </summary>
        public static CsTPacket<CSGuildWarGuildCommerceNtf> GuildWarGuildCommerceNtf(
            CSGuildWarGuildCommerceNtf structure)
        {
            return new CsTPacket<CSGuildWarGuildCommerceNtf>(CS_CMD_ID.CS_CMD_GUILD_COMMERCE_CHANGE_NTF, structure);
        }

        /// <summary>
        /// 获取猎团信息只有猎团id 猎团名字 请求
        /// </summary>
        public static CsTPacket<CSGuildWarSimpleGuildInfoReq> GuildWarSimpleGuildInfoReq(
            CSGuildWarSimpleGuildInfoReq structure)
        {
            return new CsTPacket<CSGuildWarSimpleGuildInfoReq>(CS_CMD_ID.CS_CMD_GUILD_GET_GUILD_SIMPLE_INFO_REQ,
                structure);
        }

        /// <summary>
        /// 获取猎团信息只有猎团id 猎团名字 响应
        /// </summary>
        public static CsTPacket<CSGuildWarSimpleGuildInfoRsp> GuildWarSimpleGuildInfoRsp(
            CSGuildWarSimpleGuildInfoRsp structure)
        {
            return new CsTPacket<CSGuildWarSimpleGuildInfoRsp>(CS_CMD_ID.CS_CMD_GUILD_GET_GUILD_SIMPLE_INFO_RSP,
                structure);
        }

        /// <summary>
        /// 获取猎团商会buff 请求
        /// </summary>
        public static CsTPacket<CSGuildWarGetCommerceBuffReq> GuildWarGetCommerceBuffReq(
            CSGuildWarGetCommerceBuffReq structure)
        {
            return new CsTPacket<CSGuildWarGetCommerceBuffReq>(CS_CMD_ID.CS_CMD_GUILD_GET_COMMERCE_BUFF_REQ, structure);
        }

        /// <summary>
        /// 获取猎团商会buff 响应
        /// </summary>
        public static CsTPacket<CSGuildWarGetCommerceBuffRsp> GuildWarGetCommerceBuffRsp(
            CSGuildWarGetCommerceBuffRsp structure)
        {
            return new CsTPacket<CSGuildWarGetCommerceBuffRsp>(CS_CMD_ID.CS_CMD_GUILD_GET_COMMERCE_BUFF_RSP, structure);
        }

        /// <summary>
        /// 猎团请求执行记录
        /// </summary>
        public static CsTPacket<CSGuildFuncRecordReq> GuildFuncRecordReq(CSGuildFuncRecordReq structure)
        {
            return new CsTPacket<CSGuildFuncRecordReq>(CS_CMD_ID.CS_CMD_GUILD_FUNC_RECORD_REQ, structure);
        }

        /// <summary>
        /// 猎团请求操作记录返回
        /// </summary>
        public static CsTPacket<SCGuildFuncRecordRes> GuildFuncRecordRes(SCGuildFuncRecordRes structure)
        {
            return new CsTPacket<SCGuildFuncRecordRes>(CS_CMD_ID.CS_CMD_GUILD_FUNC_RECORD_RES, structure);
        }

        /// <summary>
        /// 猎团请求仓库记录
        /// </summary>
        public static CsTPacket<CSGuildBuyRecordReq> GuildBuyRecordReq(CSGuildBuyRecordReq structure)
        {
            return new CsTPacket<CSGuildBuyRecordReq>(CS_CMD_ID.CS_CMD_GUILD_BUY_RECORD_REQ, structure);
        }

        /// <summary>
        /// 猎团请求仓库记录返回
        /// </summary>
        public static CsTPacket<SCGuildBuyRecordRes> GuildBuyRecordRes(SCGuildBuyRecordRes structure)
        {
            return new CsTPacket<SCGuildBuyRecordRes>(CS_CMD_ID.CS_CMD_GUILD_BUY_RECORD_RES, structure);
        }

        /// <summary>
        /// 同步猎团战侦查信息
        /// </summary>
        public static CsTPacket<SCGuildWarInformationNtf> GuildWarInformationNtf(SCGuildWarInformationNtf structure)
        {
            return new CsTPacket<SCGuildWarInformationNtf>(CS_CMD_ID.CS_CMD_GUILD_WAR_INFORMATION_NTF, structure);
        }

        /// <summary>
        /// 设置同步的猎团信息请求
        /// </summary>
        public static CsTPacket<CSGuildWarSetViewGuildReq> GuildWarSetViewGuildReq(CSGuildWarSetViewGuildReq structure)
        {
            return new CsTPacket<CSGuildWarSetViewGuildReq>(CS_CMD_ID.CS_CMD_GUILD_WAR_SET_VIEW_GUILD_REQ, structure);
        }

        /// <summary>
        /// 设置同步的猎团信息响应
        /// </summary>
        public static CsTPacket<SCGuildWarSetViewGuildRsp> GuildWarSetViewGuildRsp(SCGuildWarSetViewGuildRsp structure)
        {
            return new CsTPacket<SCGuildWarSetViewGuildRsp>(CS_CMD_ID.CS_CMD_GUILD_WAR_SET_VIEW_GUILD_RSP, structure);
        }

        /// <summary>
        /// 同步猎团战所有侦查信息
        /// </summary>
        public static CsTPacket<SCGuildWarAllInformationNtf> GuildWarAllInformationNtf(
            SCGuildWarAllInformationNtf structure)
        {
            return new CsTPacket<SCGuildWarAllInformationNtf>(CS_CMD_ID.CS_CMD_GUILD_WAR_ALL_INFORMATION_NTF,
                structure);
        }

        /// <summary>
        /// NPC组好感度数值更新通知
        /// </summary>
        public static CsTPacket<CSNpcAtdValueInfoNtf> NpcAtdValueInfoNtf(CSNpcAtdValueInfoNtf structure)
        {
            return new CsTPacket<CSNpcAtdValueInfoNtf>(CS_CMD_ID.CS_CMD_NPCATD_VALUE_UPDATE_NTF, structure);
        }

        /// <summary>
        /// NPC组好感度错误码
        /// </summary>
        public static CsTPacket<CSNpcAtdErr> NpcAtdErr(CSNpcAtdErr structure)
        {
            return new CsTPacket<CSNpcAtdErr>(CS_CMD_ID.CS_CMD_NPCATD_ERR, structure);
        }

        /// <summary>
        /// NPC组好感度送礼物请求
        /// </summary>
        public static CsTPacket<CSNpcAtdGiveGiftReq> NpcAtdGiveGiftReq(CSNpcAtdGiveGiftReq structure)
        {
            return new CsTPacket<CSNpcAtdGiveGiftReq>(CS_CMD_ID.CS_CMD_NPCATD_GIVE_GIFT_REQ, structure);
        }

        /// <summary>
        /// NPC组好感度送礼物响应
        /// </summary>
        public static CsTPacket<CSNpcAtdGiveGiftRsp> NpcAtdGiveGiftRsp(CSNpcAtdGiveGiftRsp structure)
        {
            return new CsTPacket<CSNpcAtdGiveGiftRsp>(CS_CMD_ID.CS_CMD_NPCATD_GIVE_GIFT_RSP, structure);
        }

        /// <summary>
        /// NPC组好感度触发器通知
        /// </summary>
        public static CsTPacket<CSNpcAtdTriggerNtf> NpcAtdTriggerNtf(CSNpcAtdTriggerNtf structure)
        {
            return new CsTPacket<CSNpcAtdTriggerNtf>(CS_CMD_ID.CS_CMD_NPCATD_TRIGGER_NTF, structure);
        }

        /// <summary>
        /// 猫饭制作请求
        /// </summary>
        public static CsTPacket<CSCatCuisineMakeReq> CatCuisineMakeReq(CSCatCuisineMakeReq structure)
        {
            return new CsTPacket<CSCatCuisineMakeReq>(CS_CMD_ID.CS_CMD_CATCUISINE_MAKE_REQ, structure);
        }

        /// <summary>
        /// 猫饭制作返回
        /// </summary>
        public static CsTPacket<CSCatCuisineMakeRsp> CatCuisineMakeRsp(CSCatCuisineMakeRsp structure)
        {
            return new CsTPacket<CSCatCuisineMakeRsp>(CS_CMD_ID.CS_CMD_CATCUISINE_MAKE_RSP, structure);
        }

        /// <summary>
        /// 猫饭剩余数量和效果通知
        /// </summary>
        public static CsTPacket<CSCatCuisineRemainsNtf> CatCuisineRemainsNtf(CSCatCuisineRemainsNtf structure)
        {
            return new CsTPacket<CSCatCuisineRemainsNtf>(CS_CMD_ID.CS_CMD_CATCUISINE_REMAINS_NTF, structure);
        }

        /// <summary>
        /// 猫饭解锁通知
        /// </summary>
        public static CsTPacket<CSCatCuisineUnlockNtf> CatCuisineUnlockNtf(CSCatCuisineUnlockNtf structure)
        {
            return new CsTPacket<CSCatCuisineUnlockNtf>(CS_CMD_ID.CS_CMD_CATCUISINE_UNLOCK_NTF, structure);
        }

        /// <summary>
        /// 猫饭解锁状态变更请求
        /// </summary>
        public static CsTPacket<CSCatCuisineUnlockStateChangeReq> CatCuisineUnlockStateChangeReq(
            CSCatCuisineUnlockStateChangeReq structure)
        {
            return new CsTPacket<CSCatCuisineUnlockStateChangeReq>(CS_CMD_ID.CS_CMD_CATCUISINE_UNLOCK_CHANGE_STATE_REQ,
                structure);
        }

        /// <summary>
        /// 猫饭解锁状态变更回复
        /// </summary>
        public static CsTPacket<CSCatCuisineUnlockStateChangeRsp> CatCuisineUnlockStateChangeRsp(
            CSCatCuisineUnlockStateChangeRsp structure)
        {
            return new CsTPacket<CSCatCuisineUnlockStateChangeRsp>(CS_CMD_ID.CS_CMD_CATCUISINE_UNLOCK_CHANGE_STATE_RSP,
                structure);
        }

        /// <summary>
        /// 对话执行
        /// </summary>
        public static CsTPacket<C2STalkExec> C2STalkExec(C2STalkExec structure)
        {
            return new CsTPacket<C2STalkExec>(CS_CMD_ID.C2S_CMD_TALK_EXEC, structure);
        }

        /// <summary>
        /// 对话结束
        /// </summary>
        public static CsTPacket<C2STalkEnd> C2STalkEnd(C2STalkEnd structure)
        {
            return new CsTPacket<C2STalkEnd>(CS_CMD_ID.C2S_CMD_TALK_END, structure);
        }

        /// <summary>
        /// 对话错误
        /// </summary>
        public static CsTPacket<S2CTalkErr> S2CTalkErr(S2CTalkErr structure)
        {
            return new CsTPacket<S2CTalkErr>(CS_CMD_ID.S2C_CMD_TALK_ERR, structure);
        }

        /// <summary>
        /// 对话执行
        /// </summary>
        public static CsTPacket<S2CTalkExec> S2CTalkExec(S2CTalkExec structure)
        {
            return new CsTPacket<S2CTalkExec>(CS_CMD_ID.S2C_CMD_TALK_EXEC, structure);
        }

        /// <summary>
        /// 做动作请求
        /// </summary>
        public static CsTPacket<CSSocialActionReq> SocialActionReq(CSSocialActionReq structure)
        {
            return new CsTPacket<CSSocialActionReq>(CS_CMD_ID.CS_CMD_SOCIAL_ACTION_REQ, structure);
        }

        /// <summary>
        /// 做动作通知
        /// </summary>
        public static CsTPacket<CSSocialActionNtf> SocialActionNtf(CSSocialActionNtf structure)
        {
            return new CsTPacket<CSSocialActionNtf>(CS_CMD_ID.CS_CMD_SOCIAL_ACTION_NTF, structure);
        }

        /// <summary>
        /// 礼包领取请求
        /// </summary>
        public static CsTPacket<CSGiftBagFetchReq> GiftBagFetchReq(CSGiftBagFetchReq structure)
        {
            return new CsTPacket<CSGiftBagFetchReq>(CS_CMD_ID.CS_CMD_GIFTBAG_FETCH_REQ, structure);
        }

        /// <summary>
        /// 礼包领取响应
        /// </summary>
        public static CsTPacket<CSGiftBagFetchRsp> GiftBagFetchRsp(CSGiftBagFetchRsp structure)
        {
            return new CsTPacket<CSGiftBagFetchRsp>(CS_CMD_ID.CS_CMD_GIFTBAG_FETCH_RSP, structure);
        }

        /// <summary>
        /// 礼包激活通知
        /// </summary>
        public static CsTPacket<CSGiftBagActivateNtf> GiftBagActivateNtf(CSGiftBagActivateNtf structure)
        {
            return new CsTPacket<CSGiftBagActivateNtf>(CS_CMD_ID.CS_CMD_GIFTBAG_ACTIVATE_NTF, structure);
        }

        /// <summary>
        /// 礼包组状态通知
        /// </summary>
        public static CsTPacket<CSGiftBagGroupStateNtf> GiftBagGroupStateNtf(CSGiftBagGroupStateNtf structure)
        {
            return new CsTPacket<CSGiftBagGroupStateNtf>(CS_CMD_ID.CS_CMD_GIFTBAGGROUP_STATE_NTF, structure);
        }

        /// <summary>
        /// 错误
        /// </summary>
        public static CsTPacket<CSGiftBagErr> GiftBagErr(CSGiftBagErr structure)
        {
            return new CsTPacket<CSGiftBagErr>(CS_CMD_ID.CS_CMD_GIFTBAG_ERR, structure);
        }

        /// <summary>
        /// 礼包状态通知
        /// </summary>
        public static CsTPacket<CSGiftBagStateNtf> GiftBagStateNtf(CSGiftBagStateNtf structure)
        {
            return new CsTPacket<CSGiftBagStateNtf>(CS_CMD_ID.CS_CMD_GIFTBAG_STATE_NTF, structure);
        }

        /// <summary>
        /// 礼包参数集通知
        /// </summary>
        public static CsTPacket<CSGiftBagAttrNtf> GiftBagAttrNtf(CSGiftBagAttrNtf structure)
        {
            return new CsTPacket<CSGiftBagAttrNtf>(CS_CMD_ID.CS_CMD_GIFTBAG_ATTR_NTF, structure);
        }

        /// <summary>
        /// 礼包刷新通知
        /// </summary>
        public static CsTPacket<CSGiftBagDailyRefreshNtf> GiftBagDailyRefreshNtf(CSGiftBagDailyRefreshNtf structure)
        {
            return new CsTPacket<CSGiftBagDailyRefreshNtf>(CS_CMD_ID.CS_CMD_GIFTBAG_DAILYREFRESH_NTF, structure);
        }

        /// <summary>
        /// 礼包组状态请求
        /// </summary>
        public static CsTPacket<CSGiftBagGroupStateReq> GiftBagGroupStateReq(CSGiftBagGroupStateReq structure)
        {
            return new CsTPacket<CSGiftBagGroupStateReq>(CS_CMD_ID.CS_CMD_GIFTBAGGROUP_STATE_REQ, structure);
        }

        /// <summary>
        /// 怪物移动碰撞同步
        /// </summary>
        public static CsTPacket<CSEnableCollisionSYNC> EnableCollisionSync(CSEnableCollisionSYNC structure)
        {
            return new CsTPacket<CSEnableCollisionSYNC>(CS_CMD_ID.CS_CMD_ENABLE_COLLISIONWITHLIVING_REQ, structure);
        }

        /// <summary>
        /// 怪物霸体同步
        /// </summary>
        public static CsTPacket<CSInvulnerabilitySYNC> InvulnerabilitySync(CSInvulnerabilitySYNC structure)
        {
            return new CsTPacket<CSInvulnerabilitySYNC>(CS_CMD_ID.CS_CMD_ENABLE_INVULNERABILITY_REQ, structure);
        }

        /// <summary>
        /// 怪物骨骼受击同步
        /// </summary>
        public static CsTPacket<CSEnableSkeletonPhysPartSYNC> EnableSkeletonPhysPartSync(
            CSEnableSkeletonPhysPartSYNC structure)
        {
            return new CsTPacket<CSEnableSkeletonPhysPartSYNC>(CS_CMD_ID.CS_CMD_ENABLE_SKELETONPHYSPART_REQ, structure);
        }

        /// <summary>
        /// 怪物移动碰撞同步
        /// </summary>
        public static CsTPacket<CSEnableDamageCollisionSYNC> EnableDamageCollisionSync(
            CSEnableDamageCollisionSYNC structure)
        {
            return new CsTPacket<CSEnableDamageCollisionSYNC>(CS_CMD_ID.CS_CMD_ENABLE_DAMAGECOLLISION_REQ, structure);
        }

        /// <summary>
        /// 战斗NPC之间移动碰撞同步
        /// </summary>
        public static CsTPacket<CSEnableCombatNPCMovColSYNC> EnableCombatNPCMovColSync(
            CSEnableCombatNPCMovColSYNC structure)
        {
            return new CsTPacket<CSEnableCombatNPCMovColSYNC>(CS_CMD_ID.CS_CMD_ENABLE_COMBATNPCMOVCOL_REQ, structure);
        }

        /// <summary>
        /// 领取奖励
        /// </summary>
        public static CsTPacket<C2SActivityFetchAward> C2SActivityFetchAward(C2SActivityFetchAward structure)
        {
            return new CsTPacket<C2SActivityFetchAward>(CS_CMD_ID.C2S_CMD_ACTIVITY_FETCH_AWARD, structure);
        }

        /// <summary>
        /// 狂猎祭报名
        /// </summary>
        public static CsTPacket<C2SActivityWildHuntApply> C2SActivityWildHuntApply(C2SActivityWildHuntApply structure)
        {
            return new CsTPacket<C2SActivityWildHuntApply>(CS_CMD_ID.C2S_CMD_ACTIVITY_WILDHUNTAPPLY, structure);
        }

        /// <summary>
        /// 红黄对抗请求secretquest
        /// </summary>
        public static CsTPacket<C2SActivityGetSecretQuest> C2SActivityGetSecretQuest(
            C2SActivityGetSecretQuest structure)
        {
            return new CsTPacket<C2SActivityGetSecretQuest>(CS_CMD_ID.C2S_CMD_ACTIVITY_ADDSECRETQUEST, structure);
        }

        /// <summary>
        /// 红黄对抗重置任务
        /// </summary>
        public static CsTPacket<C2SActivityResetWildHuntTasks> C2SActivityResetWildHuntTasks(
            C2SActivityResetWildHuntTasks structure)
        {
            return new CsTPacket<C2SActivityResetWildHuntTasks>(CS_CMD_ID.C2S_CMD_ACTIVITY_RESETWILDHUNTTASKS,
                structure);
        }

        /// <summary>
        /// 大富翁掷骰子
        /// </summary>
        public static CsTPacket<C2SActivityMonolopyDice> C2SActivityMonolopyDice(C2SActivityMonolopyDice structure)
        {
            return new CsTPacket<C2SActivityMonolopyDice>(CS_CMD_ID.C2S_CMD_ACTIVITY_MONOLOPY_DICE, structure);
        }

        /// <summary>
        /// 大富翁遥控骰子
        /// </summary>
        public static CsTPacket<C2SActivityMonolopyFixedDice> C2SActivityMonolopyFixedDice(
            C2SActivityMonolopyFixedDice structure)
        {
            return new CsTPacket<C2SActivityMonolopyFixedDice>(CS_CMD_ID.C2S_CMD_ACTIVITY_MONOLOPY_FIXEDDICE,
                structure);
        }

        /// <summary>
        /// 支付路障
        /// </summary>
        public static CsTPacket<C2SActivityMonolopyPayForBlock> C2SActivityMonolopyPayForBlock(
            C2SActivityMonolopyPayForBlock structure)
        {
            return new CsTPacket<C2SActivityMonolopyPayForBlock>(CS_CMD_ID.C2S_CMD_ACTIVITY_MONOLOPY_PAYFORBLOCK,
                structure);
        }

        /// <summary>
        /// 狂猎祭领取额外的任务完成次数
        /// </summary>
        public static CsTPacket<C2SActivityWildFetchTaskCount> C2SActivityWildFetchTaskCount(
            C2SActivityWildFetchTaskCount structure)
        {
            return new CsTPacket<C2SActivityWildFetchTaskCount>(CS_CMD_ID.C2S_CMD_ACTIVITY_WILDHUNT_FETCHTASKCOUNT,
                structure);
        }

        /// <summary>
        /// 活动状态通知
        /// </summary>
        public static CsTPacket<CSActivityStateUpdateNtf> ActivityStateUpdateNtf(CSActivityStateUpdateNtf structure)
        {
            return new CsTPacket<CSActivityStateUpdateNtf>(CS_CMD_ID.CS_CMD_ACTIVITY_STATE_UPDATE_NTF, structure);
        }

        /// <summary>
        /// 在线随机抽奖活动中奖通知
        /// </summary>
        public static CsTPacket<CSLotteryWinnersNtf> LotteryWinnersNtf(CSLotteryWinnersNtf structure)
        {
            return new CsTPacket<CSLotteryWinnersNtf>(CS_CMD_ID.CS_CMD_ACTIVITY_LOTTERY_WINNERS_NTF, structure);
        }

        /// <summary>
        /// 领取奖励
        /// </summary>
        public static CsTPacket<S2CActivityFetchAward> S2CActivityFetchAward(S2CActivityFetchAward structure)
        {
            return new CsTPacket<S2CActivityFetchAward>(CS_CMD_ID.S2C_CMD_ACTIVITY_FETCH_AWARD, structure);
        }

        /// <summary>
        /// 奖励同步
        /// </summary>
        public static CsTPacket<S2CActivityAwardsNtf> S2CActivityAwardsNtf(S2CActivityAwardsNtf structure)
        {
            return new CsTPacket<S2CActivityAwardsNtf>(CS_CMD_ID.S2C_CMD_ACTIVITY_AWARD_NTF, structure);
        }

        /// <summary>
        /// 活动错误
        /// </summary>
        public static CsTPacket<S2CActivityErr> S2CActivityErr(S2CActivityErr structure)
        {
            return new CsTPacket<S2CActivityErr>(CS_CMD_ID.S2C_CMD_ACTIVITY_ERR, structure);
        }

        /// <summary>
        /// 活动奖励刷新同步
        /// </summary>
        public static CsTPacket<S2CActivityAwardRefresh> S2CActivityAwardRefresh(S2CActivityAwardRefresh structure)
        {
            return new CsTPacket<S2CActivityAwardRefresh>(CS_CMD_ID.S2C_CMD_ACTIVITY_AWARD_REFRESH, structure);
        }

        /// <summary>
        /// 活动在线时长计算
        /// </summary>
        public static CsTPacket<S2CActivityAddStOnlineTime> S2CActivityAddStOnlineTime(
            S2CActivityAddStOnlineTime structure)
        {
            return new CsTPacket<S2CActivityAddStOnlineTime>(CS_CMD_ID.S2C_CMD_ACTIVITY_ADD_ONLINETIME, structure);
        }

        /// <summary>
        /// 狂猎祭报名
        /// </summary>
        public static CsTPacket<S2CActivityWildHuntApply> S2CActivityWildHuntApply(S2CActivityWildHuntApply structure)
        {
            return new CsTPacket<S2CActivityWildHuntApply>(CS_CMD_ID.S2C_CMD_ACTIVITY_WILDHUNTAPPLY, structure);
        }

        /// <summary>
        /// 请求狂猎祭详细信息
        /// </summary>
        public static CsTPacket<C2SActivityGetWildHuntDetail> C2SActivityGetWildHuntDetail(
            C2SActivityGetWildHuntDetail structure)
        {
            return new CsTPacket<C2SActivityGetWildHuntDetail>(CS_CMD_ID.C2S_CMD_ACTIVITY_GETWILDHUNT_REQ, structure);
        }

        /// <summary>
        /// 请求狂猎祭详细信息
        /// </summary>
        public static CsTPacket<S2CActivityGetWildHuntDetail> S2CActivityGetWildHuntDetail(
            S2CActivityGetWildHuntDetail structure)
        {
            return new CsTPacket<S2CActivityGetWildHuntDetail>(CS_CMD_ID.S2C_CMD_ACTIVITY_GETWILDHUNT_RSP, structure);
        }

        /// <summary>
        /// fetchproc清理
        /// </summary>
        public static CsTPacket<S2CActivityFetchProcClear> S2CActivityFetchProcClear(
            S2CActivityFetchProcClear structure)
        {
            return new CsTPacket<S2CActivityFetchProcClear>(CS_CMD_ID.S2C_CMD_ACTIVITY_FETCH_PROC_CLEAR, structure);
        }

        /// <summary>
        /// 红黄对抗添加secretquest
        /// </summary>
        public static CsTPacket<S2CActivityAddSecretQuest> S2CActivityAddSecretQuest(
            S2CActivityAddSecretQuest structure)
        {
            return new CsTPacket<S2CActivityAddSecretQuest>(CS_CMD_ID.S2C_CMD_ACTIVITY_ADDSECRETQUEST, structure);
        }

        /// <summary>
        /// 红黄对抗取消secretquest
        /// </summary>
        public static CsTPacket<S2CActivityRemoveSecretQuest> S2CActivityRemoveSecretQuest(
            S2CActivityRemoveSecretQuest structure)
        {
            return new CsTPacket<S2CActivityRemoveSecretQuest>(CS_CMD_ID.S2C_CMD_ACTIVITY_REMOVESECRETQUEST, structure);
        }

        /// <summary>
        /// 红黄对抗获得任务
        /// </summary>
        public static CsTPacket<S2CActivityGetWildHuntTasks> S2CActivityGetWildHuntTasks(
            S2CActivityGetWildHuntTasks structure)
        {
            return new CsTPacket<S2CActivityGetWildHuntTasks>(CS_CMD_ID.S2C_CMD_ACTIVITY_GETWILDHUNTTASKS, structure);
        }

        /// <summary>
        /// 红黄对抗数据清理
        /// </summary>
        public static CsTPacket<S2CActivityClearWildHunt> S2CActivityClearWildHunt(S2CActivityClearWildHunt structure)
        {
            return new CsTPacket<S2CActivityClearWildHunt>(CS_CMD_ID.S2C_CMD_ACTIVITY_CLEARWILDHUNT, structure);
        }

        /// <summary>
        /// 千层塔补给箱开启
        /// </summary>
        public static CsTPacket<CSTowerSupplyOpenNtf> TowerSupplyOpenNtf(CSTowerSupplyOpenNtf structure)
        {
            return new CsTPacket<CSTowerSupplyOpenNtf>(CS_CMD_ID.CS_CMD_TOWER_SUPPLY_OPEN_NTF, structure);
        }

        /// <summary>
        /// 千层塔补给箱玩家选择物品（双向）
        /// </summary>
        public static CsTPacket<CSTowerSupplyPlayerSelectedNtf> TowerSupplyPlayerSelectedNtf(
            CSTowerSupplyPlayerSelectedNtf structure)
        {
            return new CsTPacket<CSTowerSupplyPlayerSelectedNtf>(CS_CMD_ID.CS_CMD_TOWER_SUPPLY_PLAYER_SELECTED_NTF,
                structure);
        }

        /// <summary>
        /// 千层塔补给箱关闭
        /// </summary>
        public static CsTPacket<CSTowerSupplyCloseNtf> TowerSupplyCloseNtf(CSTowerSupplyCloseNtf structure)
        {
            return new CsTPacket<CSTowerSupplyCloseNtf>(CS_CMD_ID.CS_CMD_TOWER_SUPPLY_CLOSE_NTF, structure);
        }

        /// <summary>
        /// 个人武器试炼信息
        /// </summary>
        public static CsTPacket<S2CWeaponTrialInfo> WeaponTrialInfo(S2CWeaponTrialInfo structure)
        {
            return new CsTPacket<S2CWeaponTrialInfo>(CS_CMD_ID.SC_CMD_WEAPONTRIAL_INFO, structure);
        }



        /// <summary>
        /// 通知更新物品
        /// </summary>
        public static CsTPacket<CSItemMgrUpdateItemNtf> ItemMgrUpdateItemNtf(CSItemMgrUpdateItemNtf structure)
        {
            return new CsTPacket<CSItemMgrUpdateItemNtf>(CS_CMD_ID.CS_CMD_ITEMMGR_UPDATE_ITEM_NTF, structure);
        }

        /// <summary>
        /// 通知删除物品
        /// </summary>
        public static CsTPacket<CSItemMgrDelItemNtf> ItemMgrDelItemNtf(CSItemMgrDelItemNtf structure)
        {
            return new CsTPacket<CSItemMgrDelItemNtf>(CS_CMD_ID.CS_CMD_ITEMMGR_DEL_ITEM_NTF, structure);
        }
        

        /// <summary>
        /// 合并物品
        /// </summary>
        public static CsTPacket<CSItemMgrUnionItemReq> ItemMgrUnionItemReq(CSItemMgrUnionItemReq structure)
        {
            return new CsTPacket<CSItemMgrUnionItemReq>(CS_CMD_ID.CS_CMD_ITEMMGR_UNION_ITEM_REQ, structure);
        }

        /// <summary>
        /// 请求拆分物品
        /// </summary>
        public static CsTPacket<CSItemMgrSplitItemReq> ItemMgrSplitItemReq(CSItemMgrSplitItemReq structure)
        {
            return new CsTPacket<CSItemMgrSplitItemReq>(CS_CMD_ID.CS_CMD_ITEMMGR_SPLIT_ITEM_REQ, structure);
        }

        /// <summary>
        /// 整理物品
        /// </summary>
        public static CsTPacket<CSItemMgrSortItemReq> ItemMgrSortItemReq(CSItemMgrSortItemReq structure)
        {
            return new CsTPacket<CSItemMgrSortItemReq>(CS_CMD_ID.CS_CMD_ITEMMGR_SORT_ITEM_REQ, structure);
        }

        /// <summary>
        /// 整理物品
        /// </summary>
        public static CsTPacket<CSItemMgrSortItemNtf> ItemMgrSortItemNtf(CSItemMgrSortItemNtf structure)
        {
            return new CsTPacket<CSItemMgrSortItemNtf>(CS_CMD_ID.CS_CMD_ITEMMGR_SORT_ITEM_NTF, structure);
        }

        /// <summary>
        /// 使用物品
        /// </summary>
        public static CsTPacket<CSItemMgrUseItemReq> ItemMgrUseItemReq(CSItemMgrUseItemReq structure)
        {
            return new CsTPacket<CSItemMgrUseItemReq>(CS_CMD_ID.CS_CMD_ITEMMGR_USE_ITEM_REQ, structure);
        }

        /// <summary>
        /// 销毁物品
        /// </summary>
        public static CsTPacket<CSItemMgrDestroyItemReq> ItemMgrDestroyItemReq(CSItemMgrDestroyItemReq structure)
        {
            return new CsTPacket<CSItemMgrDestroyItemReq>(CS_CMD_ID.CS_CMD_ITEMMGR_DESTROY_ITEM_REQ, structure);
        }

        /// <summary>
        /// 销毁物品回复
        /// </summary>
        public static CsTPacket<CSItemMgrDestroyItemRsp> ItemMgrDestroyItemRsp(CSItemMgrDestroyItemRsp structure)
        {
            return new CsTPacket<CSItemMgrDestroyItemRsp>(CS_CMD_ID.CS_CMD_ITEMMGR_DESTROY_ITEM_RSP, structure);
        }

        /// <summary>
        /// 扩展格子
        /// </summary>
        public static CsTPacket<CSItemMgrExpandGridReq> ItemMgrExpandGridReq(CSItemMgrExpandGridReq structure)
        {
            return new CsTPacket<CSItemMgrExpandGridReq>(CS_CMD_ID.CS_CMD_ITEMMGR_EXPAND_GRID_REQ, structure);
        }

        /// <summary>
        /// 扩展格子
        /// </summary>
        public static CsTPacket<CSItemMgrExpandGridNtf> ItemMgrExpandGridNtf(CSItemMgrExpandGridNtf structure)
        {
            return new CsTPacket<CSItemMgrExpandGridNtf>(CS_CMD_ID.CS_CMD_ITEMMGR_EXPAND_GRID_NTF, structure);
        }
        
        /// <summary>
        /// Itembox错误
        /// </summary>
        public static CsTPacket<CSItemboxNtf> ItemboxNtf(CSItemboxNtf structure)
        {
            return new CsTPacket<CSItemboxNtf>(CS_CMD_ID.CS_CMD_ITEMBOX_NTF, structure);
        }

        /// <summary>
        /// 解锁装备方案请求
        /// </summary>
        public static CsTPacket<CSEquipPlanId> EquipPlanUnlockReq(CSEquipPlanId structure)
        {
            return new CsTPacket<CSEquipPlanId>(CS_CMD_ID.CS_CMD_EQUIPPLAN_UNLOCK_REQ, structure);
        }

        /// <summary>
        /// 解锁装备方案响应
        /// </summary>
        public static CsTPacket<CSEquipPlanId> EquipPlanUnlockNtf(CSEquipPlanId structure)
        {
            return new CsTPacket<CSEquipPlanId>(CS_CMD_ID.CS_CMD_EQUIPPLAN_UNLOCK_NTF, structure);
        }

        /// <summary>
        /// 装备方案编辑请求
        /// </summary>
        public static CsTPacket<CSEquipPlanEditReq> EquipPlanEditReq(CSEquipPlanEditReq structure)
        {
            return new CsTPacket<CSEquipPlanEditReq>(CS_CMD_ID.CS_CMD_EQUIPPLAN_EDIT_REQ, structure);
        }

        /// <summary>
        /// 装备方案编辑响应
        /// </summary>
        public static CsTPacket<CSEquipPlanEditNtf> EquipPlanEditNtf(CSEquipPlanEditNtf structure)
        {
            return new CsTPacket<CSEquipPlanEditNtf>(CS_CMD_ID.CS_CMD_EQUIPPLAN_EDIT_NTF, structure);
        }

        /// <summary>
        /// 装备方案快速替换
        /// </summary>
        public static CsTPacket<CSEquipPlan> EquipPlanChangeReq(CSEquipPlan structure)
        {
            return new CsTPacket<CSEquipPlan>(CS_CMD_ID.CS_CMD_EQUIPPLAN_CHANGE_REQ, structure);
        }

        /// <summary>
        /// 装备方案快速替换
        /// </summary>
        public static CsTPacket<CSEquipPlanChangeNtf> EquipPlanChangeNtf(CSEquipPlanChangeNtf structure)
        {
            return new CsTPacket<CSEquipPlanChangeNtf>(CS_CMD_ID.CS_CMD_EQUIPPLAN_CHANGE_NTF, structure);
        }

        /// <summary>
        /// 解锁补给方案
        /// </summary>
        public static CsTPacket<CSSupplyPlanUnLockReq> SupplyPlanUnLockReq(CSSupplyPlanUnLockReq structure)
        {
            return new CsTPacket<CSSupplyPlanUnLockReq>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_UNLOCK_REQ, structure);
        }

        /// <summary>
        /// 解锁补给方案响应
        /// </summary>
        public static CsTPacket<CSSupplyPlanUnLockRsp> SupplyPlanUnLockRsp(CSSupplyPlanUnLockRsp structure)
        {
            return new CsTPacket<CSSupplyPlanUnLockRsp>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_UNLOCK_RSP, structure);
        }

        /// <summary>
        /// 保存当前到方案
        /// </summary>
        public static CsTPacket<CSSupplyPlanSaveReq> SupplyPlanSaveReq(CSSupplyPlanSaveReq structure)
        {
            return new CsTPacket<CSSupplyPlanSaveReq>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_SAVE_REQ, structure);
        }

        /// <summary>
        /// 保存方案响应
        /// </summary>
        public static CsTPacket<CSSupplyPlanSaveRsp> SupplyPlanSaveRsp(CSSupplyPlanSaveRsp structure)
        {
            return new CsTPacket<CSSupplyPlanSaveRsp>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_SAVE_RSP, structure);
        }

        /// <summary>
        /// 补给操作
        /// </summary>
        public static CsTPacket<CSSupplyStepReq> SupplyPlanStepReq(CSSupplyStepReq structure)
        {
            return new CsTPacket<CSSupplyStepReq>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_STEP_REQ, structure);
        }

        /// <summary>
        /// 补给操作响应
        /// </summary>
        public static CsTPacket<CSSupplyStepRsp> SupplyPlanStepRsp(CSSupplyStepRsp structure)
        {
            return new CsTPacket<CSSupplyStepRsp>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_STEP_RSP, structure);
        }

        /// <summary>
        /// 补给方案重命名
        /// </summary>
        public static CsTPacket<CSSupplyPlanReNameReq> SupplyPlanRenameReq(CSSupplyPlanReNameReq structure)
        {
            return new CsTPacket<CSSupplyPlanReNameReq>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_RENAME_REQ, structure);
        }

        /// <summary>
        /// 补给方案重命名响应
        /// </summary>
        public static CsTPacket<CSSupplyPlanReNameRsp> SupplyPlanReNameRsp(CSSupplyPlanReNameRsp structure)
        {
            return new CsTPacket<CSSupplyPlanReNameRsp>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_RENAME_RSP, structure);
        }

        /// <summary>
        /// 激活方案
        /// </summary>
        public static CsTPacket<CSSupplyPlanActReq> SupplyPlanActReq(CSSupplyPlanActReq structure)
        {
            return new CsTPacket<CSSupplyPlanActReq>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_ACT_REQ, structure);
        }

        /// <summary>
        /// 激活方案响应
        /// </summary>
        public static CsTPacket<CSSupplyPlanActRsp> SupplyPlanActRsp(CSSupplyPlanActRsp structure)
        {
            return new CsTPacket<CSSupplyPlanActRsp>(CS_CMD_ID.CS_CMD_SUPPLYPLAN_ACT_RSP, structure);
        }

        /// <summary>
        /// 移动多个物品
        /// </summary>
        public static CsTPacket<CSItemMgrMoveSwapItemsReq> ItemMgrMoveSwapItemsReq(CSItemMgrMoveSwapItemsReq structure)
        {
            return new CsTPacket<CSItemMgrMoveSwapItemsReq>(CS_CMD_ID.CS_CMD_ITEMMGR_MOVE_SWAP_ITEMS_REQ, structure);
        }

        /// <summary>
        /// 移动多个物品
        /// </summary>
        public static CsTPacket<CSItemMgrMoveSwapItemsNtf> ItemMgrMoveSwapItemsNtf(CSItemMgrMoveSwapItemsNtf structure)
        {
            return new CsTPacket<CSItemMgrMoveSwapItemsNtf>(CS_CMD_ID.CS_CMD_ITEMMGR_MOVE_SWAP_ITEMS_NTF, structure);
        }

        /// <summary>
        /// 请求rankup
        /// </summary>
        public static CsTPacket<CSItemRebuildRankupReq> ItemRebuildRankupReq(CSItemRebuildRankupReq structure)
        {
            return new CsTPacket<CSItemRebuildRankupReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_RANKUP_REQ, structure);
        }

        /// <summary>
        /// 请求rankup
        /// </summary>
        public static CsTPacket<CSItemRebuildRankupRes> ItemRebuildRankupRes(CSItemRebuildRankupRes structure)
        {
            return new CsTPacket<CSItemRebuildRankupRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_RANKUP_RES, structure);
        }

        /// <summary>
        /// 请求镶嵌
        /// </summary>
        public static CsTPacket<CSItemRebuildEnchaseReq> ItemRebuildEnchaseReq(CSItemRebuildEnchaseReq structure)
        {
            return new CsTPacket<CSItemRebuildEnchaseReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_ENCHASE_REQ, structure);
        }

        /// <summary>
        /// 请求镶嵌
        /// </summary>
        public static CsTPacket<CSItemRebuildEnchaseRes> ItemRebuildEnchaseRes(CSItemRebuildEnchaseRes structure)
        {
            return new CsTPacket<CSItemRebuildEnchaseRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_ENCHASE_RES, structure);
        }

        /// <summary>
        /// 请求强化
        /// </summary>
        public static CsTPacket<CSItemRebuildEnforceReq> ItemRebuildEnforceReq(CSItemRebuildEnforceReq structure)
        {
            return new CsTPacket<CSItemRebuildEnforceReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_ENFORCE_REQ, structure);
        }

        /// <summary>
        /// 请求强化
        /// </summary>
        public static CsTPacket<CSItemRebuildEnforceRes> ItemRebuildEnforceRes(CSItemRebuildEnforceRes structure)
        {
            return new CsTPacket<CSItemRebuildEnforceRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_ENFORCE_RES, structure);
        }

        /// <summary>
        /// 请求精铸
        /// </summary>
        public static CsTPacket<CSItemRebuildFoundReq> ItemRebuildFoundReq(CSItemRebuildFoundReq structure)
        {
            return new CsTPacket<CSItemRebuildFoundReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_FOUND_REQ, structure);
        }

        /// <summary>
        /// 请求精铸
        /// </summary>
        public static CsTPacket<CSItemRebuildFoundRes> ItemRebuildFoundRes(CSItemRebuildFoundRes structure)
        {
            return new CsTPacket<CSItemRebuildFoundRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_FOUND_RES, structure);
        }

        /// <summary>
        /// 请求开启精铸属性
        /// </summary>
        public static CsTPacket<CSItemRebuildFoundOpenReq> ItemRebuildFoundOpenReq(CSItemRebuildFoundOpenReq structure)
        {
            return new CsTPacket<CSItemRebuildFoundOpenReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_FOUND_OPEN_REQ, structure);
        }

        /// <summary>
        /// 请求开启精铸属性
        /// </summary>
        public static CsTPacket<CSItemRebuildFoundOpenRes> ItemRebuildFoundOpenRes(CSItemRebuildFoundOpenRes structure)
        {
            return new CsTPacket<CSItemRebuildFoundOpenRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_FOUND_OPEN_RES, structure);
        }

        /// <summary>
        /// 请求觉醒升级
        /// </summary>
        public static CsTPacket<CSItemRebuildWakeLevelupReq> ItemRebuildWakeLevelupReq(
            CSItemRebuildWakeLevelupReq structure)
        {
            return new CsTPacket<CSItemRebuildWakeLevelupReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_WAKE_LEVELUP_REQ, structure);
        }

        /// <summary>
        /// 请求觉醒升级
        /// </summary>
        public static CsTPacket<CSItemRebuildWakeLevelupRes> ItemRebuildWakeLevelupRes(
            CSItemRebuildWakeLevelupRes structure)
        {
            return new CsTPacket<CSItemRebuildWakeLevelupRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_WAKE_LEVELUP_RES, structure);
        }

        /// <summary>
        /// 请求upgrade
        /// </summary>
        public static CsTPacket<CSItemRebuildUpgradeReq> ItemRebuildEquipUpgradeReq(CSItemRebuildUpgradeReq structure)
        {
            return new CsTPacket<CSItemRebuildUpgradeReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_EQUIP_UPGRADE_REQ, structure);
        }

        /// <summary>
        /// 回复upgrade
        /// </summary>
        public static CsTPacket<CSItemRebuildUpgradeRes> ItemRebuildEquipUpgradeRes(CSItemRebuildUpgradeRes structure)
        {
            return new CsTPacket<CSItemRebuildUpgradeRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_EQUIP_UPGRADE_RES, structure);
        }

        /// <summary>
        /// 护石精铸REQ
        /// </summary>
        public static CsTPacket<CSItemRebuildCharmFoundReq> ItemRebuildCharmFoundReq(
            CSItemRebuildCharmFoundReq structure)
        {
            return new CsTPacket<CSItemRebuildCharmFoundReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_CHARM_FOUND_REQ, structure);
        }

        /// <summary>
        /// 护石精铸RES
        /// </summary>
        public static CsTPacket<CSItemRebuildCharmFoundRes> ItemRebuildCharmFoundRes(
            CSItemRebuildCharmFoundRes structure)
        {
            return new CsTPacket<CSItemRebuildCharmFoundRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_CHARM_FOUND_RES, structure);
        }

        /// <summary>
        /// 道具拆解REQ
        /// </summary>
        public static CsTPacket<CSItemRebuildItemDecomposeReq> ItemRebuildItemDecomposeReq(
            CSItemRebuildItemDecomposeReq structure)
        {
            return new CsTPacket<CSItemRebuildItemDecomposeReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_ITEM_DECOMPOSE_REQ,
                structure);
        }

        /// <summary>
        /// 道具拆解RES
        /// </summary>
        public static CsTPacket<CSItemRebuildItemDecomposeRes> ItemRebuildItemDecomposeRes(
            CSItemRebuildItemDecomposeRes structure)
        {
            return new CsTPacket<CSItemRebuildItemDecomposeRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_ITEM_DECOMPOSE_RES,
                structure);
        }

        /// <summary>
        /// 请求突破
        /// </summary>
        public static CsTPacket<CSItemRebuildBreakReq> ItemRebuildBreakReq(CSItemRebuildBreakReq structure)
        {
            return new CsTPacket<CSItemRebuildBreakReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_EQUIPBREAK_REQ, structure);
        }

        /// <summary>
        /// 突破返回
        /// </summary>
        public static CsTPacket<CSItemRebuildBreakRes> ItemRebuildBreakRes(CSItemRebuildBreakRes structure)
        {
            return new CsTPacket<CSItemRebuildBreakRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_EQUIPBREAK_RES, structure);
        }

        /// <summary>
        /// 强化次数限制通知
        /// </summary>
        public static CsTPacket<CSItemRebuildLimitInfo> ItemRebuildLimitDataNtf(CSItemRebuildLimitInfo structure)
        {
            return new CsTPacket<CSItemRebuildLimitInfo>(CS_CMD_ID.CS_CMD_ITEMREBUILD_LIMITDATA_NTF, structure);
        }

        /// <summary>
        /// 重置觉醒次数REQ
        /// </summary>
        public static CsTPacket<CSItemRebuildResetWakeTimesReq> ItemRebuildResetWakeTimesReq(
            CSItemRebuildResetWakeTimesReq structure)
        {
            return new CsTPacket<CSItemRebuildResetWakeTimesReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_RESET_WAKE_TIMES_REQ,
                structure);
        }

        /// <summary>
        /// 重置觉醒次数RSP
        /// </summary>
        public static CsTPacket<CSItemRebuildResetWakeTimesRsp> ItemRebuildResetWakeTimesRsp(
            CSItemRebuildResetWakeTimesRsp structure)
        {
            return new CsTPacket<CSItemRebuildResetWakeTimesRsp>(CS_CMD_ID.CS_CMD_ITEMREBUILD_RESET_WAKE_TIMES_RSP,
                structure);
        }

        /// <summary>
        /// 请求Levelup
        /// </summary>
        public static CsTPacket<CSItemRebuildLevelupReq> ItemRebuildLevelupReq(CSItemRebuildLevelupReq structure)
        {
            return new CsTPacket<CSItemRebuildLevelupReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_LEVELUP_REQ, structure);
        }

        /// <summary>
        /// 请求LevelupRes
        /// </summary>
        public static CsTPacket<CSItemRebuildLevelupRes> ItemRebuildLevelupRes(CSItemRebuildLevelupRes structure)
        {
            return new CsTPacket<CSItemRebuildLevelupRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_LEVELUP_RES, structure);
        }

        /// <summary>
        /// 装备转移Req
        /// </summary>
        public static CsTPacket<CSItemRebuildTransferReq> ItemRebuildTransferReq(CSItemRebuildTransferReq structure)
        {
            return new CsTPacket<CSItemRebuildTransferReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_TRANSFER_REQ, structure);
        }

        /// <summary>
        /// 装备转移Res
        /// </summary>
        public static CsTPacket<CSItemRebuildTransferRes> ItemRebuildTransferRes(CSItemRebuildTransferRes structure)
        {
            return new CsTPacket<CSItemRebuildTransferRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_TRANSFER_RES, structure);
        }

        /// <summary>
        /// 追踪REQ
        /// </summary>
        public static CsTPacket<CSItemRebuildTrackReq> ItemRebuildTrackReq(CSItemRebuildTrackReq structure)
        {
            return new CsTPacket<CSItemRebuildTrackReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_TRACK_REQ, structure);
        }

        /// <summary>
        /// 移除技能珠
        /// </summary>
        public static CsTPacket<CSItemRebuildRemoveBeamReq> ItemRebuildRemoveBeamReq(
            CSItemRebuildRemoveBeamReq structure)
        {
            return new CsTPacket<CSItemRebuildRemoveBeamReq>(CS_CMD_ID.CS_CMD_ITEMREBUILD_REMOVEBEAM_REQ, structure);
        }

        /// <summary>
        /// 移除技能珠
        /// </summary>
        public static CsTPacket<CSItemRebuildRemoveBeamRes> ItemRebuildRemoveBeamRes(
            CSItemRebuildRemoveBeamRes structure)
        {
            return new CsTPacket<CSItemRebuildRemoveBeamRes>(CS_CMD_ID.CS_CMD_ITEMREBUILD_REMOVEBEAM_RES, structure);
        }

        /// <summary>
        /// 请求装备染色
        /// </summary>
        public static CsTPacket<CSEquipReColorReq> EquipReColorReq(CSEquipReColorReq structure)
        {
            return new CsTPacket<CSEquipReColorReq>(CS_CMD_ID.C2S_CMD_ITEM_EQUIPRECOLOR_REQ, structure);
        }

        /// <summary>
        /// 回复装备染色
        /// </summary>
        public static CsTPacket<CSEquipReColorRsp> EquipReColorRsp(CSEquipReColorRsp structure)
        {
            return new CsTPacket<CSEquipReColorRsp>(CS_CMD_ID.S2C_CMD_ITEM_EQUIPRECOLOR_RSP, structure);
        }

        /// <summary>
        /// 请求幻化
        /// </summary>
        public static CsTPacket<CSEquipFakeShowReq> EquipFakeShowReq(CSEquipFakeShowReq structure)
        {
            return new CsTPacket<CSEquipFakeShowReq>(CS_CMD_ID.C2S_CMD_ITEM_EQUIP_FAKESHOW_REQ, structure);
        }

        /// <summary>
        /// 幻化响应
        /// </summary>
        public static CsTPacket<CSEquipFakeShowRsp> EquipFakeShowRsp(CSEquipFakeShowRsp structure)
        {
            return new CsTPacket<CSEquipFakeShowRsp>(CS_CMD_ID.S2C_CMD_ITEM_EQUIP_FAKESHOW_RSP, structure);
        }

        /// <summary>
        /// 精粹请求
        /// </summary>
        public static CsTPacket<CSEquipQuenchReq> EquipQuenchReq(CSEquipQuenchReq structure)
        {
            return new CsTPacket<CSEquipQuenchReq>(CS_CMD_ID.C2S_CND_ITEMREBUILD_EQUIPQUENCH_REQ, structure);
        }

        /// <summary>
        /// 精粹返回
        /// </summary>
        public static CsTPacket<CSEquipQuenchRsp> EquipQuenchRsp(CSEquipQuenchRsp structure)
        {
            return new CsTPacket<CSEquipQuenchRsp>(CS_CMD_ID.C2S_CND_ITEMREBUILD_EQUIPQUENCH_RSP, structure);
        }

        /// <summary>
        /// 精粹回滚请求
        /// </summary>
        public static CsTPacket<CSEquipQuenchRollReq> EquipQuenchRollBackReq(CSEquipQuenchRollReq structure)
        {
            return new CsTPacket<CSEquipQuenchRollReq>(CS_CMD_ID.C2S_CND_ITEMREBUILD_EQUIPQUENCH_SAVE_REQ, structure);
        }

        /// <summary>
        /// 精粹回滚返回
        /// </summary>
        public static CsTPacket<CSEquipQuenchRollRsp> EquipQuenchRollBackRsp(CSEquipQuenchRollRsp structure)
        {
            return new CsTPacket<CSEquipQuenchRollRsp>(CS_CMD_ID.C2S_CND_ITEMREBUILD_EQUIPQUENCH_SAVE_RSP, structure);
        }

        /// <summary>
        /// 精粹退火请求
        /// </summary>
        public static CsTPacket<CSEquipQuenchReq> EquipReQuenchReq(CSEquipQuenchReq structure)
        {
            return new CsTPacket<CSEquipQuenchReq>(CS_CMD_ID.C2S_CND_ITEMREBUILD_EQUIPREQUENCH_REQ, structure);
        }

        /// <summary>
        /// 精粹退火返回
        /// </summary>
        public static CsTPacket<CSEquipReQuenchRsp> EquipReQuenchRsp(CSEquipReQuenchRsp structure)
        {
            return new CsTPacket<CSEquipReQuenchRsp>(CS_CMD_ID.C2S_CND_ITEMREBUILD_EQUIPREQUENCH_RSP, structure);
        }

        /// <summary>
        /// 装备升级
        /// </summary>
        public static CsTPacket<CSEquipNewLevelUpReq> EquipNewLevelUpReq(CSEquipNewLevelUpReq structure)
        {
            return new CsTPacket<CSEquipNewLevelUpReq>(CS_CMD_ID.C2S_CMD_ITEMREBUILD_ITEMLEVLEUPREQ, structure);
        }

        /// <summary>
        /// 装备升级
        /// </summary>
        public static CsTPacket<CSEquipNewLevelUpRsp> EquipNewLevelUpRsp(CSEquipNewLevelUpRsp structure)
        {
            return new CsTPacket<CSEquipNewLevelUpRsp>(CS_CMD_ID.C2S_CMD_ITEMREBUILD_ITEMLEVLEUPRSP, structure);
        }

        /// <summary>
        /// 请求重铸
        /// </summary>
        public static CsTPacket<CSRebuildRandomWeaponReq> RebuildRandWeaoponReq(CSRebuildRandomWeaponReq structure)
        {
            return new CsTPacket<CSRebuildRandomWeaponReq>(CS_CMD_ID.C2S_CMD_ITEMREBUILD_RANDOMWEAPON_REBUILD_REQ,
                structure);
        }

        /// <summary>
        /// 重铸响应
        /// </summary>
        public static CsTPacket<CSRebuildRandomWeaponRsp> RebuildRandWeaoponRes(CSRebuildRandomWeaponRsp structure)
        {
            return new CsTPacket<CSRebuildRandomWeaponRsp>(CS_CMD_ID.C2S_CMD_ITEMREBUILD_RANDOMWEAPON_REBUILD_REP,
                structure);
        }

        /// <summary>
        /// 解绑
        /// </summary>
        public static CsTPacket<CSRebuildUnbindReq> RebuildUnbindReq(CSRebuildUnbindReq structure)
        {
            return new CsTPacket<CSRebuildUnbindReq>(CS_CMD_ID.C2S_CMD_ITEMREBUILD_UNBIND_REQ, structure);
        }

        /// <summary>
        /// 解绑响应
        /// </summary>
        public static CsTPacket<CSRebuildUnbindRsp> RebuildUnbindRsp(CSRebuildUnbindRsp structure)
        {
            return new CsTPacket<CSRebuildUnbindRsp>(CS_CMD_ID.C2S_CMD_ITEMREBUILD_UNBIND_RSP, structure);
        }

        /// <summary>
        /// 护石熔炼请求
        /// </summary>
        public static CsTPacket<CSCharmRebuildReq> CharmRebuildReq(CSCharmRebuildReq structure)
        {
            return new CsTPacket<CSCharmRebuildReq>(CS_CMD_ID.C2S_CMD_ITEMREBUILD_CHARM_REBUILD_REQ, structure);
        }

        /// <summary>
        /// 护石熔炼应答
        /// </summary>
        public static CsTPacket<CSCharmRebuildRsp> CharmRebuildRsp(CSCharmRebuildRsp structure)
        {
            return new CsTPacket<CSCharmRebuildRsp>(CS_CMD_ID.C2S_CMD_ITEMREBUILD_CHARM_REBUILD_RSP, structure);
        }

        /// <summary>
        /// 装备直升请求
        /// </summary>
        public static CsTPacket<CSEquipQuickUpgradeReq> EquipQuickUpgradeReq(CSEquipQuickUpgradeReq structure)
        {
            return new CsTPacket<CSEquipQuickUpgradeReq>(CS_CMD_ID.C2S_CMD_ITEMREBUILD_EQUIP_QUICK_UPGRADE_REQ,
                structure);
        }

        /// <summary>
        /// 装备直升应答
        /// </summary>
        public static CsTPacket<CSEquipQuickUpgradeRsp> EquipQuickUpgradeRsp(CSEquipQuickUpgradeRsp structure)
        {
            return new CsTPacket<CSEquipQuickUpgradeRsp>(CS_CMD_ID.S2C_CMD_ITEMREBUILD_EQUIP_QUICK_UPGRADE_RSP,
                structure);
        }

        /// <summary>
        /// 宝箱通知
        /// </summary>
        public static CsTPacket<CSItemBoxOpenBoxNtf> ItemBoxOpenBoxNtf(CSItemBoxOpenBoxNtf structure)
        {
            return new CsTPacket<CSItemBoxOpenBoxNtf>(CS_CMD_ID.CS_CMD_ITEMBOX_OPEN_BOX_NTF, structure);
        }

        /// <summary>
        /// 龙人秘宝奖励通知
        /// </summary>
        public static CsTPacket<CSDragonBoxPrizeNtf> DragonBoxPrizeNtf(CSDragonBoxPrizeNtf structure)
        {
            return new CsTPacket<CSDragonBoxPrizeNtf>(CS_CMD_ID.CS_CMD_DRAGONBOX_PRIZE_NTF, structure);
        }

        /// <summary>
        /// 龙人秘宝奖励请求
        /// </summary>
        public static CsTPacket<CSDragonBoxPrizeReq> DragonBoxPrizeReq(CSDragonBoxPrizeReq structure)
        {
            return new CsTPacket<CSDragonBoxPrizeReq>(CS_CMD_ID.CS_CMD_DRAGONBOX_PRIZE_REQ, structure);
        }

        /// <summary>
        /// 龙人秘宝开箱通知
        /// </summary>
        public static CsTPacket<CSDragonBoxOpenNtf> DragonBoxOpenNtf(CSDragonBoxOpenNtf structure)
        {
            return new CsTPacket<CSDragonBoxOpenNtf>(CS_CMD_ID.CS_CMD_DRAGONBOX_OPEN_NTF, structure);
        }

        /// <summary>
        /// 请求龙人秘宝详细信息
        /// </summary>
        public static CsTPacket<CSDragonBoxDetailReq> DragonBoxDetailReq(CSDragonBoxDetailReq structure)
        {
            return new CsTPacket<CSDragonBoxDetailReq>(CS_CMD_ID.CS_CMD_DRAGONBOX_DETAIL_REQ, structure);
        }

        /// <summary>
        /// 龙人秘宝详细信息响应
        /// </summary>
        public static CsTPacket<CSDragonBoxDetailRsp> DragonBoxDetailRsp(CSDragonBoxDetailRsp structure)
        {
            return new CsTPacket<CSDragonBoxDetailRsp>(CS_CMD_ID.CS_CMD_DRAGONBOX_DETAIL_RSP, structure);
        }

        /// <summary>
        /// 请求刷新龙人秘宝棋盘
        /// </summary>
        public static CsTPacket<CSDragonBoxRefreshChessReq> DragonBoxRefreshChessReq(
            CSDragonBoxRefreshChessReq structure)
        {
            return new CsTPacket<CSDragonBoxRefreshChessReq>(CS_CMD_ID.CS_CMD_DRAGONBOX_REFRESH_CHESS_REQ, structure);
        }

        /// <summary>
        /// 宝箱错误
        /// </summary>
        public static CsTPacket<S2CItemBoxErr> S2CItemBoxErr(S2CItemBoxErr structure)
        {
            return new CsTPacket<S2CItemBoxErr>(CS_CMD_ID.S2C_CMD_ITEMBOX_ERR, structure);
        }

        /// <summary>
        /// 龙人秘宝开箱请求
        /// </summary>
        public static CsTPacket<CSDragonBoxOpenReq> DragonBoxOpenReq(CSDragonBoxOpenReq structure)
        {
            return new CsTPacket<CSDragonBoxOpenReq>(CS_CMD_ID.CS_CMD_DRAGONBOX_OPEN_BOX_REQ, structure);
        }

        /// <summary>
        /// 可选宝箱通知
        /// </summary>
        public static CsTPacket<CSSelectItemBoxOpenBoxNtf> SelectItemBoxOpenBoxNtf(CSSelectItemBoxOpenBoxNtf structure)
        {
            return new CsTPacket<CSSelectItemBoxOpenBoxNtf>(CS_CMD_ID.CS_CMD_SELECT_ITEMBOX_OPEN_BOX_NTF, structure);
        }

        /// <summary>
        /// 获取可选宝箱的道具
        /// </summary>
        public static CsTPacket<CSFetchSelectItemBoxOpenBoxNtf> FetchSelectItemBoxOpenBoxNtf(
            CSFetchSelectItemBoxOpenBoxNtf structure)
        {
            return new CsTPacket<CSFetchSelectItemBoxOpenBoxNtf>(CS_CMD_ID.CS_CMD_FECTCH_SELECT_ITEMBOX_OPEN_BOX_NTF,
                structure);
        }

        /// <summary>
        /// 关卡宝箱通知
        /// </summary>
        public static CsTPacket<CSItemLevelBoxOpenBoxNtf> LevelItemBoxOpenBoxNtf(CSItemLevelBoxOpenBoxNtf structure)
        {
            return new CsTPacket<CSItemLevelBoxOpenBoxNtf>(CS_CMD_ID.CS_CMD_ITEMLEVELBOX_OPEN_BOX_NTF, structure);
        }

        /// <summary>
        /// 酋长奖励通知
        /// </summary>
        public static CsTPacket<CSDragonBoxBlackFaceGiftNtf> DragonBoxBlackFaceGiftNtf(
            CSDragonBoxBlackFaceGiftNtf structure)
        {
            return new CsTPacket<CSDragonBoxBlackFaceGiftNtf>(CS_CMD_ID.CS_CMD_DRAGONBOX_BLACKFACE_GIFT_NTF, structure);
        }

        /// <summary>
        /// 小铺请求
        /// </summary>
        public static CsTPacket<CSDragonBoxShopReq> DragonBoxShopReq(CSDragonBoxShopReq structure)
        {
            return new CsTPacket<CSDragonBoxShopReq>(CS_CMD_ID.CS_CMD_DRAGONBOX_SHOP_REQ, structure);
        }

        /// <summary>
        /// 小铺回答
        /// </summary>
        public static CsTPacket<CSDragonBoxShopRsp> DragonBoxShopRsp(CSDragonBoxShopRsp structure)
        {
            return new CsTPacket<CSDragonBoxShopRsp>(CS_CMD_ID.CS_CMD_DRAGONBOX_SHOP_RSP, structure);
        }

        /// <summary>
        /// 小铺购买请求
        /// </summary>
        public static CsTPacket<CSDragonBoxBuyReq> DragonBoxBuyReq(CSDragonBoxBuyReq structure)
        {
            return new CsTPacket<CSDragonBoxBuyReq>(CS_CMD_ID.CS_CMD_DRAGONBOX_BUY_REQ, structure);
        }

        /// <summary>
        /// 小铺购买回答
        /// </summary>
        public static CsTPacket<CSDragonBoxBuyRsp> DragonBoxBuyRsp(CSDragonBoxBuyRsp structure)
        {
            return new CsTPacket<CSDragonBoxBuyRsp>(CS_CMD_ID.CS_CMD_DRAGONBOX_BUY_RSP, structure);
        }

        /// <summary>
        /// 请求打开刷新界面
        /// </summary>
        public static CsTPacket<CSDragonBoxFreshNumOpenReq> DragonBoxFreshNumOpenReq(
            CSDragonBoxFreshNumOpenReq structure)
        {
            return new CsTPacket<CSDragonBoxFreshNumOpenReq>(CS_CMD_ID.CS_CMD_DRAGONBOX_FREASHNUM_OPEN_REQ, structure);
        }

        /// <summary>
        /// 请求打开刷新界面返回
        /// </summary>
        public static CsTPacket<CSDragonBoxFreshNumOpenRsp> DragonBoxFreshNumOpenRsp(
            CSDragonBoxFreshNumOpenRsp structure)
        {
            return new CsTPacket<CSDragonBoxFreshNumOpenRsp>(CS_CMD_ID.CS_CMD_DRAGONBOX_FREASHNUM_OPEN_RSP, structure);
        }

        /// <summary>
        /// 请求刷新数字
        /// </summary>
        public static CsTPacket<CSDragonBoxFreshNumReq> DragonBoxFreshNumReq(CSDragonBoxFreshNumReq structure)
        {
            return new CsTPacket<CSDragonBoxFreshNumReq>(CS_CMD_ID.CS_CMD_DRAGONBOX_FRESHNUM_REQ, structure);
        }

        /// <summary>
        /// 返回刷新数字
        /// </summary>
        public static CsTPacket<CSDragonBoxFreshNumRsp> DragonBoxFreshNumRsp(CSDragonBoxFreshNumRsp structure)
        {
            return new CsTPacket<CSDragonBoxFreshNumRsp>(CS_CMD_ID.CS_CMD_DRAGONBOX_FRESHNUM_RSP, structure);
        }

        /// <summary>
        /// 刷新数字确认请求
        /// </summary>
        public static CsTPacket<CSDragonBoxNumOKReq> DragonBoxNumOKReq(CSDragonBoxNumOKReq structure)
        {
            return new CsTPacket<CSDragonBoxNumOKReq>(CS_CMD_ID.CS_CMD_DRAGONBOX_NUM_OK_REQ, structure);
        }

        /// <summary>
        /// 刷新数字确认请求
        /// </summary>
        public static CsTPacket<CSDragonBoxNumOKRsp> DragonBoxNumOKRsp(CSDragonBoxNumOKRsp structure)
        {
            return new CsTPacket<CSDragonBoxNumOKRsp>(CS_CMD_ID.CS_CMD_DRAGONBOX_NUM_OK_RSP, structure);
        }

        /// <summary>
        /// 搜索
        /// </summary>
        public static CsTPacket<CSRankSearchReq> RankSearchReq(CSRankSearchReq structure)
        {
            return new CsTPacket<CSRankSearchReq>(CS_CMD_ID.CS_CMD_RANK_SEARCH_REQ, structure);
        }

        /// <summary>
        /// 搜索
        /// </summary>
        public static CsTPacket<CSRankSearchRsp> RankSearchRsp(CSRankSearchRsp structure)
        {
            return new CsTPacket<CSRankSearchRsp>(CS_CMD_ID.CS_CMD_RANK_SEARCH_RSP, structure);
        }

        /// <summary>
        /// 获取排行榜列表
        /// </summary>
        public static CsTPacket<CSRankListReq> RankListReq(CSRankListReq structure)
        {
            return new CsTPacket<CSRankListReq>(CS_CMD_ID.CS_CMD_RANK_LIST_REQ, structure);
        }

        /// <summary>
        /// 获取排行榜列表 page
        /// </summary>
        public static CsTPacket<CSRankListRsp> RankListRsp(CSRankListRsp structure)
        {
            return new CsTPacket<CSRankListRsp>(CS_CMD_ID.CS_CMD_RANK_LIST_RSP, structure);
        }

        /// <summary>
        /// 领取奖励请求
        /// </summary>
        public static CsTPacket<CSRankFetchRewardReq> RankFetchRewardReq(CSRankFetchRewardReq structure)
        {
            return new CsTPacket<CSRankFetchRewardReq>(CS_CMD_ID.CS_CMD_RANK_FETCH_REWARD_REQ, structure);
        }

        /// <summary>
        /// 领取奖励响应
        /// </summary>
        public static CsTPacket<CSRankFetchRewardRsp> RankFetchRewardRsp(CSRankFetchRewardRsp structure)
        {
            return new CsTPacket<CSRankFetchRewardRsp>(CS_CMD_ID.CS_CMD_RANK_FETCH_REWARD_RSP, structure);
        }

        /// <summary>
        /// 排行榜错误
        /// </summary>
        public static CsTPacket<CSRankErr> RankErr(CSRankErr structure)
        {
            return new CsTPacket<CSRankErr>(CS_CMD_ID.CS_CMD_RANK_ERR, structure);
        }

        /// <summary>
        /// 获取排行榜列表 from to
        /// </summary>
        public static CsTPacket<C2SRankListReq> C2SRankListReq(C2SRankListReq structure)
        {
            return new CsTPacket<C2SRankListReq>(CS_CMD_ID.C2S_CMD_RANK_LIST_REQ, structure);
        }

        /// <summary>
        /// 获取排行榜列表 from to
        /// </summary>
        public static CsTPacket<S2CRankListRsp> S2CRankListRsp(S2CRankListRsp structure)
        {
            return new CsTPacket<S2CRankListRsp>(CS_CMD_ID.S2C_CMD_RANK_LIST_RSP, structure);
        }

        /// <summary>
        /// 获取往届疾风狩猎排行榜列表 from to
        /// </summary>
        public static CsTPacket<S2CRankRapidHuntListRsp> S2CRankRapidHuntListRsp(S2CRankRapidHuntListRsp structure)
        {
            return new CsTPacket<S2CRankRapidHuntListRsp>(CS_CMD_ID.S2C_CMD_RANK_RAPIDHUNT_LIST_RSP, structure);
        }

        /// <summary>
        /// xrank get rank
        /// </summary>
        public static CsTPacket<C2SXRankGetRank> C2SXRankGetRank(C2SXRankGetRank structure)
        {
            return new CsTPacket<C2SXRankGetRank>(CS_CMD_ID.C2S_CMD_XRANK_GETRANK, structure);
        }

        /// <summary>
        /// xrank get batch user data
        /// </summary>
        public static CsTPacket<C2SXRankBatchGetUserData> C2SXRankBatchGetUserData(C2SXRankBatchGetUserData structure)
        {
            return new CsTPacket<C2SXRankBatchGetUserData>(CS_CMD_ID.C2S_CMD_XRANK_BATCHGETUSERDATA, structure);
        }

        /// <summary>
        /// xrank get rank
        /// </summary>
        public static CsTPacket<S2CXRankGetRank> S2CXRankGetRank(S2CXRankGetRank structure)
        {
            return new CsTPacket<S2CXRankGetRank>(CS_CMD_ID.S2C_CMD_XRANK_GETRANK, structure);
        }

        /// <summary>
        /// xrank get batch user data
        /// </summary>
        public static CsTPacket<S2CXRankBatchGetUserData> S2CXRankBatchGetUserData(S2CXRankBatchGetUserData structure)
        {
            return new CsTPacket<S2CXRankBatchGetUserData>(CS_CMD_ID.S2C_CMD_XRANK_BATCHGETUSERDATA, structure);
        }

        /// <summary>
        /// xrank get batch user data
        /// </summary>
        public static CsTPacket<S2CRankGetUserData> S2CRankGetUserData(S2CRankGetUserData structure)
        {
            return new CsTPacket<S2CRankGetUserData>(CS_CMD_ID.S2C_CMD_RANK_GETUSERDATA, structure);
        }

        public static CsTPacket<CSAvatarSetReq> AvatarSetReq(CSAvatarSetReq structure)
        {
            return new CsTPacket<CSAvatarSetReq>(CS_CMD_ID.CS_CMD_AVATAR_SET_REQ, structure);
        }

        public static CsTPacket<CSAvatarSetNtf> AvatarSetNtf(CSAvatarSetNtf structure)
        {
            return new CsTPacket<CSAvatarSetNtf>(CS_CMD_ID.CS_CMD_AVATAR_SET_NTF, structure);
        }

        public static CsTPacket<CSAvatarItemUpdate> AvatarItemUpdate(CSAvatarItemUpdate structure)
        {
            return new CsTPacket<CSAvatarItemUpdate>(CS_CMD_ID.CS_CMD_AVATAR_ITEM_UPDATE, structure);
        }

        /// <summary>
        /// 称号解锁请求
        /// </summary>
        public static CsTPacket<CSTitleUnlockReq> TitleUnlockReq(CSTitleUnlockReq structure)
        {
            return new CsTPacket<CSTitleUnlockReq>(CS_CMD_ID.CS_CMD_TITLE_UNLOCK_REQ, structure);
        }

        /// <summary>
        /// 称号解锁响应
        /// </summary>
        public static CsTPacket<CSTitleUnlockRsp> TitleUnlockRsp(CSTitleUnlockRsp structure)
        {
            return new CsTPacket<CSTitleUnlockRsp>(CS_CMD_ID.CS_CMD_TITLE_UNLOCK_RSP, structure);
        }

        /// <summary>
        /// 装载称号请求
        /// </summary>
        public static CsTPacket<CSTitleEquipTitleReq> TitleEquipTitleReq(CSTitleEquipTitleReq structure)
        {
            return new CsTPacket<CSTitleEquipTitleReq>(CS_CMD_ID.CS_CMD_TITLE_EQUIP_TITLE_REQ, structure);
        }

        /// <summary>
        /// 装载称号响应
        /// </summary>
        public static CsTPacket<CSTitleEquipTitleRsp> TitleEquipTitleRsp(CSTitleEquipTitleRsp structure)
        {
            return new CsTPacket<CSTitleEquipTitleRsp>(CS_CMD_ID.CS_CMD_TITLE_EQUIP_TITLE_RSP, structure);
        }

        /// <summary>
        /// 装载称号Buff请求
        /// </summary>
        public static CsTPacket<CSTitleEquipBuffReq> TitleEquipBuffReq(CSTitleEquipBuffReq structure)
        {
            return new CsTPacket<CSTitleEquipBuffReq>(CS_CMD_ID.CS_CMD_TITLE_EQUIP_BUFF_REQ, structure);
        }

        /// <summary>
        /// 装载称号Buff响应
        /// </summary>
        public static CsTPacket<CSTitleEquipBuffRsp> TitleEquipBuffRsp(CSTitleEquipBuffRsp structure)
        {
            return new CsTPacket<CSTitleEquipBuffRsp>(CS_CMD_ID.CS_CMD_TITLE_EQUIP_BUFF_RSP, structure);
        }

        /// <summary>
        /// 获取称号信息请求
        /// </summary>
        public static CsTPacket<CSTitleFetchDataReq> TitleFetchDataReq(CSTitleFetchDataReq structure)
        {
            return new CsTPacket<CSTitleFetchDataReq>(CS_CMD_ID.CS_CMD_TITLE_FETCH_DATA_REQ, structure);
        }

        /// <summary>
        /// 获取称号信息响应
        /// </summary>
        public static CsTPacket<CSTitleFetchDataRsp> TitleFetchDataRsp(CSTitleFetchDataRsp structure)
        {
            return new CsTPacket<CSTitleFetchDataRsp>(CS_CMD_ID.CS_CMD_TITLE_FETCH_DATA_RSP, structure);
        }

        /// <summary>
        /// 称号加锁通知
        /// </summary>
        public static CsTPacket<CSTitleLockNtf> TitleLockNtf(CSTitleLockNtf structure)
        {
            return new CsTPacket<CSTitleLockNtf>(CS_CMD_ID.CS_CMD_TITLE_LOCK_NTF, structure);
        }

        /// <summary>
        /// 检测战队
        /// </summary>
        public static CsTPacket<C2SCheckClan> C2SCheckClan(C2SCheckClan structure)
        {
            return new CsTPacket<C2SCheckClan>(CS_CMD_ID.C2S_CMD_CLAN_CHECKCLAN, structure);
        }

        /// <summary>
        /// 创建战队
        /// </summary>
        public static CsTPacket<C2SCreateClan> C2SCreateClan(C2SCreateClan structure)
        {
            return new CsTPacket<C2SCreateClan>(CS_CMD_ID.C2S_CMD_CLAN_CREATECLAN, structure);
        }

        /// <summary>
        /// 解散战队
        /// </summary>
        public static CsTPacket<C2SDismissClan> C2SDismissClan(C2SDismissClan structure)
        {
            return new CsTPacket<C2SDismissClan>(CS_CMD_ID.C2S_CMD_CLAN_DISMISSCLAN, structure);
        }

        /// <summary>
        /// 邀请加入战队
        /// </summary>
        public static CsTPacket<C2SInviteClan> C2SInviteClan(C2SInviteClan structure)
        {
            return new CsTPacket<C2SInviteClan>(CS_CMD_ID.C2S_CMD_CLAN_INVITECLAN, structure);
        }

        /// <summary>
        /// 退出战队
        /// </summary>
        public static CsTPacket<C2SQuitClan> C2SQuitClan(C2SQuitClan structure)
        {
            return new CsTPacket<C2SQuitClan>(CS_CMD_ID.C2S_CMD_CLAN_QUITCLAN, structure);
        }

        /// <summary>
        /// 踢战队团员
        /// </summary>
        public static CsTPacket<C2SKickClaner> C2SKickClaner(C2SKickClaner structure)
        {
            return new CsTPacket<C2SKickClaner>(CS_CMD_ID.C2S_CMD_CLAN_KICKCLANER, structure);
        }

        /// <summary>
        /// 转让团长
        /// </summary>
        public static CsTPacket<C2SClanAlterLeader> C2SClanAlterLeader(C2SClanAlterLeader structure)
        {
            return new CsTPacket<C2SClanAlterLeader>(CS_CMD_ID.C2S_CMD_CLAN_ALTERLEADER, structure);
        }

        /// <summary>
        /// 修改备注
        /// </summary>
        public static CsTPacket<C2SClanerNoteSetting> C2SClanerNoteSetting(C2SClanerNoteSetting structure)
        {
            return new CsTPacket<C2SClanerNoteSetting>(CS_CMD_ID.C2S_CMD_CLAN_CLANERNOTESETTING, structure);
        }

        /// <summary>
        /// 获取战队队员集
        /// </summary>
        public static CsTPacket<C2SGetClaners> C2SGetClaners(C2SGetClaners structure)
        {
            return new CsTPacket<C2SGetClaners>(CS_CMD_ID.C2S_CMD_CLAN_GETCLANERS, structure);
        }

        /// <summary>
        /// 获取战队信息
        /// </summary>
        public static CsTPacket<C2SGetClanDetail> C2SGetClanDetail(C2SGetClanDetail structure)
        {
            return new CsTPacket<C2SGetClanDetail>(CS_CMD_ID.C2S_CMD_CLAN_GETCLANDETAIL, structure);
        }

        /// <summary>
        /// 接受战队邀请
        /// </summary>
        public static CsTPacket<C2SAcceptClanInvitation> C2SAcceptClanInvitation(C2SAcceptClanInvitation structure)
        {
            return new CsTPacket<C2SAcceptClanInvitation>(CS_CMD_ID.C2S_CMD_CLAN_ACCEPTCLANINVITATION, structure);
        }

        /// <summary>
        /// 拒绝战队邀请
        /// </summary>
        public static CsTPacket<C2SRejectClanInvitation> C2SRejectClanInvitation(C2SRejectClanInvitation structure)
        {
            return new CsTPacket<C2SRejectClanInvitation>(CS_CMD_ID.C2S_CMD_CLAN_JEJECTCLANINVITATION, structure);
        }

        /// <summary>
        /// 请求战队成员列表
        /// </summary>
        public static CsTPacket<C2SClanMemberReq> C2SClanMemberReq(C2SClanMemberReq structure)
        {
            return new CsTPacket<C2SClanMemberReq>(CS_CMD_ID.C2S_CMD_CLAN_MEMBER_LIST_REQ, structure);
        }

        /// <summary>
        /// 战队改名
        /// </summary>
        public static CsTPacket<C2SClanModifyName> C2SClanModifyName(C2SClanModifyName structure)
        {
            return new CsTPacket<C2SClanModifyName>(CS_CMD_ID.C2S_CMD_CLAN_MODIFYNAME, structure);
        }

        /// <summary>
        /// 战队错误
        /// </summary>
        public static CsTPacket<S2CClanErr> S2CClanErr(S2CClanErr structure)
        {
            return new CsTPacket<S2CClanErr>(CS_CMD_ID.S2C_CMD_CLAN_ERR, structure);
        }

        /// <summary>
        /// 战队通知
        /// </summary>
        public static CsTPacket<S2CClanNotify> S2CClanNotify(S2CClanNotify structure)
        {
            return new CsTPacket<S2CClanNotify>(CS_CMD_ID.S2C_CMD_CLAN_NOTIFY, structure);
        }

        /// <summary>
        /// 获取战队信息
        /// </summary>
        public static CsTPacket<S2CGetClanDetail> S2CGetClanDetail(S2CGetClanDetail structure)
        {
            return new CsTPacket<S2CGetClanDetail>(CS_CMD_ID.S2C_CMD_CLAN_GETCLANDETAIL, structure);
        }

        /// <summary>
        /// 获取战队队员集
        /// </summary>
        public static CsTPacket<S2CGetClaners> S2CGetClaners(S2CGetClaners structure)
        {
            return new CsTPacket<S2CGetClaners>(CS_CMD_ID.S2C_CMD_CLAN_GETCLANERS, structure);
        }

        /// <summary>
        /// 获取队长
        /// </summary>
        public static CsTPacket<S2CClanGetLeader> S2CClanGetLeader(S2CClanGetLeader structure)
        {
            return new CsTPacket<S2CClanGetLeader>(CS_CMD_ID.S2C_CMD_CLAN_GETLEADER, structure);
        }

        /// <summary>
        /// 获取自己
        /// </summary>
        public static CsTPacket<S2CClanGetSelf> S2CClanGetSelf(S2CClanGetSelf structure)
        {
            return new CsTPacket<S2CClanGetSelf>(CS_CMD_ID.S2C_CMD_CLAN_GETSELF, structure);
        }

        /// <summary>
        /// 领取奖励
        /// </summary>
        public static CsTPacket<S2CLeagueReward> S2CLeagueReward(S2CLeagueReward structure)
        {
            return new CsTPacket<S2CLeagueReward>(CS_CMD_ID.S2C_CMD_LEAGUE_REWARD, structure);
        }

        /// <summary>
        /// 返回战队成员列表
        /// </summary>
        public static CsTPacket<S2CClanMemberRsp> S2CClanMemberRsp(S2CClanMemberRsp structure)
        {
            return new CsTPacket<S2CClanMemberRsp>(CS_CMD_ID.S2C_CMD_CLAN_MEMBER_LIST_RSP, structure);
        }

        /// <summary>
        /// 购买商品请求
        /// </summary>
        public static CsTPacket<CSMartBuyGoodsReq> MartBuyGoodsReq(CSMartBuyGoodsReq structure)
        {
            return new CsTPacket<CSMartBuyGoodsReq>(CS_CMD_ID.CS_CMD_MART_BUY_GOODS_REQ, structure);
        }

        /// <summary>
        /// 购买商品应答
        /// </summary>
        public static CsTPacket<CSMartBuyGoodsRsp> MartBuyGoodsRsp(CSMartBuyGoodsRsp structure)
        {
            return new CsTPacket<CSMartBuyGoodsRsp>(CS_CMD_ID.CS_CMD_MART_BUY_GOODS_RSP, structure);
        }

        /// <summary>
        /// 赠送商品请求
        /// </summary>
        public static CsTPacket<CSMartGiveGoodsReq> MartGiveGoodsReq(CSMartGiveGoodsReq structure)
        {
            return new CsTPacket<CSMartGiveGoodsReq>(CS_CMD_ID.CS_CMD_MART_GIVE_GOODS_REQ, structure);
        }

        /// <summary>
        /// 赠送商品应答
        /// </summary>
        public static CsTPacket<CSMartGiveGoodsRsp> MartGiveGoodsRsp(CSMartGiveGoodsRsp structure)
        {
            return new CsTPacket<CSMartGiveGoodsRsp>(CS_CMD_ID.CS_CMD_MART_GIVE_GOODS_RSP, structure);
        }

        /// <summary>
        /// 索取商品请求
        /// </summary>
        public static CsTPacket<CSMartRequestGoodsReq> MartRequestGoodsReq(CSMartRequestGoodsReq structure)
        {
            return new CsTPacket<CSMartRequestGoodsReq>(CS_CMD_ID.CS_CMD_MART_REQUEST_GOODS_REQ, structure);
        }

        /// <summary>
        /// 索取商品应答
        /// </summary>
        public static CsTPacket<CSMartRequestGoodsRsp> MartRequestGoodsRsp(CSMartRequestGoodsRsp structure)
        {
            return new CsTPacket<CSMartRequestGoodsRsp>(CS_CMD_ID.CS_CMD_MART_REQUEST_GOODS_RSP, structure);
        }

        /// <summary>
        /// 商品列表请求
        /// </summary>
        public static CsTPacket<CSMartGoodsListReq> MartGoodsListReq(CSMartGoodsListReq structure)
        {
            return new CsTPacket<CSMartGoodsListReq>(CS_CMD_ID.CS_CMD_MART_GOODS_LIST_REQ, structure);
        }

        /// <summary>
        /// 商品列表应答
        /// </summary>
        public static CsTPacket<CSMartGoodsListRsp> MartGoodsListRsp(CSMartGoodsListRsp structure)
        {
            return new CsTPacket<CSMartGoodsListRsp>(CS_CMD_ID.CS_CMD_MART_GOODS_LIST_RSP, structure);
        }

        /// <summary>
        /// 商品信息更新
        /// </summary>
        public static CsTPacket<CSMartGoodsInfoUpdate> MartGoodsInfoUpdate(CSMartGoodsInfoUpdate structure)
        {
            return new CsTPacket<CSMartGoodsInfoUpdate>(CS_CMD_ID.CS_CMD_MART_GOODS_INFO_UPDATE, structure);
        }

        /// <summary>
        /// 帐户余额刷新
        /// </summary>
        public static CsTPacket<CSMartBalanceReq> MartBalanceReq(CSMartBalanceReq structure)
        {
            return new CsTPacket<CSMartBalanceReq>(CS_CMD_ID.CS_CMD_MART_BALANCE_REQ, structure);
        }

        /// <summary>
        /// 微信支付URL
        /// </summary>
        public static CsTPacket<CSWxPayUrl> WxPayUrl(CSWxPayUrl structure)
        {
            return new CsTPacket<CSWxPayUrl>(CS_CMD_ID.CS_CMD_WX_PAY_URL, structure);
        }

        /// <summary>
        /// 取消当前支付
        /// </summary>
        public static CsTPacket<CSPayCancel> PayCancel(CSPayCancel structure)
        {
            return new CsTPacket<CSPayCancel>(CS_CMD_ID.CS_CMD_PAY_CANCEL, structure);
        }

        /// <summary>
        /// 礼物成功发送
        /// </summary>
        public static CsTPacket<CSGiftSended> GiftSended(CSGiftSended structure)
        {
            return new CsTPacket<CSGiftSended>(CS_CMD_ID.CS_CMD_GIFT_SENDED, structure);
        }

        /// <summary>
        /// 热销商品列表请求
        /// </summary>
        public static CsTPacket<CSMartHotListReq> MartHotListReq(CSMartHotListReq structure)
        {
            return new CsTPacket<CSMartHotListReq>(CS_CMD_ID.CS_CMD_MART_HOT_LIST_REQ, structure);
        }

        /// <summary>
        /// 热销商品列表应答
        /// </summary>
        public static CsTPacket<CSMartHotListRsp> MartHotListRsp(CSMartHotListRsp structure)
        {
            return new CsTPacket<CSMartHotListRsp>(CS_CMD_ID.CS_CMD_MART_HOT_LIST_RSP, structure);
        }

        /// <summary>
        /// 请求赛季详细信息
        /// </summary>
        public static CsTPacket<C2STournamentsGetDetail> C2STournamentsGetDetail(C2STournamentsGetDetail structure)
        {
            return new CsTPacket<C2STournamentsGetDetail>(CS_CMD_ID.C2S_CMD_TOURNAMENTS_GETDETAIL, structure);
        }

        /// <summary>
        /// 请求排名列表
        /// </summary>
        public static CsTPacket<C2STournamentsGetRanks> C2STournamentsGetRanks(C2STournamentsGetRanks structure)
        {
            return new CsTPacket<C2STournamentsGetRanks>(CS_CMD_ID.C2S_CMD_TOURNAMENTS_GETRANKS, structure);
        }

        /// <summary>
        /// 搜索玩家
        /// </summary>
        public static CsTPacket<C2STournamentsSearchPlayer> C2STournamentsSearchPlayer(
            C2STournamentsSearchPlayer structure)
        {
            return new CsTPacket<C2STournamentsSearchPlayer>(CS_CMD_ID.C2S_CMD_TOURNAMENTS_SEARCHPLAYER, structure);
        }

        /// <summary>
        /// 赛季副本列表请求
        /// </summary>
        public static CsTPacket<C2SLeagueLevelReq> C2SLeagueLevelReq(C2SLeagueLevelReq structure)
        {
            return new CsTPacket<C2SLeagueLevelReq>(CS_CMD_ID.C2S_CMD_LEAGUE_LEVEL_REQ, structure);
        }

        /// <summary>
        /// 赛季副本排行榜列表请求
        /// </summary>
        public static CsTPacket<C2SLeagueRankList> C2SLeagueRankList(C2SLeagueRankList structure)
        {
            return new CsTPacket<C2SLeagueRankList>(CS_CMD_ID.C2S_CMD_LEAGUE_RANK_LIST, structure);
        }

        /// <summary>
        /// 个人阶段奖励请求
        /// </summary>
        public static CsTPacket<C2SLeagueStepReward> C2SLeagueStepReward(C2SLeagueStepReward structure)
        {
            return new CsTPacket<C2SLeagueStepReward>(CS_CMD_ID.C2S_CMD_LEAGUE_STEP_REWARD, structure);
        }

        /// <summary>
        /// 赛季详细信息
        /// </summary>
        public static CsTPacket<S2CTournamentsGetDetail> S2CTournamentsGetDetail(S2CTournamentsGetDetail structure)
        {
            return new CsTPacket<S2CTournamentsGetDetail>(CS_CMD_ID.S2C_CMD_TOURNAMENTS_GETDETAIL, structure);
        }

        /// <summary>
        /// 排名列表
        /// </summary>
        public static CsTPacket<S2CTournamentsGetRanks> S2CTournamentsGetRanks(S2CTournamentsGetRanks structure)
        {
            return new CsTPacket<S2CTournamentsGetRanks>(CS_CMD_ID.S2C_CMD_TOURNAMENTS_GETRANKS, structure);
        }

        /// <summary>
        /// 搜索玩家
        /// </summary>
        public static CsTPacket<S2CTournamentsSearchPlayer> S2CTournamentsSearchPlayer(
            S2CTournamentsSearchPlayer structure)
        {
            return new CsTPacket<S2CTournamentsSearchPlayer>(CS_CMD_ID.S2C_CMD_TOURNAMENTS_SEARCHPLAYER, structure);
        }

        /// <summary>
        /// 赛制错误
        /// </summary>
        public static CsTPacket<S2CTournamentsErr> S2CTournamentsErr(S2CTournamentsErr structure)
        {
            return new CsTPacket<S2CTournamentsErr>(CS_CMD_ID.S2C_CMD_TOURNAMENTS_ERR, structure);
        }

        /// <summary>
        /// 赛季副本列表RSP
        /// </summary>
        public static CsTPacket<S2CLeagueLevelRsp> S2CLeagueLevelRsp(S2CLeagueLevelRsp structure)
        {
            return new CsTPacket<S2CLeagueLevelRsp>(CS_CMD_ID.S2C_CMD_LEAGUE_LEVEL_RSP, structure);
        }

        /// <summary>
        /// 赛季副本结果
        /// </summary>
        public static CsTPacket<S2CLeagueResult> S2CLeagueResult(S2CLeagueResult structure)
        {
            return new CsTPacket<S2CLeagueResult>(CS_CMD_ID.S2C_CMD_LEAGUE_RESULT, structure);
        }

        /// <summary>
        /// 赛季副本排行榜列表回复
        /// </summary>
        public static CsTPacket<S2CLeagueRankRsp> S2CLeagueRankRsp(S2CLeagueRankRsp structure)
        {
            return new CsTPacket<S2CLeagueRankRsp>(CS_CMD_ID.S2C_CMD_LEAGUE_RANK_RSP, structure);
        }

        /// <summary>
        /// 个人赛季数据
        /// </summary>
        public static CsTPacket<S2CLeaguePlayerInfo> S2CLeaguePlayerInfo(S2CLeaguePlayerInfo structure)
        {
            return new CsTPacket<S2CLeaguePlayerInfo>(CS_CMD_ID.S2C_CMD_LEAGUE_PLAYERINFO, structure);
        }

        /// <summary>
        /// 个人赛季奖励请求回复
        /// </summary>
        public static CsTPacket<S2CLeagueSeasonReward> S2CLeagueSeasonReward(S2CLeagueSeasonReward structure)
        {
            return new CsTPacket<S2CLeagueSeasonReward>(CS_CMD_ID.S2C_CMD_LEAGUE_SEASON_REWARD, structure);
        }

        /// <summary>
        /// 个人阶段奖励请求回复
        /// </summary>
        public static CsTPacket<S2CLeagueStepReward> S2CLeagueStepReward(S2CLeagueStepReward structure)
        {
            return new CsTPacket<S2CLeagueStepReward>(CS_CMD_ID.S2C_CMD_LEAGUE_STEP_REWARD, structure);
        }

        /// <summary>
        /// 领取奖励
        /// </summary>
        public static CsTPacket<C2SSpoorFetchPrize> C2SSpoorFetchPrize(C2SSpoorFetchPrize structure)
        {
            return new CsTPacket<C2SSpoorFetchPrize>(CS_CMD_ID.C2S_CMD_SPOOR_FETCHPRIZE, structure);
        }

        /// <summary>
        /// 猎人之路错误
        /// </summary>
        public static CsTPacket<S2CSpoorErr> S2CSpoorErr(S2CSpoorErr structure)
        {
            return new CsTPacket<S2CSpoorErr>(CS_CMD_ID.S2C_CMD_SPOOR_ERR, structure);
        }

        /// <summary>
        /// 领取奖励回复
        /// </summary>
        public static CsTPacket<S2CSpoorFetchPrize> S2CSpoorFetchPrize(S2CSpoorFetchPrize structure)
        {
            return new CsTPacket<S2CSpoorFetchPrize>(CS_CMD_ID.S2C_CMD_SPOOR_FETCHPRIZE, structure);
        }

        /// <summary>
        /// 路径点数
        /// </summary>
        public static CsTPacket<S2CSpoorAddPoints> S2CSpoorAddPoints(S2CSpoorAddPoints structure)
        {
            return new CsTPacket<S2CSpoorAddPoints>(CS_CMD_ID.S2C_CMD_SPOOR_ADDPOINTS, structure);
        }

        /// <summary>
        /// 敏感操作验证URL通知
        /// </summary>
        public static CsTPacket<CSSensitiveVerify> SensitiveVerify(CSSensitiveVerify structure)
        {
            return new CsTPacket<CSSensitiveVerify>(CS_CMD_ID.CS_CMD_SENSITIVE_VERIFY, structure);
        }

        /// <summary>
        /// 敏感操作管理页面URL请求
        /// </summary>
        public static CsTPacket<CSGetManageUrlReq> GetManageUrlReq(CSGetManageUrlReq structure)
        {
            return new CsTPacket<CSGetManageUrlReq>(CS_CMD_ID.CS_CMD_GET_MANAGE_URL_REQ, structure);
        }

        /// <summary>
        /// 敏感操作管理页面URL响应
        /// </summary>
        public static CsTPacket<CSGetManageUrlRsp> GetManageUrlRsp(CSGetManageUrlRsp structure)
        {
            return new CsTPacket<CSGetManageUrlRsp>(CS_CMD_ID.CS_CMD_GET_MANAGE_URL_RSP, structure);
        }

        /// <summary>
        /// 敏感操作验证结果
        /// </summary>
        public static CsTPacket<CSSensitiveVerifyResult> SensitiveVerifyResult(CSSensitiveVerifyResult structure)
        {
            return new CsTPacket<CSSensitiveVerifyResult>(CS_CMD_ID.CS_CMD_SENSITIVE_VERIFY_RESULT, structure);
        }

        /// <summary>
        /// 请求指定雕像数据
        /// </summary>
        public static CsTPacket<C2SGetSculpture> C2SGetSculpture(C2SGetSculpture structure)
        {
            return new CsTPacket<C2SGetSculpture>(CS_CMD_ID.C2S_CMD_SCULPTURE_GETSCULPTURE, structure);
        }

        /// <summary>
        /// 请求雕像外观信息
        /// </summary>
        public static CsTPacket<C2SGetSculptureLibs> C2SGetSculptureLibs(C2SGetSculptureLibs structure)
        {
            return new CsTPacket<C2SGetSculptureLibs>(CS_CMD_ID.C2S_CMD_SCULPTURE_GETLIBS, structure);
        }

        /// <summary>
        /// 星光大道错误
        /// </summary>
        public static CsTPacket<S2CSculptureErr> S2CSculptureErr(S2CSculptureErr structure)
        {
            return new CsTPacket<S2CSculptureErr>(CS_CMD_ID.S2C_CMD_SCULPTURE_ERR, structure);
        }

        /// <summary>
        /// 返回指定雕像数据
        /// </summary>
        public static CsTPacket<S2CGetSculpture> S2CGetSculpture(S2CGetSculpture structure)
        {
            return new CsTPacket<S2CGetSculpture>(CS_CMD_ID.S2C_CMD_SCULPTURE_GETSCULPTURE, structure);
        }

        /// <summary>
        /// 雕像库外观集
        /// </summary>
        public static CsTPacket<S2CSculptureLibSnapshot> S2CSculptureLibSnapshot(S2CSculptureLibSnapshot structure)
        {
            return new CsTPacket<S2CSculptureLibSnapshot>(CS_CMD_ID.S2C_CMD_SCULPTURE_LIB_SNAPSHOT, structure);
        }

        /// <summary>
        /// 雕像外观信息
        /// </summary>
        public static CsTPacket<S2CGetSculptureLibs> S2CGetSculptureLibs(S2CGetSculptureLibs structure)
        {
            return new CsTPacket<S2CGetSculptureLibs>(CS_CMD_ID.S2C_CMD_SCULPTURE_GETLIBS, structure);
        }

        /// <summary>
        /// 雕像Avatar
        /// </summary>
        public static CsTPacket<S2CSculptureAvatarSnapshot> S2CSculptureAvatarSnapshot(
            S2CSculptureAvatarSnapshot structure)
        {
            return new CsTPacket<S2CSculptureAvatarSnapshot>(CS_CMD_ID.S2C_CMD_SCULPTURE_AVATAR_SNAPSHOT, structure);
        }

        /// <summary>
        /// 脚本添加雕像
        /// </summary>
        public static CsTPacket<S2CScriptAddSculpture> S2CScriptAddSculpture(S2CScriptAddSculpture structure)
        {
            return new CsTPacket<S2CScriptAddSculpture>(CS_CMD_ID.S2C_CMD_SCRIPT_ADD_SCULPTURE, structure);
        }

        /// <summary>
        /// 脚本移除雕像
        /// </summary>
        public static CsTPacket<S2CScriptDelSculpture> S2CScriptDelSculpture(S2CScriptDelSculpture structure)
        {
            return new CsTPacket<S2CScriptDelSculpture>(CS_CMD_ID.S2C_CMD_SCRIPT_DEL_SCULPTURE, structure);
        }

        /// <summary>
        /// 请求特殊奖励
        /// </summary>
        public static CsTPacket<C2SHubSpecRewardReq> C2SHubSpecRewardReq(C2SHubSpecRewardReq structure)
        {
            return new CsTPacket<C2SHubSpecRewardReq>(CS_CMD_ID.C2S_CMD_HUBSPECREWARD_LEVEL_REQ, structure);
        }

        /// <summary>
        /// 特殊奖励关卡
        /// </summary>
        public static CsTPacket<S2CHubSpecRewardLevelNtf> S2CHubSpecRewardLevelInfo(S2CHubSpecRewardLevelNtf structure)
        {
            return new CsTPacket<S2CHubSpecRewardLevelNtf>(CS_CMD_ID.C2S_CMD_HUBSPECREWARD_LEVEL_RSP, structure);
        }

        /// <summary>
        /// 领取奖励
        /// </summary>
        public static CsTPacket<C2SRapidHuntFetchAward> C2SRapidHuntFetchAward(C2SRapidHuntFetchAward structure)
        {
            return new CsTPacket<C2SRapidHuntFetchAward>(CS_CMD_ID.C2S_CMD_RAPIDHUNT_FETCH_AWARD, structure);
        }

        /// <summary>
        /// 领取奖励
        /// </summary>
        public static CsTPacket<S2CRapidHuntFetchAward> S2CRapidHuntFetchAward(S2CRapidHuntFetchAward structure)
        {
            return new CsTPacket<S2CRapidHuntFetchAward>(CS_CMD_ID.S2C_CMD_RAPIDHUNT_FETCH_AWARD, structure);
        }

        /// <summary>
        /// 疾风狩猎错误
        /// </summary>
        public static CsTPacket<S2CRapidHuntErr> S2CRapidHuntErr(S2CRapidHuntErr structure)
        {
            return new CsTPacket<S2CRapidHuntErr>(CS_CMD_ID.S2C_CMD_RAPIDHUNT_ERR, structure);
        }

        /// <summary>
        /// 疾风狩猎奖励
        /// </summary>
        public static CsTPacket<S2CRapidHuntAwards> S2CRapidHuntAwards(S2CRapidHuntAwards structure)
        {
            return new CsTPacket<S2CRapidHuntAwards>(CS_CMD_ID.S2C_CMD_RAPIDHUNT_AWARDS, structure);
        }

        /// <summary>
        /// 疾风狩猎刷新
        /// </summary>
        public static CsTPacket<S2CRapidHuntRefresh> S2CRapidHuntRefresh(S2CRapidHuntRefresh structure)
        {
            return new CsTPacket<S2CRapidHuntRefresh>(CS_CMD_ID.S2C_CMD_RAPIDHUNT_REFRESH, structure);
        }

        /// <summary>
        /// 拍卖请求
        /// </summary>
        public static CsTPacket<CSExchangeSaleReq> ExchangeSaleReq(CSExchangeSaleReq structure)
        {
            return new CsTPacket<CSExchangeSaleReq>(CS_CMD_ID.CS_CMD_EXCHANGE_SALE_REQ, structure);
        }

        /// <summary>
        /// 拍卖回复
        /// </summary>
        public static CsTPacket<CSExchangeSaleRes> ExchangeSaleRes(CSExchangeSaleRes structure)
        {
            return new CsTPacket<CSExchangeSaleRes>(CS_CMD_ID.CS_CMD_EXCHANGE_SALE_RES, structure);
        }

        /// <summary>
        /// 拍卖取消请求
        /// </summary>
        public static CsTPacket<CSExchangeCancelReq> ExchangeCancelReq(CSExchangeCancelReq structure)
        {
            return new CsTPacket<CSExchangeCancelReq>(CS_CMD_ID.CS_CMD_EXCHANGE_CANCEL_REQ, structure);
        }

        /// <summary>
        /// 拍卖取消回复
        /// </summary>
        public static CsTPacket<CSExchangeCancelRes> ExchangeCancelRes(CSExchangeCancelRes structure)
        {
            return new CsTPacket<CSExchangeCancelRes>(CS_CMD_ID.CS_CMD_EXCHANGE_CANCEL_RES, structure);
        }

        /// <summary>
        /// 竞拍请求
        /// </summary>
        public static CsTPacket<CSExchangeBiddingReq> ExchangeBiddingReq(CSExchangeBiddingReq structure)
        {
            return new CsTPacket<CSExchangeBiddingReq>(CS_CMD_ID.CS_CMD_EXCHANGE_BIDDING_REQ, structure);
        }

        /// <summary>
        /// 竞拍回复
        /// </summary>
        public static CsTPacket<CSExchangeBiddingRes> ExchangeBiddingRes(CSExchangeBiddingRes structure)
        {
            return new CsTPacket<CSExchangeBiddingRes>(CS_CMD_ID.CS_CMD_EXCHANGE_BIDDING_RES, structure);
        }

        /// <summary>
        /// 查询请求
        /// </summary>
        public static CsTPacket<CSExchangeSearchReq> ExchangeSearchReq(CSExchangeSearchReq structure)
        {
            return new CsTPacket<CSExchangeSearchReq>(CS_CMD_ID.CS_CMD_EXCHANGE_SEARCH_REQ, structure);
        }

        /// <summary>
        /// 查询回复
        /// </summary>
        public static CsTPacket<CSExchangeSearchRes> ExchangeSearchRes(CSExchangeSearchRes structure)
        {
            return new CsTPacket<CSExchangeSearchRes>(CS_CMD_ID.CS_CMD_EXCHANGE_SEARCH_RES, structure);
        }

        /// <summary>
        /// 查询我的拍卖请求
        /// </summary>
        public static CsTPacket<CSExchangeGetMySaleReq> ExchangeGetMySaleReq(CSExchangeGetMySaleReq structure)
        {
            return new CsTPacket<CSExchangeGetMySaleReq>(CS_CMD_ID.CS_CMD_EXCHANGE_GETMYSALE_REQ, structure);
        }

        /// <summary>
        /// 查询我的拍卖回复
        /// </summary>
        public static CsTPacket<CSExchangeGetMySaleRes> ExchangeGetMySaleRes(CSExchangeGetMySaleRes structure)
        {
            return new CsTPacket<CSExchangeGetMySaleRes>(CS_CMD_ID.CS_CMD_EXCHANGE_GETMYSALE_RES, structure);
        }

        /// <summary>
        /// 查询我的出售记录请求
        /// </summary>
        public static CsTPacket<CSExchangeGetMySaleRecordReq> ExchangeGetMySaleRecordReq(
            CSExchangeGetMySaleRecordReq structure)
        {
            return new CsTPacket<CSExchangeGetMySaleRecordReq>(CS_CMD_ID.CS_CMD_EXCHANGE_GETMYSALE_RECORD_REQ,
                structure);
        }

        /// <summary>
        /// 查询我的出售记录回复
        /// </summary>
        public static CsTPacket<CSExchangeGetMySaleRecordRes> ExchangeGetMySaleRecordRes(
            CSExchangeGetMySaleRecordRes structure)
        {
            return new CsTPacket<CSExchangeGetMySaleRecordRes>(CS_CMD_ID.CS_CMD_EXCHANGE_GETMYSALE_RECORD_RES,
                structure);
        }

        /// <summary>
        /// 查询我的购买记录请求
        /// </summary>
        public static CsTPacket<CSExchangeGetMyBuyRecordReq> ExchangeGetMyBuyRecordReq(
            CSExchangeGetMyBuyRecordReq structure)
        {
            return new CsTPacket<CSExchangeGetMyBuyRecordReq>(CS_CMD_ID.CS_CMD_EXCHANGE_GETMYBUY_RECORD_REQ, structure);
        }

        /// <summary>
        /// 查询我的购买记录回复
        /// </summary>
        public static CsTPacket<CSExchangeGetMyBuyRecordRes> ExchangeGetMyBuyRecordRes(
            CSExchangeGetMyBuyRecordRes structure)
        {
            return new CsTPacket<CSExchangeGetMyBuyRecordRes>(CS_CMD_ID.CS_CMD_EXCHANGE_GETMYBUY_RECORD_RES, structure);
        }

        /// <summary>
        /// 查询基准汇率请求
        /// </summary>
        public static CsTPacket<CSExchangeRateReq> ExchangeRateReq(CSExchangeRateReq structure)
        {
            return new CsTPacket<CSExchangeRateReq>(CS_CMD_ID.CS_CMD_EXCHANGE_RATE_REQ, structure);
        }

        /// <summary>
        /// 查询基准汇率回复
        /// </summary>
        public static CsTPacket<CSExchangeRateRes> ExchangeRateRes(CSExchangeRateRes structure)
        {
            return new CsTPacket<CSExchangeRateRes>(CS_CMD_ID.CS_CMD_EXCHANGE_RATE_RES, structure);
        }

        /// <summary>
        /// 开通VIP请求
        /// </summary>
        public static CsTPacket<CSVIPOpenReq> C2SVIPOpenReq(CSVIPOpenReq structure)
        {
            return new CsTPacket<CSVIPOpenReq>(CS_CMD_ID.CS_CMD_VIP_OPEN_REQ, structure);
        }

        /// <summary>
        /// 开通VIP响应
        /// </summary>
        public static CsTPacket<CSVIPOpenRsp> S2CVIPOpenRsp(CSVIPOpenRsp structure)
        {
            return new CsTPacket<CSVIPOpenRsp>(CS_CMD_ID.CS_CMD_VIP_OPEN_RSP, structure);
        }

        /// <summary>
        /// 开通VIP成长助力请求
        /// </summary>
        public static CsTPacket<CSVIPOpenGrowthReq> C2SVIPOpenGrowthReq(CSVIPOpenGrowthReq structure)
        {
            return new CsTPacket<CSVIPOpenGrowthReq>(CS_CMD_ID.CS_CMD_VIP_OPEN_GROWTH_REQ, structure);
        }

        /// <summary>
        /// 开通VIP成长助力响应
        /// </summary>
        public static CsTPacket<CSVIPOpenGrowthRsp> S2CVIPOpenGrowthRsp(CSVIPOpenGrowthRsp structure)
        {
            return new CsTPacket<CSVIPOpenGrowthRsp>(CS_CMD_ID.CS_CMD_VIP_OPEN_GROWTH_RSP, structure);
        }

        /// <summary>
        /// 开通VIP收益帮手请求
        /// </summary>
        public static CsTPacket<CSVIPOpenProfitReq> C2SVIPOpenProfitReq(CSVIPOpenProfitReq structure)
        {
            return new CsTPacket<CSVIPOpenProfitReq>(CS_CMD_ID.CS_CMD_VIP_OPEN_PROFIT_REQ, structure);
        }

        /// <summary>
        /// 开通VIP收益帮手响应
        /// </summary>
        public static CsTPacket<CSVIPOpenProfitRsp> S2CVIPOpenProfitRsp(CSVIPOpenProfitRsp structure)
        {
            return new CsTPacket<CSVIPOpenProfitRsp>(CS_CMD_ID.CS_CMD_VIP_OPEN_PROFIT_RSP, structure);
        }

        /// <summary>
        /// VIP服务到期通知
        /// </summary>
        public static CsTPacket<CSVIPServiceExpireNTF> S2CVIPServiceExpireNTF(CSVIPServiceExpireNTF structure)
        {
            return new CsTPacket<CSVIPServiceExpireNTF>(CS_CMD_ID.CS_CMD_VIP_SERVICE_EXPIRE_NTF, structure);
        }

        /// <summary>
        /// VIP服务续费请求
        /// </summary>
        public static CsTPacket<CSVIPServiceRenewReq> C2SVIPServiceRenewReq(CSVIPServiceRenewReq structure)
        {
            return new CsTPacket<CSVIPServiceRenewReq>(CS_CMD_ID.CS_CMD_VIP_SERVICE_RENEW_REQ, structure);
        }

        /// <summary>
        /// VIP服务续费响应
        /// </summary>
        public static CsTPacket<CSVIPServiceRenewRsp> S2CVIPServiceRenewRsp(CSVIPServiceRenewRsp structure)
        {
            return new CsTPacket<CSVIPServiceRenewRsp>(CS_CMD_ID.CS_CMD_VIP_SERVICE_RENEW_RSP, structure);
        }

        /// <summary>
        /// UI加载完查询VIP服务过期请求
        /// </summary>
        public static CsTPacket<CSVIPServiceExpireReq> C2SVIPServiceExpireReq(CSVIPServiceExpireReq structure)
        {
            return new CsTPacket<CSVIPServiceExpireReq>(CS_CMD_ID.CS_CMD_VIP_SERVICE_EXPIRE_REQ, structure);
        }

        /// <summary>
        /// UI加载完查询VIP服务过期响应
        /// </summary>
        public static CsTPacket<CSVIPServiceExpireRsp> S2CVIPServiceExpireRsp(CSVIPServiceExpireRsp structure)
        {
            return new CsTPacket<CSVIPServiceExpireRsp>(CS_CMD_ID.CS_CMD_VIP_SERVICE_EXPIRE_RSP, structure);
        }

        /// <summary>
        /// 快速开通VIP请求
        /// </summary>
        public static CsTPacket<CSVIPQuickOpenReq> C2SVIPQuickOpenReq(CSVIPQuickOpenReq structure)
        {
            return new CsTPacket<CSVIPQuickOpenReq>(CS_CMD_ID.CS_CMD_VIP_QUICK_OPEN_REQ, structure);
        }

        /// <summary>
        /// 快速开通VIP响应
        /// </summary>
        public static CsTPacket<CSVIPQuickOpenRsp> S2CVIPQuickOpenRsp(CSVIPQuickOpenRsp structure)
        {
            return new CsTPacket<CSVIPQuickOpenRsp>(CS_CMD_ID.CS_CMD_VIP_QUICK_OPEN_RSP, structure);
        }

        /// <summary>
        /// 充值返利界面请求打开
        /// </summary>
        public static CsTPacket<CSConsumeActivityOpenReq> ConsumeActivityOpenReq(CSConsumeActivityOpenReq structure)
        {
            return new CsTPacket<CSConsumeActivityOpenReq>(CS_CMD_ID.CS_CONSUME_ACTIVITY_OPEN_REQ, structure);
        }

        /// <summary>
        /// 充值返利界面打开返回
        /// </summary>
        public static CsTPacket<CSConsumeActivityOpenRsp> ConsumeActivityOpenRsp(CSConsumeActivityOpenRsp structure)
        {
            return new CsTPacket<CSConsumeActivityOpenRsp>(CS_CMD_ID.CS_CONSUME_ACTIVITY_OPEN_RSP, structure);
        }

        /// <summary>
        /// 领取奖励
        /// </summary>
        public static CsTPacket<CSGetConsumeActivityOpenRewardReq> GetConsumeActivityOpenRewardReq(
            CSGetConsumeActivityOpenRewardReq structure)
        {
            return new CsTPacket<CSGetConsumeActivityOpenRewardReq>(CS_CMD_ID.CS_CONSUME_ACTIVITY_GETREWARD_REQ,
                structure);
        }

        /// <summary>
        /// 领取奖励返回
        /// </summary>
        public static CsTPacket<CSGetConsumeActivityOpenRewardRsp> GetConsumeActivityOpenRewardRsp(
            CSGetConsumeActivityOpenRewardRsp structure)
        {
            return new CsTPacket<CSGetConsumeActivityOpenRewardRsp>(CS_CMD_ID.CS_CONSUME_ACTIVITY_GETREWARD_RSP,
                structure);
        }

        /// <summary>
        /// 红点请求
        /// </summary>
        public static CsTPacket<CSGetConsumeActivityHongDianReq> GetConsumeActivityHongDianReq(
            CSGetConsumeActivityHongDianReq structure)
        {
            return new CsTPacket<CSGetConsumeActivityHongDianReq>(CS_CMD_ID.CS_CONSUME_ACTIVITY_HONGDIAN_REQ,
                structure);
        }

        /// <summary>
        /// 红点返回
        /// </summary>
        public static CsTPacket<CSGetConsumeActivityHongDianRsp> GetConsumeActivityHongDianRsp(
            CSGetConsumeActivityHongDianRsp structure)
        {
            return new CsTPacket<CSGetConsumeActivityHongDianRsp>(CS_CMD_ID.CS_CONSUME_ACTIVITY_HONGDIAN_RSP,
                structure);
        }

        /// <summary>
        /// 请求房间列表
        /// </summary>
        public static CsTPacket<C2SRoomsGetReq> C2SRoomsGetReq(C2SRoomsGetReq structure)
        {
            return new CsTPacket<C2SRoomsGetReq>(CS_CMD_ID.C2S_CMD_ROOMS_GET_REQ, structure);
        }

        /// <summary>
        /// 请求房间列表
        /// </summary>
        public static CsTPacket<S2CRoomsGetRsp> S2CRoomsGetRsp(S2CRoomsGetRsp structure)
        {
            return new CsTPacket<S2CRoomsGetRsp>(CS_CMD_ID.S2C_CMD_ROOMS_GET_RSP, structure);
        }

        /// <summary>
        /// 观战请求
        /// </summary>
        public static CsTPacket<C2SSpectateReq> C2SSpectateReq(C2SSpectateReq structure)
        {
            return new CsTPacket<C2SSpectateReq>(CS_CMD_ID.C2S_CMD_SPECTATE_REQ, structure);
        }

        /// <summary>
        /// 观战响应
        /// </summary>
        public static CsTPacket<S2CSpectateRsp> S2CSpectateRsp(S2CSpectateRsp structure)
        {
            return new CsTPacket<S2CSpectateRsp>(CS_CMD_ID.S2C_CMD_SPECTATE_RSP, structure);
        }

        /// <summary>
        /// 观战错误
        /// </summary>
        public static CsTPacket<S2CSpectateErr> S2CSpectateErr(S2CSpectateErr structure)
        {
            return new CsTPacket<S2CSpectateErr>(CS_CMD_ID.S2C_CMD_SPECTATE_ERR, structure);
        }

        /// <summary>
        /// 统计事件通知
        /// </summary>
        public static CsTPacket<S2CLevelStatEvent> S2CLevelStatEventNTF(S2CLevelStatEvent structure)
        {
            return new CsTPacket<S2CLevelStatEvent>(CS_CMD_ID.S2C_CMD_LEVEL_STAT_EVENT, structure);
        }

        /// <summary>
        /// 客户端请求活动列表
        /// </summary>
        public static CsTPacket<C2SScriptActivityListReq> ScriptActivityListReq(C2SScriptActivityListReq structure)
        {
            return new CsTPacket<C2SScriptActivityListReq>(CS_CMD_ID.C2S_CMD_SACTIVITY_LIST_REQ, structure);
        }

        /// <summary>
        /// 服务器返回活动列表
        /// </summary>
        public static CsTPacket<S2CScriptActivityListRsp> ScriptActivityListRsp(S2CScriptActivityListRsp structure)
        {
            return new CsTPacket<S2CScriptActivityListRsp>(CS_CMD_ID.S2C_CMD_SACTIVITY_LIST_RSP, structure);
        }

        /// <summary>
        /// 客户端请求活动详细信息
        /// </summary>
        public static CsTPacket<C2SScriptActivityDetailReq> ScriptActivityDetailReq(
            C2SScriptActivityDetailReq structure)
        {
            return new CsTPacket<C2SScriptActivityDetailReq>(CS_CMD_ID.C2S_CMD_SACTIVITY_DETAIL_REQ, structure);
        }

        /// <summary>
        /// 服务器返回活动详细信息
        /// </summary>
        public static CsTPacket<S2CScriptActivityDetailRsp> ScriptActivityDetailRsp(
            S2CScriptActivityDetailRsp structure)
        {
            return new CsTPacket<S2CScriptActivityDetailRsp>(CS_CMD_ID.S2C_CMD_SACTIVITY_DETAIL_RSP, structure);
        }

        /// <summary>
        /// 服务器通知活动状态变化
        /// </summary>
        public static CsTPacket<S2CScriptActivityStateNtf> ScriptActivityStateNtf(S2CScriptActivityStateNtf structure)
        {
            return new CsTPacket<S2CScriptActivityStateNtf>(CS_CMD_ID.S2C_CMD_SACTIVITY_STATE_NTF, structure);
        }

        /// <summary>
        /// 服务器通知活动变量变化
        /// </summary>
        public static CsTPacket<S2CScriptActivityVarUpdateNtf> ScriptActivityVarUpdateNtf(
            S2CScriptActivityVarUpdateNtf structure)
        {
            return new CsTPacket<S2CScriptActivityVarUpdateNtf>(CS_CMD_ID.S2C_CMD_SACTIVITY_VAR_UPDATE_NTF, structure);
        }

        /// <summary>
        /// Client->Server: 执行Data的操作请求
        /// </summary>
        public static CsTPacket<C2SScriptActivityDataExecReq> C2SScriptActivityDataExecReq(
            C2SScriptActivityDataExecReq structure)
        {
            return new CsTPacket<C2SScriptActivityDataExecReq>(CS_CMD_ID.C2S_CMD_SACTIVITY_DATA_EXEC_REQ, structure);
        }

        /// <summary>
        /// Server->Client: 执行Data的操作的结果
        /// </summary>
        public static CsTPacket<S2CScriptActivityDataExecRsp> S2CScriptActivityDataExecRsp(
            S2CScriptActivityDataExecRsp structure)
        {
            return new CsTPacket<S2CScriptActivityDataExecRsp>(CS_CMD_ID.S2C_CMD_SACTIVITY_DATA_EXEC_RSP, structure);
        }

        /// <summary>
        /// 服务器通知活动计数器变化
        /// </summary>
        public static CsTPacket<S2CScriptActivityCounterUpdateNtf> S2CScriptActivityCounterUpdateNtf(
            S2CScriptActivityCounterUpdateNtf structure)
        {
            return new CsTPacket<S2CScriptActivityCounterUpdateNtf>(CS_CMD_ID.S2C_CMD_SACTIVITY_COUNTER_UPDATE_NTF,
                structure);
        }

        /// <summary>
        /// 服务器通知活动开始结束时间变化
        /// </summary>
        public static CsTPacket<S2CScriptActivityTimeUpdateNtf> S2CScriptActivityTimeUpdateNtf(
            S2CScriptActivityTimeUpdateNtf structure)
        {
            return new CsTPacket<S2CScriptActivityTimeUpdateNtf>(CS_CMD_ID.S2C_CMD_SACTIVITY_TIME_UPATE_NTF, structure);
        }

        /// <summary>
        /// global token
        /// </summary>
        public static CsTPacket<S2CScriptActivityGetGlobalTokens> S2CScriptActivityGetGlobalTokens(
            S2CScriptActivityGetGlobalTokens structure)
        {
            return new CsTPacket<S2CScriptActivityGetGlobalTokens>(CS_CMD_ID.S2C_CMD_SACTIVITY_GETGLOBALTOKENS,
                structure);
        }

        /// <summary>
        /// UpdateBGStat
        /// </summary>
        public static CsTPacket<S2CScriptActivityUpdateBGStat> S2CScriptActivityUpdateBGStat(
            S2CScriptActivityUpdateBGStat structure)
        {
            return new CsTPacket<S2CScriptActivityUpdateBGStat>(CS_CMD_ID.S2C_CMD_SACTIVITY_UPDATEBGSTAT, structure);
        }

        /// <summary>
        /// 调用旋律
        /// </summary>
        public static CsTPacket<C2SFluteInvokeTune> C2SFluteInvokeTune(C2SFluteInvokeTune structure)
        {
            return new CsTPacket<C2SFluteInvokeTune>(CS_CMD_ID.C2S_CMD_FLUTE_INVOKE_TUNE, structure);
        }

        /// <summary>
        /// 增加音符
        /// </summary>
        public static CsTPacket<S2CFluteAddNote> S2CFluteAddNote(S2CFluteAddNote structure)
        {
            return new CsTPacket<S2CFluteAddNote>(CS_CMD_ID.S2C_CMD_FLUTE_ADD_NOTE, structure);
        }

        /// <summary>
        /// 调用旋律
        /// </summary>
        public static CsTPacket<S2CFluteInvokeTune> S2CFluteInvokeTune(S2CFluteInvokeTune structure)
        {
            return new CsTPacket<S2CFluteInvokeTune>(CS_CMD_ID.S2C_CMD_FLUTE_INVOKE_TUNE, structure);
        }

        /// <summary>
        /// 武器Style激活请求
        /// </summary>
        public static CsTPacket<CSWeaponStyleActiveReq> CSWeaponStyleActiveReq(CSWeaponStyleActiveReq structure)
        {
            return new CsTPacket<CSWeaponStyleActiveReq>(CS_CMD_ID.CS_CMD_WEAPON_STYLE_ACTIVE_REQ, structure);
        }

        /// <summary>
        /// 武器Style激活应答
        /// </summary>
        public static CsTPacket<CSWeaponStyleActiveRsp> CSWeaponStyleActiveRsp(CSWeaponStyleActiveRsp structure)
        {
            return new CsTPacket<CSWeaponStyleActiveRsp>(CS_CMD_ID.CS_CMD_WEAPON_STYLE_ACTIVE_RSP, structure);
        }

        /// <summary>
        /// 触发武器觉醒
        /// </summary>
        public static CsTPacket<S2CEquipWaking> S2CEquipWaking(S2CEquipWaking structure)
        {
            return new CsTPacket<S2CEquipWaking>(CS_CMD_ID.S2C_CMD_EQUIPEFFECT_WAKING, structure);
        }

        /// <summary>
        /// 武器突破特效
        /// </summary>
        public static CsTPacket<CSWeaponBreakEffect> CSWeaponBreakEffect(CSWeaponBreakEffect structure)
        {
            return new CsTPacket<CSWeaponBreakEffect>(CS_CMD_ID.CS_CMD_WEAPON_BREAK_EFFECT, structure);
        }

        /// <summary>
        /// 委托关卡评价奖励请求
        /// </summary>
        public static CsTPacket<CSEntrustLevelGainRewardReq> EntrustLevelGainRewardReq(
            CSEntrustLevelGainRewardReq structure)
        {
            return new CsTPacket<CSEntrustLevelGainRewardReq>(CS_CMD_ID.CS_CMD_ENTRUST_LEVEL_GAIN_REWARD_REQ,
                structure);
        }

        /// <summary>
        /// 委托关卡评价奖励回应
        /// </summary>
        public static CsTPacket<CSEntrustLevelGainRewardRsp> EntrustLevelGainRewardRsp(
            CSEntrustLevelGainRewardRsp structure)
        {
            return new CsTPacket<CSEntrustLevelGainRewardRsp>(CS_CMD_ID.CS_CMD_ENTRUST_LEVEL_GAIN_REWARD_RSP,
                structure);
        }

        /// <summary>
        /// 副本解锁
        /// </summary>
        public static CsTPacket<CSInstanceUnlockNotify> InstanceUnlockNotify(CSInstanceUnlockNotify structure)
        {
            return new CsTPacket<CSInstanceUnlockNotify>(CS_CMD_ID.CS_CMD_INSTANCE_UNLOCK_NTF, structure);
        }

        /// <summary>
        /// 副本解锁变化
        /// </summary>
        public static CsTPacket<CSInstanceUnlockChangeNotify> InstanceUnlockChangeNotify(
            CSInstanceUnlockChangeNotify structure)
        {
            return new CsTPacket<CSInstanceUnlockChangeNotify>(CS_CMD_ID.CS_CMD_INSTANCE_UNLOCK_CHANGE_NTF, structure);
        }

        /// <summary>
        /// 副本综合信息
        /// </summary>
        public static CsTPacket<CSLevelIntegrateNtf> LevelIntegrateNtf(CSLevelIntegrateNtf structure)
        {
            return new CsTPacket<CSLevelIntegrateNtf>(CS_CMD_ID.CS_CMD_LEVEL_INTEGRATE_NTF, structure);
        }

        /// <summary>
        /// 委托小组奖励领取请求
        /// </summary>
        public static CsTPacket<CSEnSubGroupGainRewardReq> EnSubGroupGainRewardReq(CSEnSubGroupGainRewardReq structure)
        {
            return new CsTPacket<CSEnSubGroupGainRewardReq>(CS_CMD_ID.CS_CMD_EN_SUBGROUP_GAIN_REWARD_REQ, structure);
        }

        /// <summary>
        /// 委托小组奖励领取回应
        /// </summary>
        public static CsTPacket<CSEnSubGroupGainRewardRsp> EnSubGroupGainRewardRsp(CSEnSubGroupGainRewardRsp structure)
        {
            return new CsTPacket<CSEnSubGroupGainRewardRsp>(CS_CMD_ID.CS_CMD_EN_SUBGROUP_GAIN_REWARD_RSP, structure);
        }

        /// <summary>
        /// 委托大组奖励领取请求
        /// </summary>
        public static CsTPacket<CSEnGroupGainRewardReq> EnGroupGainRewardReq(CSEnGroupGainRewardReq structure)
        {
            return new CsTPacket<CSEnGroupGainRewardReq>(CS_CMD_ID.CS_CMD_EN_GROUP_GAIN_REWARD_REQ, structure);
        }

        /// <summary>
        /// 委托大组奖励领取回应
        /// </summary>
        public static CsTPacket<CSEnGroupGainRewardRsp> EnGroupGainRewardRsp(CSEnGroupGainRewardRsp structure)
        {
            return new CsTPacket<CSEnGroupGainRewardRsp>(CS_CMD_ID.CS_CMD_EN_GROUP_GAIN_REWARD_RSP, structure);
        }

        /// <summary>
        /// 解锁关卡
        /// </summary>
        public static CsTPacket<CSLevelUnlockReq> LevelUnlockReq(CSLevelUnlockReq structure)
        {
            return new CsTPacket<CSLevelUnlockReq>(CS_CMD_ID.CS_CMD_PLAYER_TRY_LEVEL_UNLOCK, structure);
        }

        /// <summary>
        /// 千层成绩
        /// </summary>
        public static CsTPacket<CSLevelThousandLayerUpdateNtf> LevelThousandLayerUpdateNtf(
            CSLevelThousandLayerUpdateNtf structure)
        {
            return new CsTPacket<CSLevelThousandLayerUpdateNtf>(CS_CMD_ID.CS_CMD_LEVEL_THOUSAND_LAYER_UPDATE_NTF,
                structure);
        }

        /// <summary>
        /// 副本内选择狩猎包请求
        /// </summary>
        public static CsTPacket<CSPVPSelectHuntingBagReq> PVPSelectHuntingBagReq(CSPVPSelectHuntingBagReq structure)
        {
            return new CsTPacket<CSPVPSelectHuntingBagReq>(CS_CMD_ID.CS_CMD_PVP_SELECT_HUNTING_BAG_REQ, structure);
        }

        /// <summary>
        /// 副本内选择狩猎包响应
        /// </summary>
        public static CsTPacket<CSPVPSelectHuntingBagRsp> PVPSelectHuntingBagRsp(CSPVPSelectHuntingBagRsp structure)
        {
            return new CsTPacket<CSPVPSelectHuntingBagRsp>(CS_CMD_ID.CS_CMD_PVP_SELECT_HUNTING_BAG_RSP, structure);
        }

        /// <summary>
        /// 所有玩家PVP副本内选择狩猎包开始
        /// </summary>
        public static CsTPacket<CSPVPSelectHuntingBagStartNtf> PVPSelectHuntingBagStartNtf(
            CSPVPSelectHuntingBagStartNtf structure)
        {
            return new CsTPacket<CSPVPSelectHuntingBagStartNtf>(CS_CMD_ID.CS_CMD_PVP_SELECT_HUNTING_BAG_START_NTF,
                structure);
        }

        /// <summary>
        /// 同阵营PVP副本内选择狩猎包结束
        /// </summary>
        public static CsTPacket<CSPVPSelectHuntingBagFinishNtf> PVPSelectHuntingBagFinishNtf(
            CSPVPSelectHuntingBagFinishNtf structure)
        {
            return new CsTPacket<CSPVPSelectHuntingBagFinishNtf>(CS_CMD_ID.CS_CMD_PVP_SELECT_HUNTING_BAG_FINISH_NTF,
                structure);
        }

        /// <summary>
        /// 所有玩家PVP副本内选择狩猎包结束
        /// </summary>
        public static CsTPacket<CSPVPAllSelectHuntingBagFinishNtf> PVPAllSelectHuntingBagFinishNtf(
            CSPVPAllSelectHuntingBagFinishNtf structure)
        {
            return new CsTPacket<CSPVPAllSelectHuntingBagFinishNtf>(
                CS_CMD_ID.CS_CMD_PVP_ALL_SELECT_HUNTING_BAG_FINISH_NTF, structure);
        }

        /// <summary>
        /// 所有玩家副本准备阶段开始
        /// </summary>
        public static CsTPacket<CSPVPPrepareStageStartNtf> PVPPrepareStageStartNtf(CSPVPPrepareStageStartNtf structure)
        {
            return new CsTPacket<CSPVPPrepareStageStartNtf>(CS_CMD_ID.CS_CMD_PVP_PREPARE_STAGE_START, structure);
        }

        /// <summary>
        /// 所有玩家副本准备阶段结束
        /// </summary>
        public static CsTPacket<CSPVPPrepareStageFinishNtf> PVPPrepareStageFinishNtf(
            CSPVPPrepareStageFinishNtf structure)
        {
            return new CsTPacket<CSPVPPrepareStageFinishNtf>(CS_CMD_ID.CS_CMD_PVP_PREPARE_STAGE_FINISH, structure);
        }

        /// <summary>
        /// 章节奖励领取
        /// </summary>
        public static CsTPacket<CSHubEntryRewad> HubEntryRewadReq(CSHubEntryRewad structure)
        {
            return new CsTPacket<CSHubEntryRewad>(CS_CMD_ID.CS_CMD_HUBENTRY_REWARD_REQ, structure);
        }

        /// <summary>
        /// 章节奖励反馈
        /// </summary>
        public static CsTPacket<CSHubEntryRewadRsp> HubEntryRewadRsp(CSHubEntryRewadRsp structure)
        {
            return new CsTPacket<CSHubEntryRewadRsp>(CS_CMD_ID.CS_CMD_HUBENTRY_REWARD_RSP, structure);
        }

        /// <summary>
        /// 副本内玩家分数通知
        /// </summary>
        public static CsTPacket<CSPVPPlayerScoreNtf> PVPPlayerScoreNtf(CSPVPPlayerScoreNtf structure)
        {
            return new CsTPacket<CSPVPPlayerScoreNtf>(CS_CMD_ID.CS_CMD_PVP_PLAYER_SCORE_NTF, structure);
        }

        /// <summary>
        /// PVP分数通知
        /// </summary>
        public static CsTPacket<CSPvpBoundsNtf> PvpBoundsNtf(CSPvpBoundsNtf structure)
        {
            return new CsTPacket<CSPvpBoundsNtf>(CS_CMD_ID.CS_CMD_PVP_BOUNDS_NTF, structure);
        }

        /// <summary>
        /// 玩家加入PVP选择列表
        /// </summary>
        public static CsTPacket<CSPVPPlayerJoinHuntingBagStartNtf> PVPPlayerJoinHuntingBagStartNtf(
            CSPVPPlayerJoinHuntingBagStartNtf structure)
        {
            return new CsTPacket<CSPVPPlayerJoinHuntingBagStartNtf>(
                CS_CMD_ID.CS_CMD_PVP_PLAYER_JOIN_HUNTING_BAG_START_NTF, structure);
        }

        /// <summary>
        /// 放弃复活请求
        /// </summary>
        public static CsTPacket<CSGiveUpRevive> GiveUpReviveReq(CSGiveUpRevive structure)
        {
            return new CsTPacket<CSGiveUpRevive>(CS_CMD_ID.CS_CMD_GIVEUP_REVIVE_REQ, structure);
        }

        /// <summary>
        /// 放弃复活响应
        /// </summary>
        public static CsTPacket<CSGiveUpRevive> GiveUpReviveRsp(CSGiveUpRevive structure)
        {
            return new CsTPacket<CSGiveUpRevive>(CS_CMD_ID.CS_CMD_GIVEUP_REVIVE_RSP, structure);
        }

        /// <summary>
        /// 解锁关卡组
        /// </summary>
        public static CsTPacket<CSLevelGroupUnlockReq> LevelGroupUnlockReq(CSLevelGroupUnlockReq structure)
        {
            return new CsTPacket<CSLevelGroupUnlockReq>(CS_CMD_ID.CS_CMD_PLAYER_TRY_LEVEL_GROUP_UNLOCK, structure);
        }

        /// <summary>
        /// 极限猎人怪物查询回复
        /// </summary>
        public static CsTPacket<CSXHunterMonsterRsp> XHunterMonsterRsp(CSXHunterMonsterRsp structure)
        {
            return new CsTPacket<CSXHunterMonsterRsp>(CS_CMD_ID.CS_CMD_XHUNTER_MONSTER_RSP, structure);
        }

        /// <summary>
        /// 超级大连续领取挑战奖励请求
        /// </summary>
        public static CsTPacket<CSSuperSeriesGainChallangeRewardReq> SuperSeriesGainChallangeRewardReq(
            CSSuperSeriesGainChallangeRewardReq structure)
        {
            return new CsTPacket<CSSuperSeriesGainChallangeRewardReq>(CS_CMD_ID.CS_CMD_SUPER_GAIN_CHALLANGE_REWARD_REQ,
                structure);
        }

        /// <summary>
        /// 超级大连续领取挑战奖励响应
        /// </summary>
        public static CsTPacket<CSSuperSeriesGainChallangeRewardRsp> SuperSeriesGainChallangeRewardRsp(
            CSSuperSeriesGainChallangeRewardRsp structure)
        {
            return new CsTPacket<CSSuperSeriesGainChallangeRewardRsp>(CS_CMD_ID.CS_CMD_SUPER_GAIN_CHALLANGE_REWARD_RSP,
                structure);
        }

        /// <summary>
        /// 超级大连续领取成功奖励请求
        /// </summary>
        public static CsTPacket<CSSuperSeriesGainSuccessRewardReq> SuperSeriesGainSuccessRewardReq(
            CSSuperSeriesGainSuccessRewardReq structure)
        {
            return new CsTPacket<CSSuperSeriesGainSuccessRewardReq>(CS_CMD_ID.CS_CMD_SUPER_GAIN_SUCCESS_REWARD_REQ,
                structure);
        }

        /// <summary>
        /// 超级大连续领取成功奖励响应
        /// </summary>
        public static CsTPacket<CSSuperSeriesGainSuccessRewardRsp> SuperSeriesGainSuccessRewardRsp(
            CSSuperSeriesGainSuccessRewardRsp structure)
        {
            return new CsTPacket<CSSuperSeriesGainSuccessRewardRsp>(CS_CMD_ID.CS_CMD_SUPER_GAIN_SUCCESS_REWARD_RSP,
                structure);
        }

        /// <summary>
        /// 超级大连续获取信息
        /// </summary>
        public static CsTPacket<CSSuperSeriesGetInfoReq> SuperSeriesGetInfoReq(CSSuperSeriesGetInfoReq structure)
        {
            return new CsTPacket<CSSuperSeriesGetInfoReq>(CS_CMD_ID.CS_CMD_SUPER_GET_INFO_REQ, structure);
        }

        /// <summary>
        /// 超级大连续获取信息
        /// </summary>
        public static CsTPacket<CSSuperSeriesGetInfoRsp> SuperSeriesGetInfoRsp(CSSuperSeriesGetInfoRsp structure)
        {
            return new CsTPacket<CSSuperSeriesGetInfoRsp>(CS_CMD_ID.CS_CMD_SUPER_GET_INFO_RSP, structure);
        }

        public static CsTPacket<CSFarmCDDecreaseReq> FarmCDDecreaseReq(CSFarmCDDecreaseReq structure)
        {
            return new CsTPacket<CSFarmCDDecreaseReq>(CS_CMD_ID.CS_CMD_FARM_CD_DECREASR_REQ, structure);
        }

        public static CsTPacket<CSFarmCDDecreaseRsp> FarmCDDecreaseRsp(CSFarmCDDecreaseRsp structure)
        {
            return new CsTPacket<CSFarmCDDecreaseRsp>(CS_CMD_ID.CS_CMD_FARM_CD_DECREASR_RSP, structure);
        }

        public static CsTPacket<CSFarmEquipAvatarReq> FarmEquipAvatarReq(CSFarmEquipAvatarReq structure)
        {
            return new CsTPacket<CSFarmEquipAvatarReq>(CS_CMD_ID.CS_CMD_FARM_EQUIP_AVATAR_REQ, structure);
        }

        public static CsTPacket<CSFarmEquipAvatarRsp> FarmEquipAvatarRsp(CSFarmEquipAvatarRsp structure)
        {
            return new CsTPacket<CSFarmEquipAvatarRsp>(CS_CMD_ID.CS_CMD_FARM_EQUIP_AVATAR_RSP, structure);
        }

        public static CsTPacket<CSFarmSetEquipAvatarReq> FarmSetEquipAvatarReq(CSFarmSetEquipAvatarReq structure)
        {
            return new CsTPacket<CSFarmSetEquipAvatarReq>(CS_CMD_ID.CS_CMD_FARM_SET_EQUIP_AVATAR_REQ, structure);
        }

        public static CsTPacket<CSFarmEquipAvatarRsp> FarmSetEquipAvatarNtf(CSFarmEquipAvatarRsp structure)
        {
            return new CsTPacket<CSFarmEquipAvatarRsp>(CS_CMD_ID.CS_CMD_FARM_SET_EQUIP_AVATAR_NTF, structure);
        }

        public static CsTPacket<CSFarmEquipAvatarRsp> FarmWoodIndexIDMappingNtf(CSFarmEquipAvatarRsp structure)
        {
            return new CsTPacket<CSFarmEquipAvatarRsp>(CS_CMD_ID.CS_CMD_FARM_WOOD_INDEX_ID_MAPPING_NTF, structure);
        }

        /// <summary>
        /// 猫猫宝藏
        /// </summary>
        public static CsTPacket<CSCatTreatureInfo> CatTreatureInfo(CSCatTreatureInfo structure)
        {
            return new CsTPacket<CSCatTreatureInfo>(CS_CMD_ID.CS_CMD_CATTREATURE_INFO, structure);
        }

        /// <summary>
        /// 开启宝藏
        /// </summary>
        public static CsTPacket<CSCatTreatureOpen> CatTreatureOpen(CSCatTreatureOpen structure)
        {
            return new CsTPacket<CSCatTreatureOpen>(CS_CMD_ID.CS_CMD_CATTREATURE_OPEN, structure);
        }

        /// <summary>
        /// 开启宝藏错误
        /// </summary>
        public static CsTPacket<CSCatTreatureErr> CatTreatureErr(CSCatTreatureErr structure)
        {
            return new CsTPacket<CSCatTreatureErr>(CS_CMD_ID.CS_CMD_CATTREATURE_ERR, structure);
        }

        /// <summary>
        /// 追踪REQ
        /// </summary>
        public static CsTPacket<CSTraceReq> TraceReq(CSTraceReq structure)
        {
            return new CsTPacket<CSTraceReq>(CS_CMD_ID.CS_CMD_TRACE_REQ, structure);
        }

        /// <summary>
        /// 发言文字
        /// </summary>
        public static CsTPacket<C2SSpeakWord> C2SSpeakWord(C2SSpeakWord structure)
        {
            return new CsTPacket<C2SSpeakWord>(CS_CMD_ID.C2S_CMD_SPEAK_WORD, structure);
        }

        /// <summary>
        /// 发言执行
        /// </summary>
        public static CsTPacket<C2SSpeakExec> C2SSpeakExec(C2SSpeakExec structure)
        {
            return new CsTPacket<C2SSpeakExec>(CS_CMD_ID.C2S_CMD_SPEAK_EXEC, structure);
        }

        /// <summary>
        /// 设置快捷发言
        /// </summary>
        public static CsTPacket<C2SSpeakSetQuick> C2SSpeakSetQuick(C2SSpeakSetQuick structure)
        {
            return new CsTPacket<C2SSpeakSetQuick>(CS_CMD_ID.C2S_CMD_SPEAK_SETQUICK, structure);
        }

        /// <summary>
        /// 设置自定义发言
        /// </summary>
        public static CsTPacket<C2SSpeakSetSelfDef> C2SSpeakSetSelfDef(C2SSpeakSetSelfDef structure)
        {
            return new CsTPacket<C2SSpeakSetSelfDef>(CS_CMD_ID.C2S_CMD_SPEAK_SETSELFDEF, structure);
        }

        /// <summary>
        /// 设置自动发言
        /// </summary>
        public static CsTPacket<C2SSpeakSetAuto> C2SSpeakSetAuto(C2SSpeakSetAuto structure)
        {
            return new CsTPacket<C2SSpeakSetAuto>(CS_CMD_ID.C2S_CMD_SPEAK_SETAUTO, structure);
        }

        /// <summary>
        /// 自动发言自定义语句
        /// </summary>
        public static CsTPacket<C2SSpeakContent> C2SSpeakContent(C2SSpeakContent structure)
        {
            return new CsTPacket<C2SSpeakContent>(CS_CMD_ID.C2S_CMD_SPEAK_CONTENT, structure);
        }

        /// <summary>
        /// 发言文字
        /// </summary>
        public static CsTPacket<S2CSpeakWord> S2CSpeakWord(S2CSpeakWord structure)
        {
            return new CsTPacket<S2CSpeakWord>(CS_CMD_ID.S2C_CMD_SPEAK_WORD, structure);
        }

        /// <summary>
        /// 发言执行
        /// </summary>
        public static CsTPacket<S2CSpeakExec> S2CSpeakExec(S2CSpeakExec structure)
        {
            return new CsTPacket<S2CSpeakExec>(CS_CMD_ID.S2C_CMD_SPEAK_EXEC, structure);
        }

        /// <summary>
        /// 设置快捷发言
        /// </summary>
        public static CsTPacket<S2CSpeakSetQuick> S2CSpeakSetQuick(S2CSpeakSetQuick structure)
        {
            return new CsTPacket<S2CSpeakSetQuick>(CS_CMD_ID.S2C_CMD_SPEAK_SETQUICK, structure);
        }

        /// <summary>
        /// 设置自定义发言
        /// </summary>
        public static CsTPacket<S2CSpeakSetSelfDef> S2CSpeakSetSelfDef(S2CSpeakSetSelfDef structure)
        {
            return new CsTPacket<S2CSpeakSetSelfDef>(CS_CMD_ID.S2C_CMD_SPEAK_SETSELFDEF, structure);
        }

        /// <summary>
        /// 设置自动发言
        /// </summary>
        public static CsTPacket<S2CSpeakSetAuto> S2CSpeakSetAuto(S2CSpeakSetAuto structure)
        {
            return new CsTPacket<S2CSpeakSetAuto>(CS_CMD_ID.S2C_CMD_SPEAK_SETAUTO, structure);
        }

        /// <summary>
        /// 自动发言自定义语句
        /// </summary>
        public static CsTPacket<S2CSpeakContent> S2CSpeakContent(S2CSpeakContent structure)
        {
            return new CsTPacket<S2CSpeakContent>(CS_CMD_ID.S2C_CMD_SPEAK_CONTENT, structure);
        }

        /// <summary>
        /// 快捷发言错误
        /// </summary>
        public static CsTPacket<S2CSpeakErr> S2CSpeakErr(S2CSpeakErr structure)
        {
            return new CsTPacket<S2CSpeakErr>(CS_CMD_ID.S2C_CMD_SPEAK_ERR, structure);
        }

        /// <summary>
        /// 星蕴石修复
        /// </summary>
        public static CsTPacket<CStarStoneRepairReq> StarStoneRepairReq(CStarStoneRepairReq structure)
        {
            return new CsTPacket<CStarStoneRepairReq>(CS_CMD_ID.CS_CMD_STARSTONE_REPAIR_REQ, structure);
        }

        /// <summary>
        /// 星蕴石修复
        /// </summary>
        public static CsTPacket<CStarStoneRepairRsp> StarStoneRepairRsp(CStarStoneRepairRsp structure)
        {
            return new CsTPacket<CStarStoneRepairRsp>(CS_CMD_ID.CS_CMD_STARSTONE_REPAIR_RSP, structure);
        }

        /// <summary>
        /// 星蕴石培养
        /// </summary>
        public static CsTPacket<CSStarStoneFeedReq> StarStoneFeedReq(CSStarStoneFeedReq structure)
        {
            return new CsTPacket<CSStarStoneFeedReq>(CS_CMD_ID.CS_CMD_STARSTONE_FEED_REQ, structure);
        }

        /// <summary>
        /// 星蕴石培养返回
        /// </summary>
        public static CsTPacket<CSStarStoneFeedRsp> StarStoneFeedRsp(CSStarStoneFeedRsp structure)
        {
            return new CsTPacket<CSStarStoneFeedRsp>(CS_CMD_ID.CS_CMD_STARSTONE_FEED_RSP, structure);
        }

        /// <summary>
        /// 星蕴石注入
        /// </summary>
        public static CsTPacket<CSStarStoneInsertReq> StarStoneInsertReq(CSStarStoneInsertReq structure)
        {
            return new CsTPacket<CSStarStoneInsertReq>(CS_CMD_ID.CS_CMD_STARSTONE_INSERT_REQ, structure);
        }

        /// <summary>
        /// 星蕴石注入结果属性
        /// </summary>
        public static CsTPacket<CSStarStoneInsertRsp> StarStoneInsertRsp(CSStarStoneInsertRsp structure)
        {
            return new CsTPacket<CSStarStoneInsertRsp>(CS_CMD_ID.CS_CMD_STARSTONE_INSERT_RSP, structure);
        }

        /// <summary>
        /// 投降投票请求
        /// </summary>
        public static CsTPacket<CSSurrenderVoteReq> SurrenderVoteReq(CSSurrenderVoteReq structure)
        {
            return new CsTPacket<CSSurrenderVoteReq>(CS_CMD_ID.CS_CMD_SURRENDER_VOTE_REQ, structure);
        }

        /// <summary>
        /// 投降投票应答
        /// </summary>
        public static CsTPacket<CSSurrenderVoteRsp> SurrenderVoteRsp(CSSurrenderVoteRsp structure)
        {
            return new CsTPacket<CSSurrenderVoteRsp>(CS_CMD_ID.CS_CMD_SURRENDER_VOTE_RSP, structure);
        }

        /// <summary>
        /// 投降投票通知
        /// </summary>
        public static CsTPacket<CSSurrenderVoteNtf> SurrenderVoteNtf(CSSurrenderVoteNtf structure)
        {
            return new CsTPacket<CSSurrenderVoteNtf>(CS_CMD_ID.CS_CMD_SURRENDER_VOTE_NTF, structure);
        }

        /// <summary>
        /// 投降投票结果通知
        /// </summary>
        public static CsTPacket<CSSurrenderResultNtf> SurrenderResultNtf(CSSurrenderResultNtf structure)
        {
            return new CsTPacket<CSSurrenderResultNtf>(CS_CMD_ID.CS_CMD_SURRENDER_RESULT_NTF, structure);
        }

        /// <summary>
        /// 申请指挥官应答
        /// </summary>
        public static CsTPacket<CSApplyForCommanderRsp> ApplyForCommanderRsp(CSApplyForCommanderRsp structure)
        {
            return new CsTPacket<CSApplyForCommanderRsp>(CS_CMD_ID.CS_CMD_APPLY_FOR_COMMANDER_RSP, structure);
        }

        /// <summary>
        /// 退出指挥官应答
        /// </summary>
        public static CsTPacket<CSQuitCommanderRsp> QuitCommanderRsp(CSQuitCommanderRsp structure)
        {
            return new CsTPacket<CSQuitCommanderRsp>(CS_CMD_ID.CS_CMD_QUIT_COMMANDER_RSP, structure);
        }

        /// <summary>
        /// 极限猎人结果通知
        /// </summary>
        public static CsTPacket<CSXHunterResultNtf> XHunterResultNtf(CSXHunterResultNtf structure)
        {
            return new CsTPacket<CSXHunterResultNtf>(CS_CMD_ID.CS_CMD_XHUNTER_RESULT_NTF, structure);
        }

        /// <summary>
        /// 指挥官应答
        /// </summary>
        public static CsTPacket<CSGetCommanderRsp> GetCommanderRsp(CSGetCommanderRsp structure)
        {
            return new CsTPacket<CSGetCommanderRsp>(CS_CMD_ID.CS_CMD_GET_COMMANDER_RSP, structure);
        }

        /// <summary>
        /// 指挥官变更通知
        /// </summary>
        public static CsTPacket<CSCommanderChgNtf> CommanderChgNtf(CSCommanderChgNtf structure)
        {
            return new CsTPacket<CSCommanderChgNtf>(CS_CMD_ID.CS_CMD_COMMANDER_CHG_NTF, structure);
        }

        /// <summary>
        /// 副本惩罚通知
        /// </summary>
        public static CsTPacket<CSBattlePunishNtf> BattlePunishNtf(CSBattlePunishNtf structure)
        {
            return new CsTPacket<CSBattlePunishNtf>(CS_CMD_ID.CS_CMD_BATTLE_PUNISH_NTF, structure);
        }

        /// <summary>
        /// 向world请求支付
        /// </summary>
        public static CsTPacket<CSWorldPayReq> WorldPayReq(CSWorldPayReq structure)
        {
            return new CsTPacket<CSWorldPayReq>(CS_CMD_ID.CS_CMD_WORLD_PAY_REQ, structure);
        }

        /// <summary>
        /// Account请求数据
        /// </summary>
        public static CsTPacket<CSAccountReq> AccountReq(CSAccountReq structure)
        {
            return new CsTPacket<CSAccountReq>(CS_CMD_ID.CS_CMD_WORLD_ACCOUNT_REQ, structure);
        }

        /// <summary>
        /// 向world请求支付
        /// </summary>
        public static CsTPacket<SCWorldPayRsp> WorldPayRsp(SCWorldPayRsp structure)
        {
            return new CsTPacket<SCWorldPayRsp>(CS_CMD_ID.SC_CMD_WORLD_PAY_RSP, structure);
        }

        /// <summary>
        /// Account请求数据
        /// </summary>
        public static CsTPacket<SCAccountRsp> AccountRsp(SCAccountRsp structure)
        {
            return new CsTPacket<SCAccountRsp>(CS_CMD_ID.SC_CMD_WORLD_ACCOUNT_RSP, structure);
        }

        /// <summary>
        /// 副本奖励结算请求
        /// </summary>
        public static CsTPacket<CSInstanceResultReq> InstanceResultReq(CSInstanceResultReq structure)
        {
            return new CsTPacket<CSInstanceResultReq>(CS_CMD_ID.CS_CMD_BATTLE_RESULT_REQ, structure);
        }

        /// <summary>
        /// 副本奖励结算响应
        /// </summary>
        public static CsTPacket<CSInstanceResultRsp> InstanceResultRsp(CSInstanceResultRsp structure)
        {
            return new CsTPacket<CSInstanceResultRsp>(CS_CMD_ID.CS_CMD_BATTLE_RESULT_RSP, structure);
        }

        /// <summary>
        /// 精彩等级同步
        /// </summary>
        public static CsTPacket<CSExcellentPointNtf> ExcellentPointNtf(CSExcellentPointNtf structure)
        {
            return new CsTPacket<CSExcellentPointNtf>(CS_CMD_ID.CS_CMD_EXCELLENT_POINT_NTF, structure);
        }

        /// <summary>
        /// 杀死或者捕获怪物尺寸
        /// </summary>
        public static CsTPacket<CSMonsterSizeNtf> MonsterSizeNtf(CSMonsterSizeNtf structure)
        {
            return new CsTPacket<CSMonsterSizeNtf>(CS_CMD_ID.CS_CMD_MONSTER_SIZE_NTF, structure);
        }

        /// <summary>
        /// 使用券领取奖励
        /// </summary>
        public static CsTPacket<CSPayHuntingCredit> PayHuntingCreditReq(CSPayHuntingCredit structure)
        {
            return new CsTPacket<CSPayHuntingCredit>(CS_CMD_ID.CS_CMD_BATTLE_PAYHUNTINGCREDIT_REQ, structure);
        }

        /// <summary>
        /// 使用券领取奖励响应
        /// </summary>
        public static CsTPacket<CSPayHuntingRsp> PayHuntingCreditRsp(CSPayHuntingRsp structure)
        {
            return new CsTPacket<CSPayHuntingRsp>(CS_CMD_ID.CS_CMD_BATTLE_PAYHUNTINGCREDIT_RSP, structure);
        }

        /// <summary>
        /// 艾露挖掘请求
        /// </summary>
        public static CsTPacket<CSExtraCatRewardReq> ExtraCatRewardReq(CSExtraCatRewardReq structure)
        {
            return new CsTPacket<CSExtraCatRewardReq>(CS_CMD_ID.CS_CMD_BATTLE_CATEXTRA_REWARD_REQ, structure);
        }

        /// <summary>
        /// 艾露挖掘响应
        /// </summary>
        public static CsTPacket<CSExtraCatRewardRsp> ExtraCatRewardRsp(CSExtraCatRewardRsp structure)
        {
            return new CsTPacket<CSExtraCatRewardRsp>(CS_CMD_ID.CS_CMD_BATTLE_CATEXTRA_REWARD_RSP, structure);
        }

        /// <summary>
        /// 艾露挖掘列表请求
        /// </summary>
        public static CsTPacket<CSExtraRewardListReq> ExtraCatRewardListReq(CSExtraRewardListReq structure)
        {
            return new CsTPacket<CSExtraRewardListReq>(CS_CMD_ID.CS_CMD_BATTLE_CATEXTRA_REWARD_LIST_REQ, structure);
        }

        /// <summary>
        /// 艾露挖掘列表响应
        /// </summary>
        public static CsTPacket<CSExtraRewardListRsp> ExtraCatRewardListRsp(CSExtraRewardListRsp structure)
        {
            return new CsTPacket<CSExtraRewardListRsp>(CS_CMD_ID.CS_CMD_BATTLE_CATEXTRA_REWARD_LIST_RSP, structure);
        }

        /// <summary>
        /// 艾露挖掘重置请求
        /// </summary>
        public static CsTPacket<CSExtraRewardListReq> ExtraCatRewardResetReq(CSExtraRewardListReq structure)
        {
            return new CsTPacket<CSExtraRewardListReq>(CS_CMD_ID.CS_CMD_BATTLE_CATEXTRA_REWARD_RESET_REQ, structure);
        }

        /// <summary>
        /// 艾露挖掘重置响应
        /// </summary>
        public static CsTPacket<CSExtraRewardListRsp> ExtraCatRewardResetRsp(CSExtraRewardListRsp structure)
        {
            return new CsTPacket<CSExtraRewardListRsp>(CS_CMD_ID.CS_CMD_BATTLE_CATEXTRA_REWARD_RESET_RSP, structure);
        }

        /// <summary>
        /// 猎人教官点赞请求
        /// </summary>
        public static CsTPacket<CSLikeHunterOfficerReq> LikeHunterOfficerReq(CSLikeHunterOfficerReq structure)
        {
            return new CsTPacket<CSLikeHunterOfficerReq>(CS_CMD_ID.CS_CMD_LIKE_HUNTER_OFFICER_REQ, structure);
        }

        /// <summary>
        /// 猎人教官点赞回复
        /// </summary>
        public static CsTPacket<CSLikeHunterOfficerRsp> LikeHunterOfficerRsp(CSLikeHunterOfficerRsp structure)
        {
            return new CsTPacket<CSLikeHunterOfficerRsp>(CS_CMD_ID.CS_CMD_LIKE_HUNTER_OFFICER_RSP, structure);
        }

        /// <summary>
        /// 套装技能编辑请求
        /// </summary>
        public static CsTPacket<CSSuitSkillUnlockReq> SuitSkillUnlockReq(CSSuitSkillUnlockReq structure)
        {
            return new CsTPacket<CSSuitSkillUnlockReq>(CS_CMD_ID.CS_CMD_SUITSKILL_UNLOCK_REQ, structure);
        }

        /// <summary>
        /// 套装技能编辑响应
        /// </summary>
        public static CsTPacket<CSSuitSkillUnlockRsp> SuitSkillUnlockRsp(CSSuitSkillUnlockRsp structure)
        {
            return new CsTPacket<CSSuitSkillUnlockRsp>(CS_CMD_ID.CS_CMD_SUITSKILL_UNLOCK_RSP, structure);
        }

        /// <summary>
        /// 套装技能编辑请求
        /// </summary>
        public static CsTPacket<CSSuitSkillEditReq> SuitSkillEditReq(CSSuitSkillEditReq structure)
        {
            return new CsTPacket<CSSuitSkillEditReq>(CS_CMD_ID.CS_CMD_SUITSKILL_EDIT_REQ, structure);
        }

        /// <summary>
        /// 套装技能编辑响应
        /// </summary>
        public static CsTPacket<CSSuitSkillEditRsp> SuitSkillEditRsp(CSSuitSkillEditRsp structure)
        {
            return new CsTPacket<CSSuitSkillEditRsp>(CS_CMD_ID.CS_CMD_SUITSKILL_EDIT_RSP, structure);
        }

        /// <summary>
        /// 套装技能编辑次数刷新
        /// </summary>
        public static CsTPacket<CSSuitSkillCntRefreshNtf> SuitSkillRefreshNtf(CSSuitSkillCntRefreshNtf structure)
        {
            return new CsTPacket<CSSuitSkillCntRefreshNtf>(CS_CMD_ID.CS_CMD_SUITSKILL_REFRESH_NTF, structure);
        }

        /// <summary>
        /// 答题
        /// </summary>
        public static CsTPacket<C2SAstrolabeAnswer> C2SAstrolabeAnswer(C2SAstrolabeAnswer structure)
        {
            return new CsTPacket<C2SAstrolabeAnswer>(CS_CMD_ID.C2S_CMD_ASTROLABE_ANSWER, structure);
        }

        /// <summary>
        /// 星盘点亮
        /// </summary>
        public static CsTPacket<C2SAstrolabeLighten> C2SAstrolabeLighten(C2SAstrolabeLighten structure)
        {
            return new CsTPacket<C2SAstrolabeLighten>(CS_CMD_ID.C2S_CMD_ASTROLABE_LIGHTEN, structure);
        }

        /// <summary>
        /// 星盘随机点亮
        /// </summary>
        public static CsTPacket<C2SAstrolabeRngLighten> C2SAstrolabeRngLighten(C2SAstrolabeRngLighten structure)
        {
            return new CsTPacket<C2SAstrolabeRngLighten>(CS_CMD_ID.C2S_CMD_ASTROLABE_RNGLIGHTEN, structure);
        }

        /// <summary>
        /// 请求题目
        /// </summary>
        public static CsTPacket<C2SAstrolabeGetSubject> C2SAstrolabeGetSubject(C2SAstrolabeGetSubject structure)
        {
            return new CsTPacket<C2SAstrolabeGetSubject>(CS_CMD_ID.C2S_CMD_ASTROLABE_GETSUBJECT, structure);
        }

        /// <summary>
        /// 手动重置
        /// </summary>
        public static CsTPacket<C2SAstrolabeRManualReset> C2SAstrolabeRManualReset(C2SAstrolabeRManualReset structure)
        {
            return new CsTPacket<C2SAstrolabeRManualReset>(CS_CMD_ID.C2S_CMD_ASTROLABE_MANUALRESET, structure);
        }

        /// <summary>
        /// 接取任务
        /// </summary>
        public static CsTPacket<C2SAstrolabeAcceptTask> C2SAstrolabeAcceptTask(C2SAstrolabeAcceptTask structure)
        {
            return new CsTPacket<C2SAstrolabeAcceptTask>(CS_CMD_ID.C2S_CMD_ASTROLABE_ACCEPTTASK, structure);
        }

        /// <summary>
        /// 提交任务
        /// </summary>
        public static CsTPacket<C2SAstrolabeSubmitTask> C2SAstrolabeSubmitTask(C2SAstrolabeSubmitTask structure)
        {
            return new CsTPacket<C2SAstrolabeSubmitTask>(CS_CMD_ID.C2S_CMD_ASTROLABE_SUBMITTASK, structure);
        }

        /// <summary>
        /// 刷新任务
        /// </summary>
        public static CsTPacket<C2SAstrolabeRefreshTask> C2SAstrolabeRefreshTask(C2SAstrolabeRefreshTask structure)
        {
            return new CsTPacket<C2SAstrolabeRefreshTask>(CS_CMD_ID.C2S_CMD_ASTROLABE_REFRESHTASK, structure);
        }

        /// <summary>
        /// 购买天任务组
        /// </summary>
        public static CsTPacket<C2SAstrolabeBuyDayTask> C2SAstrolabeBuyDayTask(C2SAstrolabeBuyDayTask structure)
        {
            return new CsTPacket<C2SAstrolabeBuyDayTask>(CS_CMD_ID.C2S_CMD_ASTROLABE_BUYDAYTASK, structure);
        }

        /// <summary>
        /// 答题
        /// </summary>
        public static CsTPacket<S2CAstrolabeAnswer> S2CAstrolabeAnswer(S2CAstrolabeAnswer structure)
        {
            return new CsTPacket<S2CAstrolabeAnswer>(CS_CMD_ID.S2C_CMD_ASTROLABE_ANSWER, structure);
        }

        /// <summary>
        /// 星盘错误
        /// </summary>
        public static CsTPacket<S2CAstrolabeErr> S2CAstrolabeErr(S2CAstrolabeErr structure)
        {
            return new CsTPacket<S2CAstrolabeErr>(CS_CMD_ID.S2C_CMD_ASTROLABE_ERR, structure);
        }

        /// <summary>
        /// 星盘重置
        /// </summary>
        public static CsTPacket<S2CAstrolabeReset> S2CAstrolabeReset(S2CAstrolabeReset structure)
        {
            return new CsTPacket<S2CAstrolabeReset>(CS_CMD_ID.S2C_CMD_ASTROLABE_RESET, structure);
        }

        /// <summary>
        /// 星盘点亮
        /// </summary>
        public static CsTPacket<S2CAstrolabeLighten> S2CAstrolabeLighten(S2CAstrolabeLighten structure)
        {
            return new CsTPacket<S2CAstrolabeLighten>(CS_CMD_ID.S2C_CMD_ASTROLABE_LIGHTEN, structure);
        }

        /// <summary>
        /// 请求题目
        /// </summary>
        public static CsTPacket<S2CAstrolabeGetSubject> S2CAstrolabeGetSubject(S2CAstrolabeGetSubject structure)
        {
            return new CsTPacket<S2CAstrolabeGetSubject>(CS_CMD_ID.S2C_CMD_ASTROLABE_GETSUBJECT, structure);
        }

        /// <summary>
        /// 开启星盘
        /// </summary>
        public static CsTPacket<S2CAstrolabeOpen> S2CAstrolabeOpen(S2CAstrolabeOpen structure)
        {
            return new CsTPacket<S2CAstrolabeOpen>(CS_CMD_ID.S2C_CMD_ASTROLABE_OPEN, structure);
        }

        /// <summary>
        /// 手动重置
        /// </summary>
        public static CsTPacket<S2CAstrolabeRManualReset> S2CAstrolabeRManualReset(S2CAstrolabeRManualReset structure)
        {
            return new CsTPacket<S2CAstrolabeRManualReset>(CS_CMD_ID.S2C_CMD_ASTROLABE_MANUALRESET, structure);
        }

        /// <summary>
        /// 通知
        /// </summary>
        public static CsTPacket<S2CAstrolabeNotify> S2CAstrolabeNotify(S2CAstrolabeNotify structure)
        {
            return new CsTPacket<S2CAstrolabeNotify>(CS_CMD_ID.S2C_CMD_ASTROLABE_NOTIFY, structure);
        }

        /// <summary>
        /// 怒气数据更新通知
        /// </summary>
        public static CsTPacket<S2CRageDataNotify> S2CRageDataNotify(S2CRageDataNotify structure)
        {
            return new CsTPacket<S2CRageDataNotify>(CS_CMD_ID.S2C_CMD_RAGE_DATA_NOTIFY, structure);
        }

        /// <summary>
        /// 刷新任务
        /// </summary>
        public static CsTPacket<S2CAstrolabeRefreshTask> S2CAstrolabeRefreshTask(S2CAstrolabeRefreshTask structure)
        {
            return new CsTPacket<S2CAstrolabeRefreshTask>(CS_CMD_ID.S2C_CMD_ASTROLABE_REFRESHTASK, structure);
        }

        /// <summary>
        /// 购买天任务组
        /// </summary>
        public static CsTPacket<S2CAstrolabeBuyDayTask> S2CAstrolabeBuyDayTask(S2CAstrolabeBuyDayTask structure)
        {
            return new CsTPacket<S2CAstrolabeBuyDayTask>(CS_CMD_ID.S2C_CMD_ASTROLABE_BUYDAYTASK, structure);
        }

        /// <summary>
        /// 升级
        /// </summary>
        public static CsTPacket<C2SSoulStoneLevelUp> C2SSoulStoneLevelUp(C2SSoulStoneLevelUp structure)
        {
            return new CsTPacket<C2SSoulStoneLevelUp>(CS_CMD_ID.C2S_CMD_SOULSTONE_LEVELUP, structure);
        }

        /// <summary>
        /// 进阶
        /// </summary>
        public static CsTPacket<C2SSoulStoneStageUp> C2SSoulStoneStageUp(C2SSoulStoneStageUp structure)
        {
            return new CsTPacket<C2SSoulStoneStageUp>(CS_CMD_ID.C2S_CMD_SOULSTONE_STAGEUP, structure);
        }

        /// <summary>
        /// 重置
        /// </summary>
        public static CsTPacket<C2SSoulStoneReset> C2SSoulStoneReset(C2SSoulStoneReset structure)
        {
            return new CsTPacket<C2SSoulStoneReset>(CS_CMD_ID.C2S_CMD_SOULSTONE_RESET, structure);
        }

        /// <summary>
        /// 属性升级
        /// </summary>
        public static CsTPacket<C2SSoulStoneAttrUpgrade> C2SSoulStoneAttrUpgrade(C2SSoulStoneAttrUpgrade structure)
        {
            return new CsTPacket<C2SSoulStoneAttrUpgrade>(CS_CMD_ID.C2S_CMD_SOULSTONE_ATTRUPGRADE, structure);
        }

        /// <summary>
        /// 阶段解锁
        /// </summary>
        public static CsTPacket<C2SSoulStoneUnlockStage> C2SSoulStoneUnlockStage(C2SSoulStoneUnlockStage structure)
        {
            return new CsTPacket<C2SSoulStoneUnlockStage>(CS_CMD_ID.C2S_CMD_SOULSTONE_UNLOCKSTAGE, structure);
        }

        /// <summary>
        /// 狩魂兽解锁
        /// </summary>
        public static CsTPacket<C2SSoulBeastUnlock> C2SSoulBeastUnlock(C2SSoulBeastUnlock structure)
        {
            return new CsTPacket<C2SSoulBeastUnlock>(CS_CMD_ID.C2S_CMD_SOULBEAST_UNLOCK, structure);
        }

        /// <summary>
        /// 狩魂兽喂食
        /// </summary>
        public static CsTPacket<C2SSoulBeastFeed> C2SSoulBeastFeed(C2SSoulBeastFeed structure)
        {
            return new CsTPacket<C2SSoulBeastFeed>(CS_CMD_ID.C2S_CMD_SOULBEAST_FEED, structure);
        }

        /// <summary>
        /// 狩魂兽跟随
        /// </summary>
        public static CsTPacket<C2SSoulBeastFollow> C2SSoulBeastFollow(C2SSoulBeastFollow structure)
        {
            return new CsTPacket<C2SSoulBeastFollow>(CS_CMD_ID.C2S_CMD_SOULBEAST_FOLLOW, structure);
        }

        /// <summary>
        /// 狩魂兽取消跟随
        /// </summary>
        public static CsTPacket<C2SSoulBeastUnFollow> C2SSoulBeastUnFollow(C2SSoulBeastUnFollow structure)
        {
            return new CsTPacket<C2SSoulBeastUnFollow>(CS_CMD_ID.C2S_CMD_SOULBEAST_UNFOLLOW, structure);
        }

        /// <summary>
        /// 狩魂兽进化
        /// </summary>
        public static CsTPacket<C2SSoulBeastEvolve> C2SSoulBeastEvolve(C2SSoulBeastEvolve structure)
        {
            return new CsTPacket<C2SSoulBeastEvolve>(CS_CMD_ID.C2S_CMD_SOULBEAST_EVOLVE, structure);
        }

        /// <summary>
        /// 狩魂兽设置形象
        /// </summary>
        public static CsTPacket<C2SSoulBeastSetImage> C2SSoulBeastSetImage(C2SSoulBeastSetImage structure)
        {
            return new CsTPacket<C2SSoulBeastSetImage>(CS_CMD_ID.C2S_CMD_SOULBEAST_SETIMAGE, structure);
        }

        /// <summary>
        /// 狩魂兽交互请求
        /// </summary>
        public static CsTPacket<C2SSoulBeastInteractReq> C2SSoulBeastInteractReq(C2SSoulBeastInteractReq structure)
        {
            return new CsTPacket<C2SSoulBeastInteractReq>(CS_CMD_ID.C2S_CMD_SOULBEAST_INTERACT_REQ, structure);
        }

        /// <summary>
        /// 狩魂兽重新召唤一下
        /// </summary>
        public static CsTPacket<C2SSoulBeastRespawn> C2SSoulBeastRespawn(C2SSoulBeastRespawn structure)
        {
            return new CsTPacket<C2SSoulBeastRespawn>(CS_CMD_ID.C2S_CMD_SOULBEAST_RESPWAN, structure);
        }

        /// <summary>
        /// 属性升级
        /// </summary>
        public static CsTPacket<S2CSoulStoneAttrUpgrade> S2CSoulStoneAttrUpgrade(S2CSoulStoneAttrUpgrade structure)
        {
            return new CsTPacket<S2CSoulStoneAttrUpgrade>(CS_CMD_ID.S2C_CMD_SOULSTONE_ATTRUPGRADE, structure);
        }

        /// <summary>
        /// 狩魂兽出现通知列表
        /// </summary>
        public static CsTPacket<S2CSoulBeastAppearNtfList> S2CSoulBeastAppearNtfList(
            S2CSoulBeastAppearNtfList structure)
        {
            return new CsTPacket<S2CSoulBeastAppearNtfList>(CS_CMD_ID.S2C_CMD_SOULBEAST_APPEAR_NTF_LIST, structure);
        }

        /// <summary>
        /// 狩魂兽属性同步
        /// </summary>
        public static CsTPacket<S2CSoulBeastAttrSync> S2CSoulBeastAttrSync(S2CSoulBeastAttrSync structure)
        {
            return new CsTPacket<S2CSoulBeastAttrSync>(CS_CMD_ID.S2C_CMD_SOULBEAST_ATTR_SYNC_NTF, structure);
        }

        /// <summary>
        /// 狩魂兽交互同步
        /// </summary>
        public static CsTPacket<S2CSoulBeastInteractNtf> S2CSoulBeastInteractNtf(S2CSoulBeastInteractNtf structure)
        {
            return new CsTPacket<S2CSoulBeastInteractNtf>(CS_CMD_ID.S2C_CMD_SOULBEAST_INTERACT_NTF, structure);
        }

        /// <summary>
        /// 狩魂兽魂值转移请求
        /// </summary>
        public static CsTPacket<C2SSoulBeastExpShift> C2SSoulBeastExpShift(C2SSoulBeastExpShift structure)
        {
            return new CsTPacket<C2SSoulBeastExpShift>(CS_CMD_ID.C2S_CMD_SOULBEAST_EXP_SHIFT_REQ, structure);
        }

        /// <summary>
        /// 升高活动数据
        /// </summary>
        public static CsTPacket<CSGrowHigherInfo> GrowHigherInfo(CSGrowHigherInfo structure)
        {
            return new CsTPacket<CSGrowHigherInfo>(CS_CMD_ID.CS_CMD_GROWHIGHER_INFO, structure);
        }

        /// <summary>
        /// 升高活动请求
        /// </summary>
        public static CsTPacket<CSGrowHigherReq> GrowHigherReq(CSGrowHigherReq structure)
        {
            return new CsTPacket<CSGrowHigherReq>(CS_CMD_ID.CS_CMD_GROWHIGHER_REQ, structure);
        }

        /// <summary>
        /// 升高活动回应
        /// </summary>
        public static CsTPacket<CSGrowHigherRsp> GrowHigherRsp(CSGrowHigherRsp structure)
        {
            return new CsTPacket<CSGrowHigherRsp>(CS_CMD_ID.CS_CMD_GROWHIGHER_RSP, structure);
        }

        /// <summary>
        /// 升高活动数据
        /// </summary>
        public static CsTPacket<CSGrowHigherPetInfo> GrowHigherPetInfo(CSGrowHigherPetInfo structure)
        {
            return new CsTPacket<CSGrowHigherPetInfo>(CS_CMD_ID.CS_CMD_GROWHIGHER_PET_INFO, structure);
        }

        /// <summary>
        /// 广播身高给视野内的其他对象
        /// </summary>
        public static CsTPacket<CSGrowHigherBroad> GrowHigherBroad(CSGrowHigherBroad structure)
        {
            return new CsTPacket<CSGrowHigherBroad>(CS_CMD_ID.CS_CMD_GROWHIGHER_BROAD, structure);
        }

        /// <summary>
        /// 传奇技能珠-镶嵌-请求
        /// </summary>
        public static CsTPacket<CSLegendPearlInlayReq> LegendPearlInlayReq(CSLegendPearlInlayReq structure)
        {
            return new CsTPacket<CSLegendPearlInlayReq>(CS_CMD_ID.C2S_CMD_LEGENDPEARL_INLAY_REQ, structure);
        }

        /// <summary>
        /// 传奇技能珠-镶嵌-回应
        /// </summary>
        public static CsTPacket<CSLegendPearlInlayRsp> LegendPearlInlayRsp(CSLegendPearlInlayRsp structure)
        {
            return new CsTPacket<CSLegendPearlInlayRsp>(CS_CMD_ID.S2C_CMD_LEGENDPEARL_INLAY_RSP, structure);
        }

        /// <summary>
        /// 拆卸传奇技能珠-请求
        /// </summary>
        public static CsTPacket<CSLegendPearlTakeDownReq> LegendPearlTakeDownReq(CSLegendPearlTakeDownReq structure)
        {
            return new CsTPacket<CSLegendPearlTakeDownReq>(CS_CMD_ID.C2S_CMD_LEGENDPEARL_TAKE_DOWN_REQ, structure);
        }

        /// <summary>
        /// 拆卸传奇技能珠-应答
        /// </summary>
        public static CsTPacket<CSLegendPearlTakeDownRsp> LegendPearlTakeDownRsp(CSLegendPearlTakeDownRsp structure)
        {
            return new CsTPacket<CSLegendPearlTakeDownRsp>(CS_CMD_ID.S2C_CMD_LEGENDPEARL_TAKE_DOWN_RSP, structure);
        }

        /// <summary>
        /// 升级传奇技能珠-请求
        /// </summary>
        public static CsTPacket<CSLegendPearlLevelUpReq> LegendPearlLevelUpReq(CSLegendPearlLevelUpReq structure)
        {
            return new CsTPacket<CSLegendPearlLevelUpReq>(CS_CMD_ID.C2S_CMD_LEGENDPEARL_LEVELUP_REQ, structure);
        }

        /// <summary>
        /// 升级传奇技能珠-应答
        /// </summary>
        public static CsTPacket<CSLegendPearlLevelUpRsp> LegendPearlLevelUpRsp(CSLegendPearlLevelUpRsp structure)
        {
            return new CsTPacket<CSLegendPearlLevelUpRsp>(CS_CMD_ID.S2C_CMD_LEGENDPEARL_LEVELUP_RSP, structure);
        }

        /// <summary>
        /// 传奇技能珠-确认替换修正属性-请求
        /// </summary>
        public static CsTPacket<CSLegendPearlConfirmReplaceAbilityReq> LegendPearlConfirmReplaceAbilityReq(
            CSLegendPearlConfirmReplaceAbilityReq structure)
        {
            return new CsTPacket<CSLegendPearlConfirmReplaceAbilityReq>(
                CS_CMD_ID.C2S_CMD_LEGENDPEARL_CONFIRM_REPLACE_ABILITY_REQ, structure);
        }

        /// <summary>
        /// 传奇技能珠-确认替换修正属性-应答
        /// </summary>
        public static CsTPacket<CSLegendPearlConfirmReplaceAbilityRsp> LegendPearlConfirmReplaceAbilityRsp(
            CSLegendPearlConfirmReplaceAbilityRsp structure)
        {
            return new CsTPacket<CSLegendPearlConfirmReplaceAbilityRsp>(
                CS_CMD_ID.S2C_CMD_LEGENDPEARL_CONFIRM_REPLACE_ABILITY_RSP, structure);
        }

        /// <summary>
        /// 传奇技能珠派生-请求
        /// </summary>
        public static CsTPacket<CSLegendPearlRebuildUpgradeReq> LegendPearlRebuildUpgradeReq(
            CSLegendPearlRebuildUpgradeReq structure)
        {
            return new CsTPacket<CSLegendPearlRebuildUpgradeReq>(CS_CMD_ID.C2S_CMD_LEGENDPEARL_UPGRADE_REQ, structure);
        }

        /// <summary>
        /// 传奇技能珠派生—应答
        /// </summary>
        public static CsTPacket<CSLegendPearlRebuildUpgradeRes> LegendPearlRebuildUpgradeRes(
            CSLegendPearlRebuildUpgradeRes structure)
        {
            return new CsTPacket<CSLegendPearlRebuildUpgradeRes>(CS_CMD_ID.S2C_CMD_LEGENDPEARL_UPGRADE_RSP, structure);
        }

        /// <summary>
        /// 银币收纳箱提取-请求
        /// </summary>
        public static CsTPacket<CSStorageBoxFetchSilverReq> StorageBoxFetchSilverReq(
            CSStorageBoxFetchSilverReq structure)
        {
            return new CsTPacket<CSStorageBoxFetchSilverReq>(CS_CMD_ID.C2S_CMD_SILVERBOX_FETCH_REQ, structure);
        }

        /// <summary>
        /// 银币收纳箱提取-回应
        /// </summary>
        public static CsTPacket<CSStorageBoxFetchSilverRsp> StorageBoxFetchSilverRsp(
            CSStorageBoxFetchSilverRsp structure)
        {
            return new CsTPacket<CSStorageBoxFetchSilverRsp>(CS_CMD_ID.S2C_CMD_SILVERBOX_FETCH_RSP, structure);
        }

        /// <summary>
        /// 银币收纳箱数据同步-通知
        /// </summary>
        public static CsTPacket<CSStorageBoxSyncSilverDataNtf> StorageBoxSyncSilverDataNtf(
            CSStorageBoxSyncSilverDataNtf structure)
        {
            return new CsTPacket<CSStorageBoxSyncSilverDataNtf>(CS_CMD_ID.S2C_CMD_SILVERBOX_SYNC_DATA_NOTIFY,
                structure);
        }

        /// <summary>
        /// 新手引导书 设置自动打开标识请求
        /// </summary>
        public static CsTPacket<CSGuideBookAutoFirstOpenReq> GuideBookAutoFirstOpenReq(
            CSGuideBookAutoFirstOpenReq structure)
        {
            return new CsTPacket<CSGuideBookAutoFirstOpenReq>(CS_CMD_ID.C2S_CMD_GUIDE_BOOK_AUTO_FIRST_OPEN_REQ,
                structure);
        }

        /// <summary>
        /// 新手引导书 设置自动打开标识回应
        /// </summary>
        public static CsTPacket<SCGuideBookAutoFirstOpenRsp> GuideBookAutoFirstOpenRsp(
            SCGuideBookAutoFirstOpenRsp structure)
        {
            return new CsTPacket<SCGuideBookAutoFirstOpenRsp>(CS_CMD_ID.S2C_CMD_GUIDE_BOOK_AUTO_FIRST_OPEN_RSP,
                structure);
        }

        /// <summary>
        /// 新手引导书 领取奖励请
        /// </summary>
        public static CsTPacket<CSGuideBookGetChapterRewardReq> GuideBookGetChapterRewardReq(
            CSGuideBookGetChapterRewardReq structure)
        {
            return new CsTPacket<CSGuideBookGetChapterRewardReq>(CS_CMD_ID.C2S_CMD_GUIDE_BOOK_GET_CHAPTER_REWARD_REQ,
                structure);
        }

        /// <summary>
        /// 新手引导书 领取奖励回应
        /// </summary>
        public static CsTPacket<SCGuideBookGetChapterRewardRsp> GuideBookGetChapterRewardRsp(
            SCGuideBookGetChapterRewardRsp structure)
        {
            return new CsTPacket<SCGuideBookGetChapterRewardRsp>(CS_CMD_ID.S2C_CMD_GUIDE_BOOK_GET_CHAPTER_REWARD_RSP,
                structure);
        }

        /// <summary>
        /// 新手引导书完成任务通知
        /// </summary>
        public static CsTPacket<S2CGuideBookActionFinishNtf> GuideBookActionFinishNtf(
            S2CGuideBookActionFinishNtf structure)
        {
            return new CsTPacket<S2CGuideBookActionFinishNtf>(CS_CMD_ID.S2C_CMD_GUIDE_BOOK_ACTION_FINISH_NTF,
                structure);
        }

        /// <summary>
        /// 设置新手引导选择的武器请求
        /// </summary>
        public static CsTPacket<CSGuideBookSetWeaponIdReq> GuideBookSetWeaponIdReq(CSGuideBookSetWeaponIdReq structure)
        {
            return new CsTPacket<CSGuideBookSetWeaponIdReq>(CS_CMD_ID.C2S_CMD_GUIDE_BOOK_SET_WEAPON_ID_REQ, structure);
        }

        /// <summary>
        /// 设置新手引导选择的武器响应
        /// </summary>
        public static CsTPacket<CSGuideBookSetWeaponIdRsp> GuideBookSetWeaponIdRsp(CSGuideBookSetWeaponIdRsp structure)
        {
            return new CsTPacket<CSGuideBookSetWeaponIdRsp>(CS_CMD_ID.S2C_CMD_GUIDE_BOOK_SET_WEAPON_ID_RSP, structure);
        }

        /// <summary>
        /// 设置新手引导章节是否是新开启的
        /// </summary>
        public static CsTPacket<CSGuideBookSetNewReq> GuideBookSetNewReq(CSGuideBookSetNewReq structure)
        {
            return new CsTPacket<CSGuideBookSetNewReq>(CS_CMD_ID.C2S_CMD_GUIDE_BOOK_SET_NEW_REQ, structure);
        }

        /// <summary>
        /// 设置新手引导章节是否是新开启的响应
        /// </summary>
        public static CsTPacket<CSGuideBookSetNewRsp> GuideBookSetNewRsp(CSGuideBookSetNewRsp structure)
        {
            return new CsTPacket<CSGuideBookSetNewRsp>(CS_CMD_ID.S2C_CMD_GUIDE_BOOK_SET_NEW_RSP, structure);
        }

        /// <summary>
        /// 获取随机关卡请求
        /// </summary>
        public static CsTPacket<CSDemonTrialGetLevelsReq> DemonTrialGetLevelsReq(CSDemonTrialGetLevelsReq structure)
        {
            return new CsTPacket<CSDemonTrialGetLevelsReq>(CS_CMD_ID.C2S_CMD_DEMON_TRIAL_GET_LEVELS_REQ, structure);
        }

        /// <summary>
        /// 获取随机关卡响应
        /// </summary>
        public static CsTPacket<SCDemonTrialGetLevelsRsp> DemonTrialGetLevelsRsp(SCDemonTrialGetLevelsRsp structure)
        {
            return new CsTPacket<SCDemonTrialGetLevelsRsp>(CS_CMD_ID.S2C_CMD_DEMON_TRIAL_GET_LEVELS_RSP, structure);
        }

        /// <summary>
        /// 最小通关时间
        /// </summary>
        public static CsTPacket<CSUpdateLevelMinTimeNtf> CSUpdateLevelMinTimeNtf(CSUpdateLevelMinTimeNtf structure)
        {
            return new CsTPacket<CSUpdateLevelMinTimeNtf>(CS_CMD_ID.CS_CMD_LEVEL_PASS_MIN_TIME_NTF, structure);
        }

        /// <summary>
        /// 获取关卡最短时间请求
        /// </summary>
        public static CsTPacket<CSDemonTrialGetLevelPassTimeReq> DemonTrialGetLevelPassTimeReq(
            CSDemonTrialGetLevelPassTimeReq structure)
        {
            return new CsTPacket<CSDemonTrialGetLevelPassTimeReq>(
                CS_CMD_ID.C2S_CMD_DEMON_TRIAL_GET_LEVELS_PASS_TIME_REQ, structure);
        }

        /// <summary>
        /// 获取关卡最短时间响应
        /// </summary>
        public static CsTPacket<SCDemonTrialGetLevelPassTimeRsp> DemonTrialGetLevelPassTimeRsp(
            SCDemonTrialGetLevelPassTimeRsp structure)
        {
            return new CsTPacket<SCDemonTrialGetLevelPassTimeRsp>(
                CS_CMD_ID.S2C_CMD_DEMON_TRIAL_GET_LEVELS_PASS_TIME_RSP, structure);
        }

        /// <summary>
        /// 机密研究院手动刷新 客户端->服务端
        /// </summary>
        public static CsTPacket<C2SSecretResearchLabHandleRefreshReq> SecretResearchLabHandleRefreshReq(
            C2SSecretResearchLabHandleRefreshReq structure)
        {
            return new CsTPacket<C2SSecretResearchLabHandleRefreshReq>(
                CS_CMD_ID.C2S_CMD_SECRET_RESEARCH_LAB_HANDLE_REFRESH_REQ, structure);
        }

        /// <summary>
        /// 机密研究院手动刷新 服务端->客户端
        /// </summary>
        public static CsTPacket<S2CSecretResearchLabHandleRefreshRsp> SecretResearchLabHandleRefreshRsp(
            S2CSecretResearchLabHandleRefreshRsp structure)
        {
            return new CsTPacket<S2CSecretResearchLabHandleRefreshRsp>(
                CS_CMD_ID.S2C_CMD_SECRET_RESEARCH_LAB_HANDLE_REFRESH_RSP, structure);
        }

        /// <summary>
        /// 机密研究院研究 客户端->服务端
        /// </summary>
        public static CsTPacket<C2SSecretResearchLabResearchReq> SecretResearchLabResearchReq(
            C2SSecretResearchLabResearchReq structure)
        {
            return new CsTPacket<C2SSecretResearchLabResearchReq>(CS_CMD_ID.C2S_CMD_SECRET_RESEARCH_LAB_RESEARCH_REQ,
                structure);
        }

        /// <summary>
        /// 机密研究院研究 服务端->客户端
        /// </summary>
        public static CsTPacket<S2CSecretResearchLabResearchRsp> SecretResearchLabResearchRsp(
            S2CSecretResearchLabResearchRsp structure)
        {
            return new CsTPacket<S2CSecretResearchLabResearchRsp>(CS_CMD_ID.S2C_CMD_SECRET_RESEARCH_LAB_RESEARCH_RSP,
                structure);
        }

        /// <summary>
        /// 机密研究院每日刷新 服务端->客户端
        /// </summary>
        public static CsTPacket<S2CSecretResearchLabDaliyRefreshRsp> SecretResearchLabDaliyRefreshRsp(
            S2CSecretResearchLabDaliyRefreshRsp structure)
        {
            return new CsTPacket<S2CSecretResearchLabDaliyRefreshRsp>(
                CS_CMD_ID.S2C_CMD_SECRET_RESEARCH_LAB_DALIY_REFRESH_RSP, structure);
        }

        /// <summary>
        /// 机密研究院定时刷新 服务端->客户端
        /// </summary>
        public static CsTPacket<S2CSecretResearchLabClockRefreshRsp> SecretResearchLabClockRefreshRsp(
            S2CSecretResearchLabClockRefreshRsp structure)
        {
            return new CsTPacket<S2CSecretResearchLabClockRefreshRsp>(
                CS_CMD_ID.S2C_CMD_SECRET_RESEARCH_LAB_CLOCK_REFRESH_RSP, structure);
        }

        /// <summary>
        /// 机密研究院数据同步 服务端->客户端
        /// </summary>
        public static CsTPacket<S2CSecretResearchLabDataSynchronizationRsp> SecretResearchLabDataSynchronizationRsp(
            S2CSecretResearchLabDataSynchronizationRsp structure)
        {
            return new CsTPacket<S2CSecretResearchLabDataSynchronizationRsp>(
                CS_CMD_ID.S2C_CMD_SECRET_RESEARCH_LAB_DATA_SYNCHRONIZATION_RSP, structure);
        }

        /// <summary>
        /// 收集卡片
        /// </summary>
        public static CsTPacket<CSCollectCardReq> PhyCardCollectCardReq(CSCollectCardReq structure)
        {
            return new CsTPacket<CSCollectCardReq>(CS_CMD_ID.C2S_CMD_PHY_CARD_COLLECT_CARD_REQ, structure);
        }

        /// <summary>
        /// 收集卡片
        /// </summary>
        public static CsTPacket<SCCollectCardRsp> PhyCardCollectCardRsp(SCCollectCardRsp structure)
        {
            return new CsTPacket<SCCollectCardRsp>(CS_CMD_ID.S2C_CMD_PHY_CARD_COLLECT_CARD_RSP, structure);
        }

        /// <summary>
        /// 兑换实体卡片
        /// </summary>
        public static CsTPacket<CSExchangePhyCardReq> PhyCardExchangePhyCardReq(CSExchangePhyCardReq structure)
        {
            return new CsTPacket<CSExchangePhyCardReq>(CS_CMD_ID.C2S_CMD_PHY_CARD_EXCHANGE_PHY_CARD_REQ, structure);
        }

        /// <summary>
        /// 兑换实体卡片
        /// </summary>
        public static CsTPacket<SCExchangePhyCardRsp> PhyCardExchangePhyCardRsp(SCExchangePhyCardRsp structure)
        {
            return new CsTPacket<SCExchangePhyCardRsp>(CS_CMD_ID.S2C_CMD_PHY_CARD_EXCHANGE_PHY_CARD_RSP, structure);
        }

        /// <summary>
        /// 兑换卡片奖励
        /// </summary>
        public static CsTPacket<CSExchangeCardRewardReq> PhyCardExchangeCardRewardReq(CSExchangeCardRewardReq structure)
        {
            return new CsTPacket<CSExchangeCardRewardReq>(CS_CMD_ID.C2S_CMD_PHY_CARD_EXCHANGE_CARD_REWARD_REQ,
                structure);
        }

        /// <summary>
        /// 兑换卡片奖励
        /// </summary>
        public static CsTPacket<SCExchangeCardRewardRsp> PhyCardExchangeCardRewardRsp(SCExchangeCardRewardRsp structure)
        {
            return new CsTPacket<SCExchangeCardRewardRsp>(CS_CMD_ID.S2C_CMD_PHY_CARD_EXCHANGE_CARD_REWARD_RSP,
                structure);
        }

        /// <summary>
        /// 卡片信息变更
        /// </summary>
        public static CsTPacket<SCCardInfoChangeNtf> PhyCardCardInfoChangeNtf(SCCardInfoChangeNtf structure)
        {
            return new CsTPacket<SCCardInfoChangeNtf>(CS_CMD_ID.S2C_CMD_PHY_CARD_CARD_INFO_CHANGE_NTF, structure);
        }

        /// <summary>
        /// 连接验证消息
        /// </summary>
        public static CsTPacket<CSShakeHand> ShakeHand(CSShakeHand structure)
        {
            return new CsTPacket<CSShakeHand>(CS_CMD_ID.CS_CMD_SYSTEM_SHAKEHAND, structure);
        }
    }
}